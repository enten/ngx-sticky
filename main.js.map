{"version":3,"sources":["webpack:///./projects/ngx-sticky/src/lib/sticky-container.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-engine.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.module.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.providers.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.service.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.utils.ts","webpack:///./projects/ngx-sticky/src/public_api.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, ElementRef, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NgxStickyService } from './sticky.service';\nimport { NgxStickyContainer } from './sticky.types';\nimport { coerceNumberProperty } from './sticky.utils';\n\n\n/**\n * @description\n * Defines a sticky container.\n *\n * @ngModule NgxStickyModule\n * @publicApi\n */\n@Directive({\n  selector: '[ngxStickyContainer], [ngx-sticky-container], ngx-sticky-container',\n})\nexport class NgxStickyContainerDirective implements NgxStickyContainer {\n\n  /**\n   * Defines offset top inside the sticky container.\n   */\n  @Input()\n  get offsetTop() {\n    return this.offsetTop$.getValue();\n  }\n  set offsetTop(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (value !== this.offsetTop) {\n      this.offsetTop$.next(value);\n      this.update(true);\n    }\n  }\n  offsetTop$ = new BehaviorSubject<number>(0);\n\n  /**\n   * Defines offset bottom inside the sticky container.\n   */\n  @Input()\n  get offsetBottom() {\n    return this.offsetBottom$.getValue();\n  }\n  set offsetBottom(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (value !== this.offsetBottom) {\n      this.offsetBottom$.next(value);\n      this.update(true);\n    }\n  }\n  offsetBottom$ = new BehaviorSubject<number>(0);\n\n  /**\n   * Returns HTMLElement of the sticky container.\n   */\n  get element(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    readonly stickyService: NgxStickyService,\n    readonly elementRef: ElementRef<HTMLElement>,\n  ) { }\n\n  /**\n   * Updates stickies of the sticky container.\n   *\n   * @param fastCheck Fast update.\n   */\n  update(fastCheck?: boolean) {\n    this.stickyService.updateContainer(this, fastCheck);\n  }\n}\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport {\n  NgxSticky,\n  NgxStickyGhostStyle,\n  NgxStickyOffsets,\n  NgxStickyState,\n  NgxStickyStyle,\n} from './sticky.types';\nimport {\n  getElementAbsoluteRect,\n  getElementRelativeRect,\n  getViewportScrollPosition,\n  getViewportSize,\n  getWindowRef,\n  setElementStyles,\n} from './sticky.utils';\n\n\n/**\n * @description\n * Defines a sticky engine. Implemented in universal way.\n *\n * @ngModule NgxStickyModule\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStickyEngine {\n  readonly renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Destroys a sticky: refresh to state `null` and remove ghost.\n   *\n   * @param sticky Sticky to destroy\n   */\n  destroySticky(sticky: NgxSticky): void {\n    this.refreshSticky(sticky, null);\n    this.removeStickyGhost(sticky);\n\n    sticky.styleOriginal = null;\n  }\n\n  /**\n   * Determines sticky state.\n   *\n   * @param sticky Sticky\n   * @param scrollTop Scroll top position\n   * @param offsets Top/bottom offsets\n   * @returns Sticky state\n   */\n  determineStickyState(sticky: NgxSticky, scrollTop: number, offsets?: NgxStickyOffsets): NgxStickyState {\n    const win = getWindowRef();\n\n    if (!win) {\n      return null;\n    }\n\n    if (!offsets) {\n      offsets = { top: 0, bottom: 0 };\n    }\n\n    const container = sticky.container;\n    const ghost = sticky.spot || sticky.ghost;\n    const ghostRect = getElementAbsoluteRect(ghost);\n    const positionBottom = sticky.position === 'bottom';\n    const spotHeight = sticky.spot ? ghostRect.height : 0;\n    const viewportSize = getViewportSize(win);\n    let state: NgxStickyState = 'normal';\n    let sticked = false;\n    let stickedOffset = 0;\n\n    if (positionBottom) {\n      stickedOffset = ghostRect.top + offsets.top - scrollTop - viewportSize.height + ghostRect.height - spotHeight;\n    } else {\n      stickedOffset = scrollTop - ghostRect.top + offsets.top - spotHeight;\n    }\n\n    if (stickedOffset > 0) {\n      state = 'sticked';\n      sticked = true;\n    }/* else if (sticky.spot) {\n      const stickyRect = getElementAbsoluteRect(sticky.ghost);\n\n      if (positionBottom) {\n        stickedOffset = stickyRect.top + offsets.top - scrollTop - viewportSize.height;\n      } else {\n        stickedOffset = scrollTop - stickyRect.top + offsets.top - stickyRect.height;\n      }\n\n      if (stickedOffset > 0) {\n        state = 'presticked';\n      }\n    }*/\n\n    if (sticked && container) {\n      const offset = offsets.top + offsets.bottom;\n      const containerRect = getElementAbsoluteRect(container.element);\n      const elementHeight = getElementAbsoluteRect(sticky.element).height;\n\n      if (positionBottom) {\n        if (containerRect.top > scrollTop + viewportSize.height - elementHeight - offset) {\n          state = 'stucked';\n        }\n      } else {\n        if (containerRect.top + containerRect.height < scrollTop + elementHeight + offset) {\n          state = 'stucked';\n        }\n      }\n    }\n\n    return state;\n  }\n\n  /**\n   * Returns offset to an element by considering stickies.\n   *\n   * @param stickies Sticky registry\n   * @param element Target element\n   * @param offsetTop Top offset\n   * @returns Offset top\n   */\n  getScrollTopOffset(stickies: NgxSticky[], element: HTMLElement, offsetTop?: number): number {\n    const elementRect = getElementAbsoluteRect(element);\n    const scrollTopPosition = this.getScrollTopPosition(stickies, element, offsetTop);\n\n    return elementRect.top - scrollTopPosition;\n  }\n\n  /**\n   * Returns scroll top position to scroll to an element and considering stickies.\n   *\n   * @param stickies Sticky registry\n   * @param element Target element\n   * @param offsetTop Top offset\n   * @returns Scroll top position\n   */\n  getScrollTopPosition(stickies: NgxSticky[], element: HTMLElement, offsetTop?: number): number {\n    if (!offsetTop) {\n      offsetTop = 0;\n    }\n\n    const elementRect = getElementAbsoluteRect(element);\n    let scrollTop = elementRect.top - offsetTop;\n    let maxStickyUnstacked = 0;\n\n    for (const _sticky of stickies) {\n      if (\n        // skip stickies with enable is false\n        !_sticky.enable\n        // skip stickies with hidden is true\n        || _sticky.hidden\n        // skip stickies with position is bottom\n        || _sticky.position !== 'top'\n      ) {\n        continue;\n      }\n\n      const stickyState = this.determineStickyState(_sticky, scrollTop);\n\n      // when sticky has state sticked or stucked\n      if (stickyState === 'sticked') {\n        // substract height from stickies with stack is true\n        if (_sticky.stack) {\n          scrollTop -= _sticky.element.offsetHeight;\n        // update the biggest sticky with stack is false\n        } else if (_sticky.element.offsetHeight > maxStickyUnstacked) {\n          maxStickyUnstacked = _sticky.element.offsetHeight;\n        }\n      }\n    }\n\n    scrollTop -= maxStickyUnstacked;\n\n    return scrollTop;\n  }\n\n  /**\n   * Returns style of a sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  getStickyGhostStyle(sticky: NgxSticky): NgxStickyGhostStyle {\n    const win = getWindowRef();\n\n    if (!sticky.ghost || !win) {\n      return null;\n    }\n\n    const element = sticky.element;\n    const elementStyle = win.getComputedStyle(element);\n\n    const ghostHeight = element.offsetHeight\n      // substract vertical borders\n      - (parseFloat(elementStyle.borderTopWidth) || 0)\n      - (parseFloat(elementStyle.borderBottomWidth) || 0)\n      // substract vertical paddings\n      - (parseFloat(elementStyle.paddingTop) || 0)\n      - (parseFloat(elementStyle.paddingBottom) || 0);\n\n    const styles: NgxStickyGhostStyle = {\n      width: element.style.width,\n      height: `${ghostHeight}px`,\n      borderTopWidth: elementStyle.borderTopWidth,\n      borderBottomWidth: elementStyle.borderBottomWidth,\n      borderLeftWidth: elementStyle.borderLeftWidth,\n      borderRightWidth: elementStyle.borderRightWidth,\n      marginTop: elementStyle.marginTop,\n      marginBottom: elementStyle.marginBottom,\n      marginLeft: elementStyle.marginLeft,\n      marginRight: elementStyle.marginRight,\n      paddingTop: elementStyle.paddingTop,\n      paddingBottom: elementStyle.paddingBottom,\n      paddingLeft: elementStyle.paddingLeft,\n      paddingRight: elementStyle.paddingRight,\n    };\n\n    if (sticky.spot || sticky.orbit) {\n      styles.width = element.style.width || elementStyle.width;\n    }\n\n    if (sticky.orbit) {\n      styles.position = 'absolute';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns siblings of the given sticky.\n   *\n   * @param stickies Sticky registry\n   * @param sticky Sticky\n   */\n  getStickySiblings(stickies: NgxSticky[], sticky: NgxSticky): NgxSticky[] {\n    // reverse stickies when sticky position is bottom\n    if (sticky.position !== 'top') {\n      stickies = [ ...stickies ].reverse();\n    }\n\n    return stickies.filter(_sticky => this.isStickySibling(sticky, _sticky));\n  }\n\n  /**\n   * Returns top/bottom offsets for siblings of the given sticky.\n   *\n   * @param stickies Sticky registry\n   * @param sticky Sticky\n   * @returns Top/bottom offsets of sticky siblings\n   */\n  getSiblingOffets(stickies: NgxSticky[], sticky: NgxSticky): NgxStickyOffsets {\n    const offsets = { top: 0, bottom: 0 };\n\n    if (!sticky.enable) {\n      return offsets;\n    }\n\n    const ghostRect = getElementAbsoluteRect(sticky.spot || sticky.ghost);\n    const positionBottom = sticky.position === 'bottom';\n\n    for (const _sticky of stickies) {\n      if (\n        // skip sticky itself\n        _sticky === sticky\n        // skip stickies with enable is false\n        || !_sticky.enable\n        // skip stickies with stack is false\n        || !_sticky.stack\n        // skip stickies with hidden is true\n        || _sticky.hidden\n        // skip stickies with position isn't the same as sticky\n        || _sticky.position !== sticky.position\n        // skip stickies with state is normal\n        || _sticky.state === 'normal'\n        // skip stickies with state is stucked and not in the same sticky container\n        || (_sticky.state === 'stucked' && _sticky.container !== sticky.container)\n      ) {\n        continue;\n      }\n\n      const _ghostRect = getElementAbsoluteRect(_sticky.spot || _sticky.ghost);\n      const _elementHeight = getElementAbsoluteRect(_sticky.element).height;\n\n      // when _sticky is below (or upper for position bottom)\n      if (\n        (!positionBottom && _ghostRect.top > ghostRect.top)\n        || (positionBottom && _ghostRect.top < ghostRect.top)\n      ) {\n        // add offset bottom when stickies are in the same container\n        if (_sticky.container === sticky.container) {\n          offsets.bottom += _elementHeight;\n        }\n      } else {\n        offsets.top += _elementHeight;\n      }\n    }\n\n    if (sticky.container) {\n      const win = getWindowRef();\n      const containerStyle = win ? win.getComputedStyle(sticky.container.element) : {} as CSSStyleDeclaration;\n\n      offsets.bottom += positionBottom\n        ? sticky.container.offsetTop + (parseFloat(containerStyle.paddingTop) || 0)\n        : sticky.container.offsetBottom + (parseFloat(containerStyle.paddingBottom) || 0);\n    }\n\n    return offsets;\n  }\n\n  /**\n   * Returns styles of the given sticky and state.\n   *\n   * @param sticky Sticky\n   * @param state State\n   * @param offsets Top/bottom offsets\n   * @returns Styles of the sticky state\n   */\n  getStickyStyle(sticky: NgxSticky, state: NgxStickyState, offsets?: NgxStickyOffsets): Partial<NgxStickyStyle> {\n    const win = getWindowRef();\n\n    if (!win || !state) {\n      return null;\n    }\n\n    if (!offsets) {\n      offsets = { top: 0, bottom: 0 };\n    }\n\n    const positionBottom = sticky.position === 'bottom';\n    // const presticked = state === 'presticked';\n\n    if (state === 'normal'/* || presticked*/) {\n      // this.showGhost(sticky);\n\n      const ghostRect = getElementRelativeRect(win, sticky.ghost);\n      const ghostStyle = win.getComputedStyle(sticky.ghost);\n\n      const elementWidth = ghostRect.width\n        - ((parseFloat(ghostStyle.borderLeft) || 0) + (parseFloat(ghostStyle.borderRight) || 0))\n        - ((parseFloat(ghostStyle.paddingLeft) || 0) + (parseFloat(ghostStyle.paddingRight) || 0));\n\n      const styles = {\n        position: 'absolute',\n        width: `${elementWidth}px`,\n        top: `${ghostRect.top}px`,\n        bottom: '',\n        left: `${ghostRect.left}px`,\n        margin: '0px',\n      };\n\n      if (sticky.orbit/* || presticked */) {\n        const ghostTop = -ghostRect.height;\n\n        const ghostLeft = getElementAbsoluteRect(sticky.ghost).left;\n\n        Object.assign(styles, {\n          position: 'fixed',\n          top: !positionBottom ? `${ghostTop}px` : '',\n          bottom: positionBottom ? `${ghostTop}px` : '',\n          left: `${ghostLeft}px`,\n        });\n      }\n\n      return styles;\n    }\n\n    if (state === 'sticked') {\n      const ghostRect = getElementAbsoluteRect(sticky.ghost);\n      const ghostTop = offsets.top;\n\n      return {\n        position: 'fixed',\n        top: !positionBottom ? `${ghostTop}px` : '',\n        bottom: positionBottom ? `${ghostTop}px` : '',\n        left: `${ghostRect.left}px`,\n      };\n    }\n\n    if (state === 'stucked') {\n      const containerRect = getElementAbsoluteRect(sticky.container.element);\n      const ghostRect = getElementAbsoluteRect(sticky.ghost);\n      const parentRect = sticky.ghost.offsetParent !== sticky.container.element\n        ? getElementAbsoluteRect(sticky.ghost.offsetParent as HTMLElement)\n        : containerRect;\n\n      let elementLeft = ghostRect.left;\n      let elementTop = positionBottom\n        ? containerRect.top + offsets.bottom\n        : containerRect.top + containerRect.height - ghostRect.height - offsets.bottom;\n\n      if (parentRect) {\n        elementTop -= parentRect.top;\n        elementLeft -= parentRect.left;\n      }\n\n      return {\n        position: 'absolute',\n        top: `${elementTop}px`,\n        bottom: '',\n        left: `${elementLeft}px`,\n      };\n    }\n\n    // throw new Error(`Invalid state: ${state}`);\n    return null;\n  }\n\n  /**\n   * Hides sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  hideStickyGhost(sticky: NgxSticky): void {\n    if (!sticky.ghost) {\n      return;\n    }\n\n    this.renderer.setStyle(sticky.ghost, 'display', 'none');\n  }\n\n  /**\n   * Inserts sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  insertStickyGhost(sticky: NgxSticky): void {\n    if (!getWindowRef() || sticky.ghost) {\n      return;\n    }\n\n    sticky.ghost = this.renderer.createElement('div');\n    this.renderer.addClass(sticky.ghost, 'ngx-sticky-ghost');\n    this.renderer.setStyle(sticky.ghost, 'borderStyle', 'solid');\n    this.renderer.setStyle(sticky.ghost, 'borderColor', 'transparent');\n    this.renderer.insertBefore(sticky.element.parentElement, sticky.ghost, sticky.element);\n  }\n\n  /**\n   * Returns `true` when given stickies are sibling.\n   *\n   * @param sticky Sticky\n   * @param _sticky Sticky tested for sibling\n   */\n  isStickySibling(sticky: NgxSticky, _sticky: NgxSticky) {\n    return _sticky !== sticky\n      && _sticky.enable\n      && _sticky.position === sticky.position\n      && !_sticky.hidden;\n      // && _sticky.stack\n      // && _sticky.state !== 'normal';\n  }\n\n  /**\n   * Refreshs sticky state.\n   *\n   * @param sticky Sticky\n   * @param state State\n   * @param offsets Top/bottom offsets\n   */\n  refreshSticky(sticky: NgxSticky, state: NgxStickyState, offsets?: NgxStickyOffsets): void {\n    const win = getWindowRef();\n\n    if (!win) {\n      return;\n    }\n\n    // hide ghost and refresh original style when state is null\n    if (!state) {\n      this.hideStickyGhost(sticky);\n      this.restoreStickyStyleOriginal(sticky);\n\n      return;\n    }\n\n    this.saveStickyStyleOriginal(sticky);\n\n    // show sticky ghost when state is normal\n    if (state === 'normal') {\n      this.showStickyGhost(sticky);\n    }\n\n    const elementStyle = this.getStickyStyle(sticky, state, offsets);\n\n    setElementStyles(this.renderer, sticky.element, elementStyle);\n  }\n\n  /**\n   * Refreshs sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  refreshStickyGhost(sticky: NgxSticky): void {\n    const ghostStyle = this.getStickyGhostStyle(sticky);\n\n    setElementStyles(this.renderer, sticky.ghost, ghostStyle);\n  }\n\n  /**\n   * Removes sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  removeStickyGhost(sticky: NgxSticky): void {\n    if (sticky.ghost) {\n      // this.renderer.removeChild(sticky.ghost.parentElement, sticky.ghost);\n      sticky.ghost.remove();\n      sticky.ghost = null;\n    }\n  }\n\n  /**\n   * Restore original styles of the given sticky.\n   *\n   * @param sticky Sticky\n   */\n  restoreStickyStyleOriginal(sticky: NgxSticky): void {\n    setElementStyles(this.renderer, sticky.element, sticky.styleOriginal);\n  }\n\n  /**\n   * Saves origin styles of the given sticky.\n   *\n   * @param sticky Sticky\n   */\n  saveStickyStyleOriginal(sticky: NgxSticky): void {\n    if (!sticky.styleOriginal) {\n      sticky.styleOriginal = {\n        position: sticky.element.style.position,\n        width: sticky.element.style.width,\n        top: sticky.element.style.top,\n        bottom: sticky.element.style.bottom,\n        left: sticky.element.style.left,\n        margin: sticky.element.style.margin,\n        marginTop: sticky.element.style.marginTop,\n        marginRight: sticky.element.style.marginRight,\n        marginBottom: sticky.element.style.marginBottom,\n        marginLeft: sticky.element.style.marginLeft,\n      };\n    }\n  }\n\n  /**\n   * Shows sticky ghost.\n   *\n   * @param sticky Sticky\n   */\n  showStickyGhost(sticky: NgxSticky): void {\n    if (!sticky.ghost) {\n      this.insertStickyGhost(sticky);\n      this.refreshStickyGhost(sticky);\n    } else if (sticky.ghost.style.display === 'none') {\n      this.renderer.setStyle(sticky.ghost, 'display', 'block');\n      this.refreshStickyGhost(sticky);\n    }\n  }\n\n  /**\n   * Update sticky.\n   *\n   * @param stickies Sticky registry\n   * @param sticky Sticky\n   * @param fastCheck Fast update\n   */\n  updateSticky(stickies: NgxSticky[], sticky: NgxSticky, fastCheck?: boolean): void {\n    const win = getWindowRef();\n\n    if (!win) {\n      return;\n    }\n\n    // refresh sticky state to null when sticky is hidden\n    if (sticky.hidden) {\n      this.refreshSticky(sticky, null);\n\n      return;\n    }\n\n    // refresh sticky state to null when sticky enable is false\n    if (!sticky.enable) {\n      this.refreshSticky(sticky, null);\n\n      // update siblings when sticky enable is false and have a previous state\n      if (sticky.state) {\n        sticky.state = null;\n\n        this.getStickySiblings(stickies, sticky).forEach(_sticky => {\n          this.updateSticky(stickies, _sticky, fastCheck);\n        });\n      }\n\n      return;\n    }\n\n    let setStickyNormal = false;\n\n    // refresh sticky state to null and after to normal when fastCheck is false\n    if (!fastCheck) {\n      this.refreshSticky(sticky, null);\n      this.refreshSticky(sticky, 'normal');\n\n      setStickyNormal = true;\n    // refresh sticky state to normal only when fastCheck is true and sticky has no previous state\n    } else if (!sticky.state) {\n      this.refreshSticky(sticky, 'normal');\n\n      setStickyNormal = true;\n    }\n\n    const previousState = sticky.state;\n    const offsets = this.getSiblingOffets(stickies, sticky);\n    const scrollTop = getViewportScrollPosition(win).top;\n    const state = this.determineStickyState(sticky, scrollTop, offsets);\n    const stateChanged = state !== previousState;\n\n    // animate sticking when state is sticked and sticky has spot or is an orbit\n    if (state === 'sticked' && (sticky.spot || sticky.orbit)) {\n      const stickyRect = getElementAbsoluteRect(sticky.ghost);\n      const ghostRect = sticky.spot ? getElementAbsoluteRect(sticky.spot) : stickyRect;\n      const spotHeight = sticky.spot ? ghostRect.height : 0;\n      let stickedOffset = 0;\n\n      if (sticky.position === 'bottom') {\n        const viewportSize = getViewportSize(win);\n\n        stickedOffset = ghostRect.top + offsets.top - scrollTop - viewportSize.height + ghostRect.height - spotHeight;\n      } else {\n        stickedOffset = scrollTop - ghostRect.top + offsets.top - spotHeight;\n      }\n\n      if (stickedOffset < stickyRect.height) {\n        offsets.top -= stickyRect.height - stickedOffset;\n      }\n    }\n\n    if (\n      // refresh sticky when it has spot\n      sticky.spot\n      // or refresh sticky when is orbit\n      || sticky.orbit\n      // or refresh sticky when state hasn't changed but sticky was refresh to normal state\n      || (!stateChanged && setStickyNormal)\n      // or refresh sticky when state has changed and state isn't normal\n      // or state state has changed to normal state and sticky isn't already refresh\n      || (stateChanged && (state !== 'normal' || !setStickyNormal))\n    ) {\n      this.refreshSticky(sticky, state, offsets);\n    }\n\n    // update sticky state when changed\n    if (stateChanged) {\n      sticky.state = state;\n    }\n\n    // update siblings when sticky has previous state and no state\n    // or when sticky has state and no previous state\n    if ((previousState && !state) || (!previousState && state)) {\n      this.getStickySiblings(stickies, sticky).forEach(_sticky => {\n        this.updateSticky(stickies, _sticky, fastCheck);\n      });\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  forwardRef,\n} from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, Subscription, animationFrameScheduler, merge } from 'rxjs';\nimport { mapTo, share, takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyService } from './sticky.service';\nimport { NgxSticky, NgxStickyPosition, NgxStickyState } from './sticky.types';\nimport { coerceBooleanProperty, fromImageLoadEvents, getWindowRef } from './sticky.utils';\n\n\n/**\n * @description\n * Defines a sticky.\n *\n * @ngModule NgxStickyModule\n * @publicApi\n */\n@Directive({\n  selector: '[ngxSticky], [ngx-sticky], ngx-sticky',\n})\nexport class NgxStickyDirective implements NgxSticky, AfterViewInit, OnDestroy, OnInit {\n  /**\n   * Enable/disable sticky.\n   *\n   * Default value: `true`\n   */\n  @Input()\n  get enable() {\n    return this.enable$.getValue();\n  }\n  set enable(value: boolean) {\n    value = coerceBooleanProperty(value);\n\n    if (value !== this.enable) {\n      this.enable$.next(value);\n    }\n  }\n  enable$ = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Indicate sticky element is an orbit.\n   *\n   * An orbit is a sticky element which isn't visible until\n   * it's sticked.\n   *\n   * Generally an orbit spot on another element to be sticked.\n   *\n   * Default value: `false`\n   */\n  @Input()\n  get orbit() {\n    return this.orbit$.getValue();\n  }\n  set orbit(value: boolean) {\n    value = coerceBooleanProperty(value);\n\n    if (value !== this.orbit) {\n      this.orbit$.next(value);\n    }\n  }\n  orbit$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Position of the sticky; one of 'top' or 'bottom'.\n   *\n   * Default value: `'top'`\n   */\n  @Input()\n  get position() {\n    return this.position$.getValue();\n  }\n  set position(value: NgxStickyPosition) {\n    value = value === 'bottom' ? 'bottom' : 'top';\n\n    if (value !== this.position) {\n      this.position$.next(value);\n    }\n  }\n  position$ = new BehaviorSubject<NgxStickyPosition>('top');\n\n  /**\n   * Reference to an element used to determine sticky state.\n   *\n   * The sticky directive will stick element only when spot\n   * isn't visible.\n   *\n   * Default value: `null`\n   */\n  @Input()\n  get spot() {\n    return this.spot$.getValue();\n  }\n  set spot(value: HTMLElement | null) {\n    if (value !== this.spot) {\n      this.spot$.next(value);\n    }\n  }\n  spot$ = new BehaviorSubject<HTMLElement | null>(null);\n\n  /**\n   * Enable/disable sticky element to be stacked with previous sticked elements.\n   *\n   * Default value: `true`\n   */\n  @Input()\n  get stack() {\n    return this.stack$.getValue();\n  }\n  set stack(value: boolean) {\n    value = coerceBooleanProperty(value);\n\n    if (value !== this.stack) {\n      this.stack$.next(value);\n    }\n  }\n  stack$ = new BehaviorSubject<boolean>(true);\n\n  /**\n   * Emit sticky itself when its state changed.\n   */\n  @Output()\n  readonly sitkcyChange = new EventEmitter<NgxSticky>();\n\n  @HostBinding('class.ngx-sticky')\n  get cssClassSticky() { return this.enable; }\n\n  @HostBinding('class.ngx-sticky--has-spot')\n  get cssClassStickyHasSpot() { return this.enable && !!this.spot; }\n\n  @HostBinding('class.ngx-sticky--is-orbit')\n  get cssClassStickyPreticked() { return this.enable && this.orbit; }\n\n  @HostBinding('class.ngx-sticky--top')\n  get cssClassStickyTop() { return this.enable && this.position !== 'bottom'; }\n\n  @HostBinding('class.ngx-sticky--bottom')\n  get cssClassStickyBottom() { return this.enable && this.position === 'bottom'; }\n\n  @HostBinding('class.ngx-sticky--normal')\n  get cssClassStickyNormal() { return this.enable && this.state === 'normal'; }\n\n  // @HostBinding('class.ngx-sticky--presticked')\n  // get cssClassStickyPresticked() { return this.enable && this.state === 'presticked'; }\n\n  @HostBinding('class.ngx-sticky--sticked')\n  get cssClassStickySticked() { return this.enable && this.state === 'sticked'; }\n\n  @HostBinding('class.ngx-sticky--stucked')\n  get cssClassStickyStucked() { return this.enable && this.state === 'stucked'; }\n\n  /**\n   * Returns HTMLElement of the sticky.\n   */\n  get element() {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Returns `true` when element isn't visible.\n   */\n  get hidden() {\n    return !(this.elementRef && this.elementRef.nativeElement && this.elementRef.nativeElement.offsetHeight);\n  }\n\n  /**\n   * State of the sticky.\n   */\n  get state() {\n    return this.state$.getValue();\n  }\n  set state(value: NgxStickyState) {\n    this.state$.next(value);\n  }\n  state$ = new BehaviorSubject<NgxStickyState>(null);\n\n  /** Emits when the component is destroyed. */\n  readonly destroyed$ = new Subject<void>();\n\n  // ghost: HTMLElement;\n  // styleOriginal: NgxStickyStyle;\n\n  monitoring$: Observable<boolean>;\n  monitoringSubscription: Subscription;\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => NgxStickyContainerDirective)) readonly container: NgxStickyContainerDirective,\n    readonly stickyService: NgxStickyService,\n    readonly elementRef: ElementRef<HTMLElement>,\n    readonly renderer: Renderer2,\n    readonly changeDetectorRef: ChangeDetectorRef,\n    readonly ngZone: NgZone,\n  ) { }\n\n  ngOnInit() {\n    this.state$.subscribe(_state => this.ngZone.run(() => {\n      this.changeDetectorRef.detectChanges();\n\n      this.sitkcyChange.next(this);\n    }));\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n\n    if (this.monitoringSubscription) {\n      this.monitoringSubscription.unsubscribe();\n      this.monitoringSubscription = null;\n    }\n\n    this.stickyService.unregister(this);\n  }\n\n  ngAfterViewInit() {\n    this.stickyService.register(this);\n\n    this.ngZone.runOutsideAngular(() => this._initMonitoring());\n  }\n\n  update(fastCheck?: boolean) {\n    this.stickyService.update(this, fastCheck);\n  }\n\n  _initMonitoring(): void {\n    const win = getWindowRef();\n\n    if (!win) {\n      return null;\n    }\n\n    if (!this.monitoring$) {\n      this.monitoring$ = merge(\n        this.enable$,\n        this.orbit$,\n        this.position$,\n        this.stack$,\n        this.spot$,\n        fromImageLoadEvents(this.elementRef.nativeElement),\n        fromImageLoadEvents(this.spot),\n      ).pipe(\n        takeUntil(this.destroyed$),\n        // Arbitrary throttle time to animation frame, less than a frame at 60fps (around 16.67ms)\n        throttleTime(0, animationFrameScheduler),\n        // Arbitrary set fastCheck to false\n        mapTo(false),\n        share(),\n      );\n    }\n\n    if (!this.monitoringSubscription) {\n      this.monitoringSubscription = this.monitoring$.subscribe(fastCheck => {\n        this.update(fastCheck);\n      });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyDirective } from './sticky.directive';\n\n/**\n * @description\n * Adds sticky directives and providers.\n *\n * Managing sticky elements is one of the hardest parts of building web applications.\n *\n * The NgxStickyDirective try to solve problems when maning sticky elements.\n *\n * @usageNotes\n * NgxStickyModule can be imported multiple times: once per lazily-loaded bundle.\n *\n * ```\n * @NgModule({\n *   imports: [NgxStickyModule]\n * })\n * class MyNgModule {}\n * ```\n *\n * @publicApi\n */\n@NgModule({\n  declarations: [\n    NgxStickyDirective,\n    NgxStickyContainerDirective,\n  ],\n  exports: [\n    NgxStickyDirective,\n    NgxStickyContainerDirective,\n  ],\n  imports: [ CommonModule ],\n})\nexport class NgxStickyModule { }\n","import { InjectionToken } from '@angular/core';\nimport { NgxSticky } from './sticky.types';\n\n\n/**\n * A DI Token representing the list of stickies registered with NgxStickyService.\n\n * @publicApi\n */\nexport const NGX_STICKY_REGISTRY = new InjectionToken<NgxSticky[]>('NGX_STICKY_REGISTRY', {\n  providedIn: 'root',\n  factory: NGX_STICKY_REGISTRY_FACTORY,\n});\n\n\n/**\n * Factory used to create an empty sticky registy.\n */\nexport function NGX_STICKY_REGISTRY_FACTORY(): NgxSticky[] {\n  return [];\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { Observable, Subject, Subscription, animationFrameScheduler, fromEvent, merge } from 'rxjs';\nimport { mapTo, share, takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { NgxStickyEngine } from './sticky-engine';\nimport { NGX_STICKY_REGISTRY } from './sticky.providers';\nimport { NgxSticky, NgxStickyContainer, NgxStickyOffsets, NgxStickyState } from './sticky.types';\nimport { getViewportScrollPosition, getWindowRef, queryElementSelector } from './sticky.utils';\n\n/**\n * @description\n * Defines a sticky manager. Implemented in universal way.\n *\n * @ngModule NgxStickyModule\n * @publicApi\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStickyService {\n  /** Emits when the service is destroyed. */\n  readonly destroyed$ = new Subject<void>();\n\n  monitoringAll$: Observable<boolean>;\n  monitoringAllSubscription: Subscription;\n\n  constructor(\n    @Inject(NGX_STICKY_REGISTRY) readonly stickies: NgxSticky[],\n    readonly engine: NgxStickyEngine,\n    readonly ngZone: NgZone,\n  ) {\n    this.init();\n  }\n\n  /**\n   * Initializes service.\n   */\n  init(): void {\n    this.ngZone.runOutsideAngular(() => this._initMonitoringAll());\n  }\n\n  /**\n   * Destroys service.\n   */\n  destroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n\n    if (this.monitoringAllSubscription) {\n      this.monitoringAllSubscription.unsubscribe();\n      this.monitoringAllSubscription = null;\n    }\n\n    for (const sticky of this.stickies) {\n      this.unregister(sticky);\n    }\n  }\n\n  /**\n   * Determines sticky state.\n   *\n   * @param sticky Sticky\n   * @param scrollTop Scroll top position\n   * @param offsets Top/bottom offsets\n   * @returns Sticky state\n   */\n  determineState(sticky: NgxSticky, scrollTop: number, offsets?: NgxStickyOffsets): NgxStickyState {\n    return this.engine.determineStickyState(sticky, scrollTop, offsets);\n  }\n\n  /**\n   * Returns offset to an element by considering stickies.\n   *\n   * @param stickies Sticky registry\n   * @param element Target element\n   * @param offsetTop Top offset\n   * @returns Offset top\n   */\n  getScrollTopOffset(element: HTMLElement, offsetTop?: number): number {\n    return this.engine.getScrollTopOffset(this.stickies, element, offsetTop);\n  }\n\n  /**\n   * Returns scroll top position to scroll to an element and considering stickies.\n   *\n   * @param stickies Sticky registry\n   * @param element Target element\n   * @param offsetTop Top offset\n   * @returns Scroll top position\n   */\n  getScrollTopPosition(element: HTMLElement, offsetTop?: number): number {\n    return this.engine.getScrollTopPosition(this.stickies, element, offsetTop);\n  }\n\n  /**\n   * Returns top/bottom offsets for siblings of the given sticky.\n   *\n   * @param stickies Sticky registry\n   * @param sticky Sticky\n   * @returns Top/bottom offsets of sticky siblings\n   */\n  getSiblingOffets(sticky: NgxSticky): NgxStickyOffsets {\n    return this.engine.getSiblingOffets(this.stickies, sticky);\n  }\n\n  /**\n   * Registers sticky.\n   *\n   * @param sticky Sticky\n   */\n  register(sticky: NgxSticky): void {\n    if (this.destroyed$.isStopped) {\n      return;\n    }\n\n    if (this.stickies.indexOf(sticky) === -1) {\n      this.stickies.push(sticky);\n    }\n  }\n\n  /**\n   * Scroll to the given element and considering stickies.\n   *\n   * @param element Element\n   * @param offsetTop Top offset\n   */\n  scrollToElement(element: string | HTMLElement, offsetTop?: number): void {\n    const win = getWindowRef();\n\n    if (!win) {\n      return;\n    }\n\n    if (typeof element === 'string') {\n      element = queryElementSelector<HTMLElement>(win.document, element);\n    }\n\n    if (!element) {\n      return;\n    }\n\n    const scrollPosition = getViewportScrollPosition(win);\n    const scrollTop = this.engine.getScrollTopPosition(this.stickies, element, offsetTop);\n\n    win.scrollTo(scrollPosition.left, scrollTop);\n  }\n\n  /**\n   * Update sticky state.\n   *\n   * @param sticky Sticky\n   * @param fastCheck Fast update\n   */\n  update(sticky: NgxSticky, fastCheck?: boolean) {\n    this.engine.updateSticky(this.stickies, sticky, fastCheck);\n  }\n\n  /**\n   * Update all stickies.\n   *\n   * @param fastCheck Fast update\n   */\n  updateAll(fastCheck?: boolean): void {\n    this.stickies.forEach(_sticky => this.update(_sticky, fastCheck));\n  }\n\n  /**\n   * Update stickies in a container.\n   *\n   * @param container Sticky container\n   * @param fastCheck Fast update\n   */\n  updateContainer(container: NgxStickyContainer, fastCheck?: boolean): void {\n    const stickies = this.stickies.filter(_sticky => _sticky.container === container);\n\n    stickies.forEach(_sticky => this.update(_sticky, fastCheck));\n  }\n\n  /**\n   * Update sticky siblings.\n   *\n   * @param sticky Sticky\n   * @param fastCheck Fast update\n   */\n  updateSiblings(sticky: NgxSticky, fastCheck?: boolean): void {\n    const stickies = this.engine.getStickySiblings(this.stickies, sticky);\n\n    stickies.forEach(_sticky => this.update(_sticky, fastCheck));\n  }\n\n  /**\n   * Unregisters sticky.\n   *\n   * @param sticky Sticky\n   */\n  unregister(sticky: NgxSticky) {\n    const stickyIndex = this.stickies.indexOf(sticky);\n\n    if (stickyIndex !== -1) {\n      this.stickies.splice(stickyIndex, 1);\n    }\n\n    this.engine.destroySticky(sticky);\n  }\n\n  _initMonitoringAll(): void {\n    const win = getWindowRef();\n\n    if (!win) {\n      return null;\n    }\n\n    if (!this.monitoringAll$) {\n      this.monitoringAll$ = merge(\n        fromEvent(win, 'load').pipe(mapTo(false), share()),\n        fromEvent(win, 'orientationchange').pipe(mapTo(false), share()),\n        fromEvent(win, 'resize').pipe(mapTo(false), share()),\n        fromEvent(win, 'scroll').pipe(mapTo(true), share()),\n        animationFrameScheduler,\n      ).pipe(\n        takeUntil(this.destroyed$),\n        // Arbitrary throttle time to animation frame, less than a frame at 60fps (around 16.67ms)\n        throttleTime(0, animationFrameScheduler),\n        share(),\n      );\n    }\n\n    if (!this.monitoringAllSubscription) {\n      this.monitoringAllSubscription = this.monitoringAll$.subscribe(fastCheck => {\n        this.updateAll(fastCheck);\n      });\n    }\n  }\n}\n","import { Renderer2 } from '@angular/core';\nimport { Observable, of as observableOf } from 'rxjs';\n\n\nexport let WINDOW_REF = typeof window !== 'undefined' ? window : null;\nexport const getWindowRef = () => WINDOW_REF;\nexport const setWindowRef = (win: Window) => WINDOW_REF = win;\n\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean { // tslint:disable-line: no-any\n  return value != null && `${value}` !== 'false';\n}\n\n/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any): number; // tslint:disable-line: no-any\nexport function coerceNumberProperty<D>(value: any, fallback: D): number | D; // tslint:disable-line: no-any\nexport function coerceNumberProperty(value: any, fallbackValue = 0) { // tslint:disable-line: no-any\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nexport function _isNumberValue(value: any): boolean { // tslint:disable-line: no-any\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)); // tslint:disable-line: no-any\n}\n\n\nexport function fromImageLoadEvents(element: HTMLElement): Observable<HTMLImageElement> {\n  if (!element) {\n    return observableOf();\n  }\n\n  return new Observable<HTMLImageElement>(observable => {\n    const images: HTMLImageElement[] = [];\n    let loadListener: (event: ProgressEvent) => void;\n    let addLoadListener: (image: HTMLImageElement) => void;\n    let removeLoadListener: (image: HTMLImageElement) => void;\n\n    loadListener = (event: ProgressEvent) => {\n      const image = event.target as HTMLImageElement;\n      removeLoadListener(image);\n      observable.next(image);\n    };\n\n    addLoadListener = (image: HTMLImageElement) => {\n      images.push(image);\n      image.addEventListener('load', loadListener);\n    };\n\n    removeLoadListener = (image: HTMLImageElement) => {\n      images.splice(images.indexOf(image), 1);\n      image.removeEventListener('load', loadListener);\n    };\n\n    if (element instanceof HTMLImageElement) {\n      addLoadListener(element);\n    } else {\n      element.querySelectorAll('img').forEach(addLoadListener);\n    }\n\n    return () => images.forEach(removeLoadListener);\n  });\n}\n\n\nexport function getElementAbsoluteRect(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n  const height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n\n  let top = 0;\n  let left = 0;\n\n  let currentElement = element;\n\n  do {\n    top += currentElement.offsetTop || 0;\n    left += currentElement.offsetLeft || 0;\n\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return {\n    top,\n    left,\n    width,\n    height,\n  };\n}\n\nexport function getElementRelativeRect(win: Window, element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n  const height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n\n  let top = 0;\n  let left = 0;\n\n  let currentElement = element;\n  let currentElementStyle: CSSStyleDeclaration;\n\n  do {\n    currentElementStyle = currentElement !== element ? win.getComputedStyle(currentElement) : {} as CSSStyleDeclaration;\n\n    if (currentElementStyle.position === 'relative') {\n      break;\n    }\n\n    if (currentElementStyle.position !== 'absolute') {\n      top += currentElement.offsetTop || 0;\n      left += currentElement.offsetLeft || 0;\n    }\n\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return {\n    top,\n    left,\n    width,\n    height,\n  };\n}\n\n\nexport function getViewportScrollPosition(win: Window): { top: number; left: number } {\n  // While we can get a reference to the fake document\n  // during SSR, it doesn't have getBoundingClientRect.\n  if (!win) {\n    return { top: 0, left: 0 };\n  }\n\n  // The top-left-corner of the viewport is determined by the scroll position of the document\n  // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n  // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n  // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n  // `document.documentElement` works consistently, where the `top` and `left` values will\n  // equal negative the scroll position.\n  const documentElement = win.document.documentElement;\n  const documentRect = documentElement.getBoundingClientRect();\n\n  const top = -documentRect.top\n    || win.document.body.scrollTop\n    || win.scrollY\n    || documentElement.scrollTop\n    || 0;\n\n  const left = -documentRect.left\n    || win.document.body.scrollLeft\n    || win.scrollX\n    || documentElement.scrollLeft\n    || 0;\n\n  return { top, left };\n}\n\nexport function getViewportSize(win: Window): { width: number; height: number } {\n  if (!win) {\n    return { width: 0, height: 0 };\n  }\n\n  return {\n    width: win.innerWidth,\n    height: win.innerHeight,\n  };\n}\n\n\nexport function queryElementSelector<E extends Element = Element>(doc: Document, selector: string) {\n  const nodeList = doc.querySelectorAll<E>(selector);\n\n  if (!nodeList.length) {\n    return null;\n  }\n\n  return nodeList.item(0);\n}\n\n\n// export function setElementClasses(\n//   renderer: Renderer2,\n//   element: HTMLElement,\n//   classes: { [prop: string]: boolean },\n// ): void {\n//   if (!element || !classes) {\n//     return;\n//   }\n\n//   const classNames = Object.keys(classes);\n\n//   for (const className of classNames) {\n//     const value = classes[className];\n\n//     if (value) {\n//       renderer.addClass(element, className);\n//     } else {\n//       renderer.removeClass(element, className);\n//     }\n//   }\n// }\n\n\nexport function setElementStyles(\n  renderer: Renderer2,\n  element: HTMLElement,\n  styles: { [prop: string]: string },\n): void {\n  if (!element || !styles) {\n    return;\n  }\n\n  const propKeys = Object.keys(styles);\n\n  for (const prop of propKeys) {\n    const value = styles[prop];\n\n    if (value) {\n      renderer.setStyle(element, prop, value);\n    } else {\n      renderer.removeStyle(element, prop);\n    }\n  }\n}\n","/*\n * Public API Surface of @enten/ngx-sticky\n */\n\nexport * from './lib/sticky-container.directive';\nexport * from './lib/sticky-engine';\nexport * from './lib/sticky.directive';\nexport * from './lib/sticky.module';\nexport * from './lib/sticky.providers';\nexport * from './lib/sticky.service';\nexport * from './lib/sticky.types';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<section>\\n  <h1><a href=\\\"https://github.com/enten/ngx-sticky\\\">@enten/ngx-sticky</a> Demo!</h1>\\n</section>\\n\\n<section>\\n  <h3>Features:</h3>\\n  <ul>\\n    <li>Stick all the things!</li>\\n    <li>Super smooth!</li>\\n    <li>Tested in real world projects</li>\\n    <li>Support for <strong>Angular Universal</strong></li>\\n    <li>Prevents page-jumping when switching to sticky mode</li>\\n    <li>No jQuery or other dependencies - <strong>pure Angular</strong> solution</li>\\n    <li>Support for boundaries to make elements stop.</li>\\n  </ul>\\n  <h3>Usage:</h3>\\n  <pre><code>&lt;div ngx-sticky&gt;\\n  I am sticky!\\n&lt;/div&gt;</code></pre>\\n  <h3>More:</h3>\\n  <div>\\n    For more information see: <a href=\\\"https://github.com/enten/ngx-sticky\\\">https://github.com/enten/ngx-sticky</a>.\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky</h3>\\n  <pre class=\\\"code\\\"><code>&lt;p ngx-sticky&gt;\\n  Sticky\\n&lt;/p&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p ngx-sticky>Sticky</p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky inside container</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky&gt;\\n    Sticky inside container\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky>Sticky inside container</p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky position bottom</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky position=&quot;bottom&quot;&gt;\\n    Sticky position bottom\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container offsetTop=\\\"0\\\" offsetBottom=\\\"200\\\" class=\\\"demo\\\">\\n    <div class=\\\"bottom\\\">\\n      <p></p>\\n      <p></p>\\n      <p ngx-sticky position=\\\"bottom\\\">Sticky position bottom</p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky stack true</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky stack&gt;\\n    Sticky 1\\n  &lt;/p&gt;\\n  &lt;p ngx-sticky stack&gt;\\n    Sticky 2\\n  &lt;/p&gt;\\n  &lt;p ngx-sticky stack&gt;\\n    Sticky 3\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky stack>Sticky 1</p>\\n      <p></p>\\n      <p></p>\\n      <p ngx-sticky stack>Sticky 2</p>\\n      <p></p>\\n      <p></p>\\n      <p ngx-sticky stack>Sticky 3</p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky stack false</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky stack=&quot;false&quot;&gt;\\n    Sticky 1\\n  &lt;/p&gt;\\n  &lt;p ngx-sticky stack=&quot;false&quot;&gt;\\n    Sticky 2\\n  &lt;/p&gt;\\n  &lt;p ngx-sticky stack=&quot;false&quot;&gt;\\n    Sticky 3\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky stack=\\\"false\\\">Sticky 1</p>\\n      <p></p>\\n      <p></p>\\n      <p ngx-sticky stack=\\\"false\\\">Sticky 2</p>\\n      <p></p>\\n      <p></p>\\n      <p ngx-sticky stack=\\\"false\\\">Sticky 3</p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky orbit</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky orbit&gt;\\n    Sticky orbit\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky orbit>Sticky orbit</p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Sticky spot</h3>\\n  <pre class=\\\"code\\\"><code>&lt;div ngx-sticky-container&gt;\\n  &lt;p ngx-sticky [spot]=\\\"spot\\\"&gt;\\n    Sticky spot\\n  &lt;/p&gt;\\n  &lt;p #spot&gt;\\n    Spot\\n  &lt;/p&gt;\\n&lt;/div&gt;</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky [spot]=\\\"spot\\\">Sticky spot</p>\\n      <p></p>\\n      <p #spot style=\\\"padding: 5em 1em; text-align: center\\\">\\n        Spot<br>\\n      </p>\\n      <p></p>\\n      <p></p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <h3>Scroll</h3>\\n  <pre class=\\\"code\\\"><code>constructor(readonly stickyService: NgxStickyService) {{ '{' }} {{ '}' }}\\n\\nscrollToAnchor() {{ '{' }}\\n  this.stickyService.scrollToElement('#scroll-target');\\n{{ '}' }}</code></pre>\\n  <div ngx-sticky-container class=\\\"demo\\\">\\n    <div>\\n      <p></p>\\n      <p ngx-sticky style=\\\"text-align: center;\\\">\\n        <button (click)=\\\"scrollToAnchor('scroll-target', true)\\\">Scroll to anchor natively</button>\\n        <button (click)=\\\"scrollToAnchor('scroll-target')\\\">Scroll to anchor with StickyService</button>\\n      </p>\\n      <p></p>\\n      <p ngx-sticky>Sticky</p>\\n      <p></p>\\n      <p ngx-sticky>Sticky</p>\\n      <p></p>\\n      <p id=\\\"scroll-target\\\" style=\\\"padding: 0.5em 1em 9.5em; text-align: center\\\">\\n        Scroll target<br>\\n      </p>\\n      <p></p>\\n      <p></p>\\n      <p></p>\\n      <p></p>\\n    </div>\\n  </div>\\n</section>\\n\\n<section class=\\\"example\\\">\\n  <p ngx-sticky><strong>fyi:</strong> Boundary is optional - I'll scroll all the way down. </p>\\n  <p></p>\\n  <p></p>\\n  <p></p>\\n  <div style=\\\"height: 200vh\\\"></div>\\n  <p></p>\\n</section>\\n\\n<section>\\n  <p>thanks to <a href=\\\"https://github.com/w11k/angular-sticky-things\\\">@w11k/angular-sticky-things</a></p>\\n</section>\\n\"","module.exports = \"section {\\n  background: #fcfff5;\\n  color: #193441;\\n  padding: 2em; }\\n  section.example {\\n    box-sizing: border-box;\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 100vh; }\\n  section .code {\\n    background: #fff;\\n    border: 1px solid grey;\\n    border-radius: 3px;\\n    color: #24292e;\\n    max-width: 100%;\\n    padding: 0.5em 1em;\\n    overflow: auto; }\\n  section .demo {\\n    flex-grow: 1;\\n    position: relative;\\n    background: #f1f1f1;\\n    padding: 1em; }\\n  section .demo > div {\\n    position: absolute;\\n    top: 1em;\\n    left: 1em;\\n    right: 1em; }\\n  section .demo > div.bottom {\\n      top: auto;\\n      bottom: 1em; }\\n  section p {\\n    min-height: 1em;\\n    padding: 0.5em 1em;\\n    background: #3e606f;\\n    color: #fcfff5; }\\n  section p[ngx-sticky] {\\n      background: #193441; }\\n  section:nth-child(2n+0) {\\n    background: #d1dbbd; }\\n  section:nth-child(3n+0) {\\n    background: #3e606f;\\n    color: #d1dbbd; }\\n  section:nth-child(3n+0) p {\\n      background: #fcfff5;\\n      color: #3e606f; }\\n  section:nth-child(3n+0) p[ngx-sticky] {\\n        background: #d1dbbd; }\\n  section:nth-child(4n+0) {\\n    background: #193441;\\n    color: #d1dbbd; }\\n  section:nth-child(4n+0) p {\\n      background: #fcfff5;\\n      color: #193441; }\\n  section:nth-child(4n+0) p[ngx-sticky] {\\n        background: #d1dbbd; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3N0ZXZlbi9jb2RlL25neC1zdGlja3kvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsY0FBYztFQUNkLFlBQVksRUFBQTtFQUhkO0lBTUksc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsaUJBQWlCLEVBQUE7RUFUckI7SUFhSSxnQkFBZ0I7SUFDaEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixjQUFjO0lBQ2QsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixjQUFjLEVBQUE7RUFuQmxCO0lBdUJJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLFlBQVksRUFBQTtFQTFCaEI7SUE4Qkksa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixTQUFTO0lBQ1QsVUFBVSxFQUFBO0VBakNkO01Bb0NNLFNBQVM7TUFDVCxXQUFXLEVBQUE7RUFyQ2pCO0lBMENJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGNBQWMsRUFBQTtFQTdDbEI7TUFnRE0sbUJBQW1CLEVBQUE7RUFoRHpCO0lBcURJLG1CQUFtQixFQUFBO0VBckR2QjtJQXlESSxtQkFBbUI7SUFDbkIsY0FBYyxFQUFBO0VBMURsQjtNQTZETSxtQkFBbUI7TUFDbkIsY0FBYyxFQUFBO0VBOURwQjtRQWlFUSxtQkFBbUIsRUFBQTtFQWpFM0I7SUF1RUksbUJBQW1CO0lBQ25CLGNBQWMsRUFBQTtFQXhFbEI7TUEyRU0sbUJBQW1CO01BQ25CLGNBQWMsRUFBQTtFQTVFcEI7UUErRVEsbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogI2ZjZmZmNTtcbiAgY29sb3I6ICMxOTM0NDE7XG4gIHBhZGRpbmc6IDJlbTtcbiAgXG4gICYuZXhhbXBsZSB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gIH1cblxuICAuY29kZSB7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBjb2xvcjogIzI0MjkyZTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogMC41ZW0gMWVtO1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG5cbiAgLmRlbW8ge1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYmFja2dyb3VuZDogI2YxZjFmMTtcbiAgICBwYWRkaW5nOiAxZW07XG4gIH1cblxuICAuZGVtbyA+IGRpdiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMWVtO1xuICAgIGxlZnQ6IDFlbTtcbiAgICByaWdodDogMWVtO1xuXG4gICAgJi5ib3R0b20ge1xuICAgICAgdG9wOiBhdXRvO1xuICAgICAgYm90dG9tOiAxZW07XG4gICAgfVxuICB9XG5cbiAgcCB7XG4gICAgbWluLWhlaWdodDogMWVtO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBiYWNrZ3JvdW5kOiAjM2U2MDZmO1xuICAgIGNvbG9yOiAjZmNmZmY1O1xuICBcbiAgICAmW25neC1zdGlja3ldIHtcbiAgICAgIGJhY2tncm91bmQ6ICMxOTM0NDE7XG4gICAgfVxuICB9XG5cbiAgJjpudGgtY2hpbGQoMm4rMCkge1xuICAgIGJhY2tncm91bmQ6ICNkMWRiYmQ7XG4gIH1cblxuICAmOm50aC1jaGlsZCgzbiswKSB7XG4gICAgYmFja2dyb3VuZDogIzNlNjA2ZjtcbiAgICBjb2xvcjogI2QxZGJiZDtcblxuICAgIHAge1xuICAgICAgYmFja2dyb3VuZDogI2ZjZmZmNTtcbiAgICAgIGNvbG9yOiAjM2U2MDZmO1xuICAgICAgXG4gICAgICAmW25neC1zdGlja3ldIHtcbiAgICAgICAgYmFja2dyb3VuZDogI2QxZGJiZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmOm50aC1jaGlsZCg0biswKSB7XG4gICAgYmFja2dyb3VuZDogIzE5MzQ0MTtcbiAgICBjb2xvcjogI2QxZGJiZDtcblxuICAgIHAge1xuICAgICAgYmFja2dyb3VuZDogI2ZjZmZmNTtcbiAgICAgIGNvbG9yOiAjMTkzNDQxO1xuXG4gICAgICAmW25neC1zdGlja3ldIHtcbiAgICAgICAgYmFja2dyb3VuZDogI2QxZGJiZDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iXX0= */\"","import { Component } from '@angular/core';\n\nimport { NgxStickyService } from '../../projects/ngx-sticky/src/public_api';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent  {\n  constructor(\n    readonly stickyService: NgxStickyService,\n  ) { }\n\n  scrollToAnchor(anchorId: string, natively?: boolean) {\n    if (natively) {\n      document.getElementById(anchorId).scrollIntoView(true);\n\n      return;\n    }\n\n    this.stickyService.scrollToElement('#' + anchorId, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgxStickyModule } from '../../projects/ngx-sticky/src/public_api';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxStickyModule,\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}