{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./projects/ngx-sticky/src/lib/in-viewport.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-base-boundary.controller.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-base-container.controller.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-base-container.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-base.controller.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-boundary.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-container.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-engine.ts","webpack:///./projects/ngx-sticky/src/lib/sticky-root-container.controller.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.directive.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.helpers.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.module.ts","webpack:///./projects/ngx-sticky/src/lib/sticky.tokens.ts","webpack:///./projects/ngx-sticky/src/lib/utils/coercion.ts","webpack:///./projects/ngx-sticky/src/lib/utils/collections.ts","webpack:///./projects/ngx-sticky/src/lib/utils/config-subject.ts","webpack:///./projects/ngx-sticky/src/lib/utils/dom.ts","webpack:///./projects/ngx-sticky/src/lib/utils/from-image-events.ts","webpack:///./projects/ngx-sticky/src/lib/utils/from-media-query.ts","webpack:///./projects/ngx-sticky/src/lib/utils/index.ts","webpack:///./projects/ngx-sticky/src/lib/utils/input-subject.ts","webpack:///./projects/ngx-sticky/src/lib/utils/intersection.ts","webpack:///./projects/ngx-sticky/src/public-api.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<nav ngx-sticky class=\\\"navigation\\\">\\n  <section class=\\\"container\\\">\\n    <a href=\\\"https://github.com/enten/ngx-sticky\\\">\\n      <h1>ngx-sticky</h1>\\n    </a>\\n  </section>\\n</nav>\\n\\n<header class=\\\"header\\\">\\n  <section class=\\\"features container text\\\">\\n    <h2>Features</h2>\\n    <ul>\\n      <li>Stick all the things!</li>\\n      <li>Super smooth!</li>\\n      <li>Tested in real world projects</li>\\n      <li>Support for <strong>Angular Universal</strong></li>\\n      <li>Prevents page-jumping when switching to sticky mode</li>\\n      <li>No jQuery or other dependencies - <strong>pure Angular</strong> solution</li>\\n      <li>Support for boundaries to make elements stop.</li>\\n    </ul>\\n  </section>\\n  <section class=\\\"installation container text\\\">\\n    <h2>Installation</h2>\\n    <p>with npm:</p>\\n    <pre data-header=\\\"shell\\\" class=\\\"code\\\"><code>npm install @enten/ngx-sticky</code></pre>\\n    <p>with yarn:</p>\\n    <pre data-header=\\\"shell\\\" class=\\\"code\\\"><code>yarn add @enten/ngx-sticky</code></pre>\\n    <p>Now import the <code>NgxStickyModule</code> in the corresponding Module</p>\\n    <pre data-header=\\\"ts\\\" class=\\\"code\\\"><code><span class=\\\"ts-keyword\\\">import</span> <span class=\\\"ts-sign\\\">{{ '{' }}</span> <span class=\\\"ts-user-declaration\\\">NgxStickyModule</span> <span class=\\\"ts-sign\\\">{{ '}' }}</span> <span class=\\\"ts-keyword\\\">from</span> <span class=\\\"ts-sign\\\">'</span><span class=\\\"ts-string\\\">@enten/ngx-sticky</span><span class=\\\"ts-sign\\\">';</span>\\n\\n<span class=\\\"ts-decorator\\\">@NgModule</span><span class=\\\"ts-sign\\\">({{ '{' }}</span>\\n  imports<span class=\\\"ts-sign\\\">: [</span>\\n    <span class=\\\"ts-user-declaration\\\">NgxStickyModule</span><span class=\\\"ts-sign\\\">,</span> \\n  <span class=\\\"ts-sign\\\">],</span> \\n  declarations<span class=\\\"ts-sign\\\">: [],</span>\\n  providers<span class=\\\"ts-sign\\\">: [],</span>\\n<span class=\\\"ts-sign\\\">{{ '}' }})</span>\\n<span class=\\\"ts-keyword\\\">export</span> <span class=\\\"ts-keyword\\\">class</span> <span class=\\\"ts-user-declaration\\\">SomeModule</span> <span class=\\\"ts-sign\\\">{{ '{ }' }}</span></code></pre>\\n  </section>\\n  <section class=\\\"usage container text\\\">\\n    <h2>Usage</h2>\\n    <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>\\n  I am sticky!\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n  </section>\\n  <section class=\\\"more container text\\\">\\n    <h2>More</h2>\\n    <div>\\n      For more information see: <a href=\\\"https://github.com/enten/ngx-sticky\\\">https://github.com/enten/ngx-sticky</a>.\\n    </div>\\n  </section>\\n</header>\\n\\n<section class=\\\"examples\\\">\\n  <div class=\\\"container\\\">\\n    <h2>Examples</h2>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\" data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span> <span class=\\\"html-attr\\\">stickyDisabled</span><span class=\\\"html-sign\\\">=&quot;</span><input type=\\\"checkbox\\\" [value]=\\\"exampleSticky1.disabled\\\" (change)=\\\"exampleSticky1.config$.nextKeyValue('disabled', $event.target.checked)\\\"><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n  I am sticky!\\n<span class=\\\"html-tag\\\">&lt;/p&gt;</span></code></pre>\\n        </div>\\n        <div ngx-sticky-boundary class=\\\"preview\\\">\\n          <p ngx-sticky #exampleSticky1=\\\"ngxSticky\\\">\\n            I am sticky!\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky inside boundary</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\" data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-attr\\\">stickyDisabled</span><span class=\\\"html-sign\\\">=&quot;</span><input type=\\\"checkbox\\\" [value]=\\\"exampleStickyOutsideBoundary.disabled\\\" (change)=\\\"exampleStickyOutsideBoundary.config$.nextKeyValue('disabled', $event.target.checked)\\\"><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n  I am sticky!\\n<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n\\n<span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-boundary</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>\\n    Sticky inside boundary\\n  <span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n        </div>\\n        <div ngx-sticky-boundary class=\\\"preview\\\">\\n          <p #exampleStickyOutsideBoundary=\\\"ngxSticky\\\" ngx-sticky>I am sticky!</p>\\n          <div ngx-sticky-boundary style=\\\"margin: 5rem auto; height: 30rem; width: 80%;\\\">\\n            <p ngx-sticky>Sticky inside boundary</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky boundary unstacked</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\" data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span>\\n  <span class=\\\"html-attr\\\">ngx-sticky-boundary</span>\\n  <span class=\\\"html-attr\\\">stickyUnstacked</span><span class=\\\"html-sign\\\">=&quot;</span><input type=\\\"checkbox\\\" [checked]=\\\"exampleBoundaryUnstacked.config.unstacked\\\" (change)=\\\"exampleBoundaryUnstacked.config$.nextKeyValue('unstacked', $event.target.checked)\\\"><span class=\\\"html-sign\\\">&quot;</span>\\n<span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span>&gt;Sticky 1<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span>&gt;Sticky 2<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span>&gt;Sticky 3<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n        </div>\\n        <div class=\\\"preview\\\">\\n          <div #exampleBoundaryUnstacked=\\\"ngxStickyBoundary\\\" ngx-sticky-boundary stickyUnstacked style=\\\"margin: 5rem auto; width: 80%;\\\">\\n            <div style=\\\"height: 5rem\\\"></div>\\n            <p ngx-sticky stickyPosition=\\\"top\\\" stickyDirection=\\\"down\\\">Sticky 1</p>\\n            <div style=\\\"height: 5rem\\\"></div>\\n            <p ngx-sticky stickyPosition=\\\"top\\\" stickyDirection=\\\"down\\\">Sticky 2</p>\\n            <div style=\\\"height: 5rem\\\"></div>\\n            <p ngx-sticky stickyPosition=\\\"top\\\" stickyDirection=\\\"down\\\">Sticky 3</p>\\n            <div style=\\\"height: 5rem\\\"></div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky position bottom</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\" data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-boundary</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span>\\n    <span class=\\\"html-attr\\\">stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">bottom</span><span class=\\\"html-sign\\\">&quot;</span>\\n    <span class=\\\"html-attr\\\">stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">up</span><span class=\\\"html-sign\\\">&quot;</span>\\n  <span class=\\\"html-tag\\\">&gt;</span>Sticky bottom direction up<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span>\\n    <span class=\\\"html-attr\\\">stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">bottom</span><span class=\\\"html-sign\\\">&quot;</span>\\n    <span class=\\\"html-attr\\\">stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">down</span><span class=\\\"html-sign\\\">&quot;</span>\\n  <span class=\\\"html-tag\\\">&gt;</span>Sticky bottom direction down<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n        </div>\\n        <div ngx-sticky-boundary offsetTop=\\\"0\\\" offsetBottom=\\\"200\\\" class=\\\"preview\\\">\\n          <div style=\\\"height: 800px;\\\"></div>\\n          <p ngx-sticky stickyPosition=\\\"bottom\\\" stickyDirection=\\\"up\\\">\\n            Sticky bottom direction up\\n          </p>\\n          <p ngx-sticky stickyPosition=\\\"bottom\\\" stickyDirection=\\\"down\\\">\\n            Sticky bottom direction down\\n          </p>\\n          <div style=\\\"height: 800px;\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky container</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-container</span>\\n  <span class=\\\"html-attr\\\">style</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">height: 400px; overflow: auto;</span><span class=\\\"html-sign\\\">&quot;</span>\\n&gt;\\n  <span class=\\\"html-tag\\\">&lt;header</span> <span class=\\\"html-attr\\\">ngx-sticky</span>\\n    <span class=\\\"html-attr\\\">stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">top</span><span class=\\\"html-sign\\\">&quot;</span>\\n    <span class=\\\"html-attr\\\">stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">down</span><span class=\\\"html-sign\\\">&quot;</span>\\n  <span class=\\\"html-tag\\\">&gt;</span>Header<span class=\\\"html-tag\\\">&lt;/header&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;section</span> <span class=\\\"html-attr\\\">ngx-sticky-boundary</span><span class=\\\"html-tag\\\">&gt;</span>\\n    <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 1<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n    <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 2<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n    <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 3<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;/section&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;footer</span> <span class=\\\"html-attr\\\">ngx-sticky</span>\\n    <span class=\\\"html-attr\\\">stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">bottom</span><span class=\\\"html-sign\\\">&quot;</span>\\n    <span class=\\\"html-attr\\\">stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">up</span><span class=\\\"html-sign\\\">&quot;</span>\\n  <span class=\\\"html-tag\\\">&gt;</span>Footer<span class=\\\"html-tag\\\">&lt;/div&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/footer&gt;</span></code></pre>\\n        </div>\\n        <div ngx-sticky-container class=\\\"preview\\\" style=\\\"position: relative; overflow: auto; height: 40rem\\\">\\n          <header ngx-sticky>Header</header>\\n          <div style=\\\"height: 12rem\\\"></div>\\n          <section ngx-sticky-boundary style=\\\"position: relative;\\\">\\n            <!-- <p ngx-sticky style=\\\"position: absolute; top: 50px; right: 50px; width: 50px; height: 50px; padding: 0; background: lightsteelblue;\\\">\\n              Sticky\\n            </p> -->\\n            <div style=\\\"height: 10rem;\\\"></div>\\n            <p ngx-sticky>Sticky 1</p>\\n            <div style=\\\"height: 5rem;\\\"></div>\\n            <p ngx-sticky>Sticky 2</p>\\n            <div style=\\\"height: 5rem;\\\"></div>\\n            <p ngx-sticky stickyPosition=\\\"bottom\\\">Sticky 3</p>\\n            <div style=\\\"height: 10rem;\\\"></div>\\n          </section>\\n          <div style=\\\"height: 36rem\\\"></div>\\n          <footer ngx-sticky stickyPosition=\\\"bottom\\\" stickyDirection=\\\"up\\\">Footer</footer>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example sticky-classes\\\">\\n      <h3>Sticky classes</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">class</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">container</span><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;header</span> <span class=\\\"html-attr\\\">class</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">header</span><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>Header<span class=\\\"html-tag\\\">&lt;/header&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">#headerSticky</span>\\n    <span class=\\\"html-attr\\\">ngx-sticky</span>\\n    <span class=\\\"html-attr\\\">stickyClasses</span>\\n    <span class=\\\"html-attr\\\">class</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">header-sticky</span><span class=\\\"html-sign\\\">&quot;</span>\\n  <span class=\\\"html-tag\\\">&gt;</span>\\n    {{ '{{' }} headerSticky.className {{ '\\\\}\\\\}' }}\\n  <span class=\\\"html-tag\\\">&lt;/div&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p&gt;&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p&gt;&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p&gt;&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span>\\n\\n<span class=\\\"html-tag\\\">&lt;style&gt;</span>\\n.container {{ '{' }}\\n  <span class=\\\"css-prop\\\">position</span>: <span class=\\\"css-value\\\">relative</span>;\\n{{ '\\\\}' }}\\n.header {{ '{' }}\\n  <span class=\\\"css-prop\\\">position</span>: <span class=\\\"css-value\\\">relative</span>;\\n  <span class=\\\"css-prop\\\">z-index</span>: <span class=\\\"css-user-value\\\">2</span>;\\n{{ '\\\\}' }}\\n.header-sticky {{ '{' }}\\n  <span class=\\\"css-prop\\\">display</span>: <span class=\\\"css-value\\\">none</span>;\\n  <span class=\\\"css-prop\\\">position</span>: <span class=\\\"css-value\\\">absolute</span>;\\n  <span class=\\\"css-prop\\\">transform</span>: <span class=\\\"css-user-value\\\">translateY(-100%)</span>;\\n  <span class=\\\"css-prop\\\">transition</span>: <span class=\\\"css-user-value\\\">transform 0.3s</span>;\\n  <span class=\\\"css-prop\\\">width</span>: <span class=\\\"css-user-value\\\">100%</span>;\\n  <span class=\\\"css-prop\\\">z-index</span>: <span class=\\\"css-user-value\\\">1</span>;\\n{{ '\\\\}' }}\\n.header-sticky:not(.ngx-sticky--disabled) {{ '{' }}\\n  <span class=\\\"css-prop\\\">display</span>: <span class=\\\"css-value\\\">block</span>;\\n{{ '\\\\}' }}\\n.header-sticky:not(.ngx-sticky--normal) {{ '{' }}\\n  <span class=\\\"css-prop\\\">transform</span>: <span class=\\\"css-user-value\\\">translateY(0%)</span>;\\n{{ '\\\\}' }}\\n<span class=\\\"html-tag\\\">&lt;/style&gt;</span>\\n</code></pre>\\n        </div>\\n        <div ngx-sticky-boundary class=\\\"preview\\\">\\n          <header style=\\\"padding: 2rem 1rem\\\">Header</header>\\n          <div #exampleStickyClasses=\\\"ngxSticky\\\" ngx-sticky stickyClasses stickyDisabled=\\\"false\\\" class=\\\"header-sticky\\\">.ngx-sticky--{{ exampleStickyClasses.state }}</div>\\n          <p></p>\\n          <p></p>\\n          <p></p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"example\\\">\\n      <h3>Sticky with spot</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div ngx-sticky-boundary class=\\\"controls\\\">\\n          <pre ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\" data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-boundary</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span> <span class=\\\"html-attr\\\">[stickySpot]</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">spot</span><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n    Sticky with spot\\n  <span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">[style.height.px]</span><span class=\\\"html-sign\\\">=&quot;</span><input #stickyWithSpotBlankHeight type=\\\"number\\\" value=\\\"1500\\\" class=\\\"html-attr-value\\\" style=\\\"width: 5rem;\\\" (change)=\\\"changeDetectorRef.detectChanges(); exampleStickyWithSpot.update()\\\"><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;/div&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">#spot</span><span class=\\\"html-tag\\\">&gt;</span>Spot<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n        </div>\\n        <div ngx-sticky-boundary class=\\\"preview\\\">\\n          <p #exampleStickyWithSpot=\\\"ngxSticky\\\" ngx-sticky [stickySpot]=\\\"spot\\\">Sticky with spot</p>\\n          <div [style.height.px]=\\\"stickyWithSpotBlankHeight.value\\\"></div>\\n          <div #spot style=\\\"padding: 2em 1em; background: lightblue;\\\">\\n            Spot<br>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</section>\\n\\n<section class=\\\"api\\\">\\n  <div class=\\\"container\\\">\\n    <h2>API</h2>\\n\\n    <div>\\n      <h3>NgxStickyDirective</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div class=\\\"controls\\\" ngx-sticky-boundary>\\n          <div ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\">\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                inputs\\n              </div>\\n              <div>\\n                <label>stickyDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiSticky.disabled\\\"\\n                  (change)=\\\"apiSticky.config$.nextKeyValue('disabled', $event.target.checked)\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyPosition</label>\\n                <select\\n                  [value]=\\\"apiSticky.config.position\\\"\\n                  (change)=\\\"apiSticky.config$.nextKeyValue('position', $event.target.value)\\\"\\n                >\\n                  <option value=\\\"top\\\">top</option>\\n                  <option value=\\\"bottom\\\">bottom</option>\\n                </select>\\n              </div>\\n              <div>\\n                <label>stickyDirection</label>\\n                <select\\n                  [value]=\\\"apiSticky.config.direction\\\"\\n                  (change)=\\\"apiSticky.config$.nextKeyValue('direction', $event.target.value)\\\"\\n                >\\n                  <option value=\\\"up\\\">up</option>\\n                  <option value=\\\"down\\\">down</option>\\n                </select>\\n              </div>\\n              <!--\\n              <div>\\n                <label>stickyOrbit</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiSticky.config.orbit\\\"\\n                  (change)=\\\"apiSticky.config$.nextKeyValue('orbit', $event.target.checked)\\\"\\n                >\\n              </div>\\n              -->\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                outputs\\n              </div>\\n              <div>\\n                <label>stickyState</label>\\n                {{ apiSticky.state }}\\n              </div>\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                methods\\n              </div>\\n              <div>\\n                <label>enableSticky</label>\\n                <button (click)=\\\"apiSticky.enableSticky()\\\">call</button>\\n              </div>\\n              <div>\\n                <label>disableSticky</label>\\n                <button (click)=\\\"apiSticky.disableSticky()\\\">call</button>\\n              </div>\\n              <!--\\n              <div>\\n                <label>update</label>\\n                <button (click)=\\\"apiSticky.update()\\\">call</button>\\n              </div>\\n              -->\\n            </div>\\n          </div>\\n        </div>\\n  \\n        <div ngx-sticky-boundary class=\\\"preview\\\">\\n          <div style=\\\"height: 15rem;\\\"></div>\\n          <p #apiSticky=\\\"ngxSticky\\\" ngx-sticky>\\n            I am sticky!\\n          </p>\\n          <div style=\\\"height: 15rem;\\\"></div>\\n        </div>\\n      </div>\\n  \\n      <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;p</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span *ngIf=\\\"apiSticky.disabled\\\" class=\\\"html-attr\\\"> stickyDisabled</span><!--<span *ngIf=\\\"apiSticky.config.orbit\\\" class=\\\"html-attr\\\"> stickyOrbit</span>--><ng-container *ngIf=\\\"apiSticky.config.position === 'bottom'\\\"><span class=\\\"html-attr\\\"> stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">bottom</span><span class=\\\"html-sign\\\">&quot;</span></ng-container><ng-container *ngIf=\\\"apiSticky.config.direction === 'up'\\\"><span class=\\\"html-attr\\\"> stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">up</span><span class=\\\"html-sign\\\">&quot;</span></ng-container><span class=\\\"html-tag\\\">&gt;</span>\\n  I am sticky!\\n<span class=\\\"html-tag\\\">&lt;/p&gt;</span></code></pre>\\n    </div>\\n\\n    <div>\\n      <h3>NgxStickyBoundaryDirective</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div class=\\\"controls\\\" ngx-sticky-boundary>\\n          <div ngx-sticky [stickyDisabled]=\\\"_isSmallScreen\\\">\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky-boundary\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                inputs\\n              </div>\\n              <div>\\n                <label>stickyUnstacked</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiBoundary.config.unstacked\\\"\\n                  (change)=\\\"apiBoundary.config$.nextKeyValue('unstacked', $event.target.checked)\\\"\\n                >\\n              </div>\\n            </div>\\n            <!--\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                methods\\n              </div>\\n              <div>\\n                <label>updateStickies</label>\\n                <button (click)=\\\"apiBoundary.updateStickies()\\\">call</button>\\n              </div>\\n            </div>\\n            -->\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div>\\n                <label>stickyDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiBoundaryStickyDisabled\\\"\\n                  (change)=\\\"apiBoundaryStickyDisabled = !apiBoundaryStickyDisabled\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyPosition</label>\\n                <select\\n                  [value]=\\\"apiBoundaryStickyPosition\\\"\\n                  (change)=\\\"apiBoundaryStickyPosition = $event.target.value\\\"\\n                >\\n                  <option value=\\\"top\\\">top</option>\\n                  <option value=\\\"bottom\\\">bottom</option>\\n                </select>\\n              </div>\\n              <div>\\n                <label>stickyDirection</label>\\n                <select\\n                  [value]=\\\"apiBoundaryStickyDirection\\\"\\n                  (change)=\\\"apiBoundaryStickyDirection = $event.target.value\\\"\\n                >\\n                  <option value=\\\"up\\\">up</option>\\n                  <option value=\\\"down\\\">down</option>\\n                </select>\\n              </div>\\n              <!--\\n              <div>\\n                <label>stickyOrbit</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"stickyOrbit\\\"\\n                  (change)=\\\"stickyOrbit = !stickyOrbit\\\"\\n                >\\n              </div>\\n              -->\\n            </div>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"preview\\\">\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <div #apiBoundary=\\\"ngxStickyBoundary\\\" ngx-sticky-boundary>\\n            <div style=\\\"height: 10rem;\\\"></div>\\n            <p ngx-sticky\\n              [stickyDisabled]=\\\"apiBoundaryStickyDisabled\\\"\\n              [stickyPosition]=\\\"apiBoundaryStickyPosition\\\"\\n              [stickyDirection]=\\\"apiBoundaryStickyDirection\\\"\\n            >\\n              Sticky 1\\n            </p>\\n            <div style=\\\"height: 5rem\\\"></div>\\n            <p ngx-sticky\\n              [stickyDisabled]=\\\"apiBoundaryStickyDisabled\\\"\\n              [stickyPosition]=\\\"apiBoundaryStickyPosition\\\"\\n              [stickyDirection]=\\\"apiBoundaryStickyDirection\\\"\\n            >\\n              Sticky 2\\n            </p>\\n            <div style=\\\"height: 5rem\\\"></div>\\n            <p ngx-sticky\\n              [stickyDisabled]=\\\"apiBoundaryStickyDisabled\\\"\\n              [stickyPosition]=\\\"apiBoundaryStickyPosition\\\"\\n              [stickyDirection]=\\\"apiBoundaryStickyDirection\\\"\\n            >\\n              Sticky 3\\n            </p>\\n            <div style=\\\"height: 10rem;\\\"></div>\\n          </div>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n        </div>\\n      </div>\\n      <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-boundary</span><span *ngIf=\\\"apiBoundary.config.unstacked\\\" class=\\\"html-attr\\\"> stickyUnstacked</span><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 1<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 2<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 3<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n    </div>\\n\\n    <div>\\n      <h3>NgxStickyContainerDirective</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div class=\\\"controls\\\">\\n          <div>\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky-container\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                inputs\\n              </div>\\n              <div>\\n                <label>stickyDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiContainer.disabled\\\"\\n                  (change)=\\\"apiContainer.config$.nextKeyValue('disabled', $event.target.checked)\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyOffsetTop</label>\\n                <input type=\\\"number\\\"\\n                  [value]=\\\"apiContainerStickyOffsetTop\\\"\\n                  (change)=\\\"apiContainerStickyOffsetTop = +$event.target.value\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyOffsetBottom</label>\\n                <input type=\\\"number\\\"\\n                  [value]=\\\"apiContainerStickyOffsetBottom\\\"\\n                  (change)=\\\"apiContainerStickyOffsetBottom = +$event.target.value\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyUnstacked</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiContainer.config.unstacked\\\"\\n                  (change)=\\\"apiContainer.config$.nextKeyValue('unstacked', $event.target.checked)\\\"\\n                >\\n              </div>\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                methods\\n              </div>\\n              <div>\\n                <label>enableStickies</label>\\n                <button (click)=\\\"apiContainer.enableStickies()\\\">call</button>\\n              </div>\\n              <div>\\n                <label>disableStickies</label>\\n                <button (click)=\\\"apiContainer.disableStickies()\\\">call</button>\\n              </div>\\n              <div>\\n                <label>scrollToTop</label>\\n                <button (click)=\\\"apiContainer.scrollToTop('#apiContainerScrollTarget')\\\">call</button>\\n              </div>\\n              <!--\\n              <div>\\n                <label>updateStickies</label>\\n                <button (click)=\\\"apiContainer.updateStickies()\\\">call</button>\\n              </div>\\n              -->\\n            </div>\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div>\\n                <label>stickyDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiContainerStickyDisabled\\\"\\n                  (change)=\\\"apiContainerStickyDisabled = !apiContainerStickyDisabled\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyPosition</label>\\n                <select\\n                  [value]=\\\"apiContainerStickyPosition\\\"\\n                  (change)=\\\"apiContainerStickyPosition = $event.target.value\\\"\\n                >\\n                  <option value=\\\"top\\\">top</option>\\n                  <option value=\\\"bottom\\\">bottom</option>\\n                </select>\\n              </div>\\n              <div>\\n                <label>stickyDirection</label>\\n                <select\\n                  [value]=\\\"apiContainerStickyDirection\\\"\\n                  (change)=\\\"apiContainerStickyDirection = $event.target.value\\\"\\n                >\\n                  <option value=\\\"up\\\">up</option>\\n                  <option value=\\\"down\\\">down</option>\\n                </select>\\n              </div>\\n              <!--\\n              <div>\\n                <label>stickyOrbit</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"stickyOrbit\\\"\\n                  (change)=\\\"stickyOrbit = !stickyOrbit\\\"\\n                >\\n              </div>\\n              -->\\n            </div>\\n          </div>\\n        </div>\\n  \\n        <div #apiContainer=\\\"ngxStickyContainer\\\" ngx-sticky-container\\n          [stickyOffsetTop]=\\\"apiContainerStickyOffsetTop\\\"\\n          [stickyOffsetBottom]=\\\"apiContainerStickyOffsetBottom\\\"\\n          class=\\\"preview\\\"\\n          style=\\\"position: relative; height: 40rem; overflow: auto;\\\"\\n        >\\n          <header ngx-sticky>\\n            Header\\n          </header>\\n          <div style=\\\"height: 30rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiContainerStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiContainerStickyPosition\\\"\\n            [stickyDirection]=\\\"apiContainerStickyDirection\\\"\\n          >\\n            Sticky 1\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiContainerStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiContainerStickyPosition\\\"\\n            [stickyDirection]=\\\"apiContainerStickyDirection\\\"\\n          >\\n            Sticky 2\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiContainerStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiContainerStickyPosition\\\"\\n            [stickyDirection]=\\\"apiContainerStickyDirection\\\"\\n          >\\n            Sticky 3\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p id=\\\"apiContainerScrollTarget\\\" style=\\\"background: lightblue; opacity: 1;\\\">Scroll target</p>\\n          <div style=\\\"height: 40rem;\\\"></div>\\n          <footer ngx-sticky stickyPosition=\\\"bottom\\\" stickyDirection=\\\"up\\\">\\n            Footer\\n          </footer>\\n        </div>\\n      </div>\\n      <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-sticky-container</span><span *ngIf=\\\"apiContainer.disabled\\\" class=\\\"html-attr\\\"> stickyDisabled</span><span *ngIf=\\\"apiContainer.config.unstacked\\\" class=\\\"html-attr\\\"> stickyUnstacked</span><ng-container *ngIf=\\\"apiContainerStickyOffsetTop\\\" ><span class=\\\"html-attr\\\"> stickyOffsetTop</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">{{ apiContainerStickyOffsetTop }}</span><span class=\\\"html-sign\\\">&quot;</span></ng-container><ng-container *ngIf=\\\"apiContainerStickyOffsetBottom\\\"><span class=\\\"html-attr\\\"> stickyOffsetBottom</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">{{ apiContainerStickyOffsetBottom }}</span><span class=\\\"html-sign\\\">&quot;</span></ng-container><span class=\\\"html-tag\\\">&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;header</span> <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>\\n    Header\\n  <span class=\\\"html-tag\\\">&lt;/header&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 1<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 2<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;p</span>  <span class=\\\"html-attr\\\">ngx-sticky</span><span class=\\\"html-tag\\\">&gt;</span>Sticky 3<span class=\\\"html-tag\\\">&lt;/p&gt;</span>\\n  <span class=\\\"html-tag\\\">&lt;footer</span> <span class=\\\"html-attr\\\">ngx-sticky</span> <span class=\\\"html-attr\\\">stickyPosition</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">bottom</span><span class=\\\"html-sign\\\">&quot;</span> <span class=\\\"html-attr\\\">stickyDirection</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">up</span><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n    Footer\\n  <span class=\\\"html-tag\\\">&lt;/footer&gt;</span>\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n    </div>\\n\\n    <div>\\n      <h3>NgxInViewportDirective</h3>\\n      <div class=\\\"sidepanes\\\">\\n        <div class=\\\"controls\\\">\\n          <div>\\n            <div class=\\\"controls-header\\\">\\n              ngx-in-viewport\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                inputs\\n              </div>\\n              <div>\\n                <label>intersectionDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiInViewport.disabled\\\"\\n                  (change)=\\\"apiInViewport.config$.nextKeyValue('disabled', $event.target.checked)\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>intersectionThresholds</label>\\n                <input type=\\\"text\\\"\\n                  [value]=\\\"apiInViewport.config.thresholds.join(',')\\\"\\n                  (change)=\\\"apiInViewport.config$.nextKeyValue('thresholds', $event.target.value)\\\"\\n                >\\n              </div>\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                methods\\n              </div>\\n              <div>\\n                <label>enableIntersection</label>\\n                <button (click)=\\\"apiInViewport.enableIntersection()\\\">call</button>\\n              </div>\\n              <div>\\n                <label>disableIntersection</label>\\n                <button (click)=\\\"apiInViewport.disableIntersection()\\\">call</button>\\n              </div>\\n              <!--\\n              <div>\\n                <label>update</label>\\n                <button (click)=\\\"apiInViewport.update()\\\">call</button>\\n              </div>\\n              -->\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div class=\\\"controls-group-header\\\">\\n                outputs\\n              </div>\\n              <div>\\n                <label>intersectionState</label>\\n                {{ apiInViewport.state || 'null' }}\\n              </div>\\n              <div>\\n                <label>intersectionThreshold</label>\\n                {{ apiInViewport._intersectionThreshold }}\\n              </div>\\n              <!--\\n              <div>\\n                <label>intersectionComputation</label>\\n                <pre class=\\\"code\\\" style=\\\"margin: 0\\\"><code>{{ getIntersectionComputationAsText() }}</code></pre>\\n              </div>\\n              -->\\n            </div>\\n            <div class=\\\"controls-header\\\">\\n              ngx-sticky\\n            </div>\\n            <div class=\\\"controls-group\\\">\\n              <div>\\n                <label>stickyDisabled</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiInViewportStickyDisabled\\\"\\n                  (change)=\\\"apiInViewportStickyDisabled = !apiInViewportStickyDisabled\\\"\\n                >\\n              </div>\\n              <div>\\n                <label>stickyPosition</label>\\n                <select\\n                  [value]=\\\"apiInViewportStickyPosition\\\"\\n                  (change)=\\\"apiInViewportStickyPosition = $event.target.value\\\"\\n                >\\n                  <option value=\\\"top\\\">top</option>\\n                  <option value=\\\"bottom\\\">bottom</option>\\n                </select>\\n              </div>\\n              <div>\\n                <label>stickyDirection</label>\\n                <select\\n                  [value]=\\\"apiInViewportStickyDirection\\\"\\n                  (change)=\\\"apiInViewportStickyDirection = $event.target.value\\\"\\n                >\\n                  <option value=\\\"up\\\">up</option>\\n                  <option value=\\\"down\\\">down</option>\\n                </select>\\n              </div>\\n              <!--\\n              <div>\\n                <label>stickyOrbit</label>\\n                <input type=\\\"checkbox\\\"\\n                  [checked]=\\\"apiInViewportStickyOrbit\\\"\\n                  (change)=\\\"apiInViewportStickyOrbit = !apiInViewportStickyOrbit\\\"\\n                >\\n              </div>\\n              -->\\n            </div>\\n          </div>\\n        </div>\\n  \\n        <div #container=\\\"ngxStickyContainer\\\" ngx-sticky-container class=\\\"preview\\\" style=\\\"position: relative; height: 40rem; overflow: auto;\\\">\\n          <header ngx-sticky>\\n            Header\\n          </header>\\n          <div style=\\\"height: 30rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiInViewportStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiInViewportStickyPosition\\\"\\n            [stickyDirection]=\\\"apiInViewportStickyDirection\\\"\\n          >\\n            Sticky 1\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiInViewportStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiInViewportStickyPosition\\\"\\n            [stickyDirection]=\\\"apiInViewportStickyDirection\\\"\\n          >\\n            Sticky 2\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p #apiInViewport=\\\"ngxInViewport\\\" ngx-in-viewport style=\\\"opacity: 1; padding: 8rem 1rem; background: lightblue; text-align: center\\\">\\n            In viewport element\\n          </p>\\n          <div style=\\\"height: 5rem;\\\"></div>\\n          <p ngx-sticky\\n            [stickyDisabled]=\\\"apiInViewportStickyDisabled\\\"\\n            [stickyPosition]=\\\"apiInViewportStickyPosition\\\"\\n            [stickyDirection]=\\\"apiInViewportStickyDirection\\\"\\n          >\\n            Sticky 3\\n          </p>\\n          <div style=\\\"height: 40rem;\\\"></div>\\n          <footer ngx-sticky\\n            stickyPosition=\\\"bottom\\\"\\n            stickyDirection=\\\"up\\\"\\n            style=\\\"margin-bottom: 0;\\\"\\n          >\\n            Footer\\n          </footer>\\n        </div>\\n      </div>\\n      <pre data-header=\\\"html\\\" class=\\\"code\\\"><code><span class=\\\"html-tag\\\">&lt;div</span> <span class=\\\"html-attr\\\">ngx-in-viewport</span><span *ngIf=\\\"apiInViewport.disabled\\\" class=\\\"html-attr\\\"> intersectionDisabled</span><span class=\\\"html-attr\\\"> intersectionThresholds</span><span class=\\\"html-sign\\\">=&quot;</span><span class=\\\"html-attr-value\\\">{{ apiInViewport.config.thresholds.join(',') }}</span><span class=\\\"html-sign\\\">&quot;</span><span class=\\\"html-tag\\\">&gt;</span>\\n  in viewport element\\n<span class=\\\"html-tag\\\">&lt;/div&gt;</span></code></pre>\\n    </div>\\n  </div>\\n</section>\\n\\n<footer class=\\\"footer\\\">\\n  <p class=\\\"container\\\">made with ☕ by <a href=\\\"http://enten.fr\\\">enten</a></p>\\n</footer>\\n  \\n  \"","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { Observable, Subject, Subscription, animationFrameScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, mapTo, share, takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { NgxStickyBaseContainerDirective } from './sticky-base-container.directive';\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyRootContainerController } from './sticky-root-container.controller';\nimport { NGX_STICKY_WINDOW } from './sticky.tokens';\nimport {\n  NgxIntersection,\n  NgxIntersectionComputation,\n  NgxIntersectionController,\n  NgxIntersectionState,\n  NgxStickyContainerController,\n} from './sticky.types';\nimport { coerceBooleanProperty } from './utils/coercion';\nimport { ConfigSubject, ConfigSubjectSchema } from './utils/config-subject';\nimport { getElementAbsoluteRect } from './utils/dom';\nimport { coerceIntersectionThresholds, getCrossedThreshold } from './utils/intersection';\n\n\nexport interface NgxIntersectionConfig {\n  disabled: boolean;\n  thresholds: number[];\n}\n\n\nexport const NGX_BASE_INTERSECTION_CONFIG_SCHEMA: ConfigSubjectSchema<NgxIntersectionConfig> = {\n  disabled: {\n    aliasKey: 'intersectionDisabled',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n  thresholds: {\n    aliasKey: 'intersectionThresholds',\n    defaultValue: [ 0, 1 ],\n    coercion: coerceIntersectionThresholds,\n  },\n};\n\n\n@Directive({\n  selector: '[ngxInViewport], [ngx-in-viewport], ngx-in-viewport',\n  exportAs: 'ngxInViewport',\n})\nexport class NgxInViewportDirective implements NgxIntersectionController, AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * Disable intersection.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  intersectionDisabled: boolean;\n\n  /**\n   * Intersection thresholds.\n   *\n   * Defaults to `[ 0, 1 ]`.\n   */\n  @Input()\n  intersectionThresholds: number[];\n\n  /**\n   * Emit intersection.\n   */\n  @Output()\n  readonly intersection = new EventEmitter<NgxIntersectionComputation>();\n\n  /**\n   * Emit intersection computation.\n   */\n  @Output()\n  readonly intersectionComputation = new EventEmitter<NgxIntersectionComputation>();\n\n  /**\n   * Emit intersection state.\n   */\n  @Output()\n  readonly intersectionState = new EventEmitter<NgxIntersectionState>();\n\n  /**\n   * Emit intersection threshold.\n   */\n  @Output()\n  readonly intersectionThreshold = new EventEmitter<number>();\n\n  get container(): NgxStickyContainerController {\n    return this._container;\n  }\n\n  get config(): NgxIntersectionConfig {\n    return this.config$.getValue();\n  }\n\n  get disabled(): boolean {\n    return this.config.disabled;\n  }\n\n  /**\n   * State of the intersection.\n   */\n  get state(): NgxIntersectionState {\n    return this._intersectionState;\n  }\n\n  /** Inputs config */\n  readonly config$ = new ConfigSubject<NgxIntersectionConfig>(NGX_BASE_INTERSECTION_CONFIG_SCHEMA);\n\n  /** Intersection container controller */\n  readonly _container: NgxStickyBaseContainerDirective;\n\n  /** Emits when the component is destroyed. */\n  readonly _destroyed$ = new Subject<void>();\n\n  /** Intersection which reflect last call of _computeIntersection() */\n  _intersection: NgxIntersection;\n\n  /** Intersection computation which reflect last call of _refreshIntersection()  */\n  _intersectionComputation: NgxIntersectionComputation;\n\n  /** Intersection computation with last threshold crossed */\n  _intersectionCrossed: NgxIntersectionComputation;\n\n  /** Last inetersection state crossed */\n  _intersectionState: NgxIntersectionState;\n\n  /** Last inetersection threshold crossed */\n  _intersectionThreshold: number;\n\n  /** Monitoring subscription which trigger update stickies and handle refresh */\n  _monitoring: Subscription;\n\n  /** Emits when refresh() is called */\n  readonly _refresh$ = new Subject<NgxIntersectionComputation>();\n\n  constructor(\n    readonly rootContainer: NgxStickyRootContainerController,\n    @Optional() @Inject(forwardRef(() => NgxStickyContainerDirective))\n    readonly stickyContainer: NgxStickyContainerDirective,\n    readonly elementRef: ElementRef<HTMLElement>,\n    readonly ngZone: NgZone,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly _win: Window,\n  ) {\n    // use root container when sticky isn't in container\n    this._container = stickyContainer || rootContainer;\n\n    // register in parent container for first update calls\n    this.container.registerIntersection(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.config$.nextChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    this._initMonitoring();\n  }\n\n  ngOnDestroy(): void {\n    this.container.unregisterIntersection(this);\n\n    if (!this._destroyed$.isStopped) {\n      this._destroyed$.next();\n      this._destroyed$.complete();\n    }\n\n    this._destroyMonitoring();\n  }\n\n  beforeRefresh(fastUpdate?: boolean): void {\n    if (!fastUpdate) {\n      this._intersection = null;\n    }\n  }\n\n  disableIntersection(): void {\n    this.config$.nextKeyValue('disabled', true, { skipCoercion: true });\n  }\n\n  enableIntersection(): void {\n    this.config$.nextKeyValue('disabled', false, { skipCoercion: true });\n  }\n\n  getIntersection(): NgxIntersection {\n    if (!this._intersection) {\n      this._intersection = this._computeIntersection();\n    }\n\n    return this._intersection;\n  }\n\n  refresh(computation: NgxIntersectionComputation): void {\n    this._refresh$.next(computation);\n  }\n\n  update(fastUpdate?: boolean): void {\n    this.container.updateStickies(fastUpdate);\n  }\n\n  _computeIntersection(): NgxIntersection {\n    const config = this.config$.getValue();\n\n    const elementRect = getElementAbsoluteRect(this.elementRef.nativeElement);\n\n    return {\n      disabled: config.disabled,\n      height: elementRect.height,\n      top: elementRect.top,\n      thresholds: config.thresholds,\n    };\n  }\n\n  /**\n   * Create intersection monitoring observable.\n   */\n  _createMonitoringObservable(): Observable<boolean> {\n    return merge(\n      this.config$,\n      animationFrameScheduler,\n    ).pipe(\n      // throttleTime(0, animationFrameScheduler),\n      mapTo(false),\n    );\n  }\n\n  /**\n   * Destroy intersection monitoring subscription.\n   */\n  _destroyMonitoring(): void {\n    if (this._monitoring) {\n      this._monitoring.unsubscribe();\n      this._monitoring = null;\n    }\n  }\n\n  /**\n   * Init intersection monitoring.\n   */\n  _initMonitoring(): void {\n    if (!this._win || this._monitoring) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      const handleRefreshSubscription = this._refresh$\n        .pipe(\n          takeUntil(this._destroyed$),\n          distinctUntilChanged(),\n          throttleTime(0, animationFrameScheduler, { leading: true, trailing: true }),\n          share(),\n        )\n        .subscribe(computation => {\n          this._refreshIntersection(computation);\n        });\n\n      const triggerUpdateSubscription = this._createMonitoringObservable()\n        .pipe(\n          takeUntil(this._destroyed$),\n          share(),\n        )\n        .subscribe(fastUpdate => {\n          this.update(fastUpdate);\n        });\n\n      this._monitoring = new Subscription();\n      this._monitoring.add(handleRefreshSubscription);\n      this._monitoring.add(triggerUpdateSubscription);\n    });\n  }\n\n  /**\n   * Refresh intersection with given computation.\n   *\n   * @param computation Intersection state computation\n   */\n  _refreshIntersection(computation: NgxIntersectionComputation): void {\n    this._intersectionComputation = computation;\n    this.intersectionComputation.next(computation);\n\n    if (computation.state !== this._intersectionState) {\n      this.ngZone.run(() => {\n        this._intersectionState = computation.state;\n        this.intersectionState.next(computation.state);\n      });\n    }\n\n    const oldEntry = this._intersectionCrossed;\n    const newEntry = computation;\n\n    const oldRatio = oldEntry ? oldEntry.ratio : 0;\n    const newRatio = newEntry.ratio;\n\n    // ignore when ratios are unchanged\n    if (oldEntry && oldRatio === newRatio) {\n      return;\n    }\n\n    const crossedThreshold = getCrossedThreshold(computation.snap.intersection.thresholds, oldRatio, newRatio);\n\n    // ignore when no treshold is crossed\n    if (isNaN(crossedThreshold)) {\n      return;\n    }\n\n    this._intersectionCrossed = newEntry;\n\n    this.ngZone.run(() => {\n      this._intersectionThreshold = crossedThreshold;\n      this.intersectionThreshold.next(crossedThreshold);\n\n      this.intersection.emit(newEntry);\n    });\n  }\n}\n","import {\n  NgxStickyBoundary,\n  NgxStickyBoundaryController,\n  NgxStickyContainerController,\n} from './sticky.types';\n\n\n/**\n * Abstract sticky boundary controller.\n */\nexport abstract class NgxStickyBaseBoundaryController implements NgxStickyBoundaryController {\n  abstract readonly container: NgxStickyContainerController;\n\n  abstract beforeRefresh(fastUpdate?: boolean): void;\n  abstract getBoundary(): NgxStickyBoundary;\n\n  updateStickies(fastUpdate?: boolean) {\n    this.container.updateStickies(fastUpdate);\n  }\n}\n","import { NgxStickyEngine } from './sticky-engine';\nimport {\n  NgxIntersectionComputation,\n  NgxIntersectionController,\n  NgxIntersectionSnap,\n  NgxScrollPlan,\n  NgxSticky,\n  NgxStickyBoundaryController,\n  NgxStickyComputation,\n  NgxStickyContainer,\n  NgxStickyContainerController,\n  NgxStickyController,\n  NgxStickyPosition,\n  NgxStickySnap,\n} from './sticky.types';\nimport { addEntry, deleteEntry } from './utils/collections';\n\n\n/**\n * Abstract sticky container controller.\n */\nexport abstract class NgxStickyBaseContainerController implements NgxStickyContainerController {\n  abstract readonly containerParent?: NgxStickyContainerController;\n  abstract readonly stickyEngine: NgxStickyEngine;\n\n  abstract disabled: boolean;\n\n  readonly boundaries: NgxStickyBoundaryController[] = [];\n  readonly containers: NgxStickyContainerController[] = [];\n  readonly intersections: NgxIntersectionController[] = [];\n  readonly stickies: NgxStickyController[] = [];\n\n  readonly _stickyComputations: Record<number, NgxStickyComputation> = {};\n  readonly _stickySnaps: Record<number, NgxStickySnap> = {};\n  _stickySnapContainerHeight: number;\n\n  readonly _intersectionComputations: Record<number, NgxIntersectionComputation> = {};\n  readonly _intersectionSnaps: Record<number, NgxIntersectionSnap> = {};\n\n  abstract beforeRefresh(fastUpdate?: boolean): void;\n  abstract createScrollPlan(element: number | string | HTMLElement, userOffsetTop?: number): NgxScrollPlan;\n  abstract disableStickies(): void;\n  abstract enableStickies(): void;\n  abstract getContainer(): NgxStickyContainer;\n  abstract getViewportHeight(): number;\n  abstract getViewportLeft(): number;\n  abstract getViewportTop(): number;\n  abstract scrollToTop(target: number | string | HTMLElement, userOffsetTop?: number): void;\n\n  abstract _computeContainer(): NgxStickyContainer;\n\n  disableAllStickies(): void {\n    this.disableStickies();\n\n    for (const container of this.containers) {\n      container.disableStickies();\n    }\n  }\n\n  enableAllStickies(): void {\n    this.enableStickies();\n\n    for (const container of this.containers) {\n      container.enableStickies();\n    }\n  }\n\n  getStickedOffset(position: NgxStickyPosition, viewportTop: number): number {\n    const container = this.getContainer();\n    const viewportHeight = this.getViewportHeight();\n    const stickies: NgxSticky[] = [];\n\n    for (const stickyController of this.stickies) {\n      stickies.push(stickyController.getSticky());\n    }\n\n    return this.stickyEngine.getStickedOffset(container, stickies, position, viewportHeight, viewportTop);\n  }\n\n  fixViewportTop(viewportTop: number, userOffsetTop?: number): number {\n    // const container = this.getContainer();\n    const viewportTopOffsetless = viewportTop - (userOffsetTop || 0);\n    const stickedOffsetTop = this.getStickedOffset('top', viewportTopOffsetless);\n\n    let viewportTopFixed = viewportTopOffsetless /* - container.offsetTop*/ - stickedOffsetTop;\n\n    if (this.containerParent) {\n      viewportTopFixed -= this.getContainer().top;\n    }\n\n    return viewportTopFixed;\n  }\n\n  registerContainer(containerController: NgxStickyContainerController): void {\n    addEntry(this.containers, containerController);\n  }\n\n  registerBoundary(boundaryController: NgxStickyBoundaryController): void {\n    addEntry(this.boundaries, boundaryController);\n  }\n\n  registerIntersection(intersectionController: NgxIntersectionController): void {\n    const intersectionIndex = addEntry(this.intersections, intersectionController);\n\n    if (intersectionIndex !== -1) {\n      this._intersectionSnaps[intersectionIndex] = null;\n      this._intersectionComputations[intersectionIndex] = null;\n    }\n  }\n\n  registerSticky(stickyController: NgxStickyController): void {\n    const stickyIndex = addEntry(this.stickies, stickyController);\n\n    if (stickyIndex !== -1) {\n      this._stickySnaps[stickyIndex] = null;\n      this._stickyComputations[stickyIndex] = null;\n    }\n  }\n\n  updateAllStickies(fastUpdate?: boolean): void {\n    this.updateStickies(fastUpdate);\n\n    for (const containerController of this.containers) {\n      containerController.updateAllStickies(fastUpdate);\n    }\n  }\n\n  updateStickies(fastUpdate?: boolean): void {\n    // // avoid update when there is no stickies\n    // if (!this.stickies.length) {\n    //   return;\n    // }\n\n    // // force full update when container size change\n    // if (this.getContainerHeight() !== this._stickySnapContainerHeight) {\n    //   fastUpdate = false;\n    // }\n\n    if (!fastUpdate) {\n      this.beforeRefresh(fastUpdate);\n\n      for (const boundaryController of this.boundaries) {\n        boundaryController.beforeRefresh(fastUpdate);\n      }\n\n      for (let stickyIndex = 0; stickyIndex < this.stickies.length; ++stickyIndex) {\n        this._stickyComputations[stickyIndex] = null;\n        this._stickySnaps[stickyIndex] = null;\n\n        this.stickies[stickyIndex].beforeRefresh(fastUpdate);\n      }\n\n      for (let intersectionIndex = 0; intersectionIndex < this.intersections.length; ++intersectionIndex) {\n        this._intersectionComputations[intersectionIndex] = null;\n        this._intersectionSnaps[intersectionIndex] = null;\n\n        this.intersections[intersectionIndex].beforeRefresh(fastUpdate);\n      }\n    }\n\n    //   // legacy code\n    //   const viewportHeight = this.getViewportHeight() - this.stickyOffsetTop - this.stickyOffsetBottom;\n    //   const viewportTop = this.getViewportTop() + this.getContainer().top + this.stickyOffsetTop;\n\n    const container = this.getContainer();\n    const viewportHeight = this.getViewportHeight();\n    // compute absolute viewport top\n    const viewportTop = this.getViewportTop() + this.getContainer().top;\n    let stickies: NgxSticky[];\n\n    // refresh stickies\n    for (let stickyIndex = 0; stickyIndex < this.stickies.length; ++stickyIndex) {\n      const stickyController = this.stickies[stickyIndex];\n      let stickyComputation = this._stickyComputations[stickyIndex];\n\n      if (!stickyComputation || stickyComputation.viewportTop !== viewportTop) {\n        let stickySnap = this._stickySnaps[stickyIndex];\n\n        if (!stickySnap) {\n          if (!stickies) {\n            stickies = [];\n            for (const _stickyController of this.stickies) {\n              stickies.push(_stickyController.getSticky());\n            }\n          }\n\n          stickySnap = this.stickyEngine.snapSticky(container, stickies, stickies[stickyIndex], viewportHeight);\n\n          this._stickySnaps[stickyIndex] = stickySnap;\n        }\n\n        stickyComputation = this.stickyEngine.determineStickyState(stickySnap, viewportTop);\n\n        this._stickyComputations[stickyIndex] = stickyComputation;\n      }\n\n      stickyController.refresh(stickyComputation);\n    }\n\n    // refresh intersections\n    for (let intersectionIndex = 0; intersectionIndex < this.intersections.length; ++intersectionIndex) {\n      const intersectionController = this.intersections[intersectionIndex];\n      let intersectionComputation = this._intersectionComputations[intersectionIndex];\n\n      if (!intersectionComputation || intersectionComputation.viewportTop !== viewportTop) {\n        let intersectionSnap = this._intersectionSnaps[intersectionIndex];\n\n        if (!intersectionSnap) {\n          if (!stickies) {\n            stickies = [];\n            for (const _stickyController of this.stickies) {\n              stickies.push(_stickyController.getSticky());\n            }\n          }\n\n          const intersection = intersectionController.getIntersection();\n\n          intersectionSnap = this.stickyEngine.snapIntersection(container, stickies, intersection, viewportHeight);\n\n          this._intersectionSnaps[intersectionIndex] = intersectionSnap;\n        }\n\n        intersectionComputation = this.stickyEngine.determineIntersectionState(intersectionSnap, viewportTop);\n\n        this._intersectionComputations[intersectionIndex] = intersectionComputation;\n      }\n\n      intersectionController.refresh(intersectionComputation);\n    }\n  }\n\n  unregisterContainer(container: NgxStickyContainerController): void {\n    deleteEntry(this.containers, container);\n  }\n\n  unregisterBoundary(boundary: NgxStickyBoundaryController): void {\n    deleteEntry(this.boundaries, boundary);\n  }\n\n  unregisterIntersection(intersectionController: NgxIntersectionController): void {\n    const intersectionIndex = deleteEntry(this.intersections, intersectionController);\n\n    if (intersectionIndex !== -1) {\n      this._intersectionSnaps[intersectionIndex] = null;\n      this._intersectionComputations[intersectionIndex] = null;\n    }\n  }\n\n  unregisterSticky(sticky: NgxStickyController): void {\n    const stickyIndex = deleteEntry(this.stickies, sticky);\n\n    if (stickyIndex !== -1) {\n      this._stickySnaps[stickyIndex] = null;\n      this._stickyComputations[stickyIndex] = null;\n    }\n  }\n}\n","import { Input, NgZone, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, Subscription, animationFrameScheduler, fromEvent, merge, of } from 'rxjs';\nimport { debounceTime, mapTo, share, takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { NgxStickyBaseContainerController } from './sticky-base-container.controller';\nimport { NgxStickyEngine } from './sticky-engine';\nimport { NgxScrollPlan, NgxStickyContainer, NgxStickyContainerController, NgxStickyController } from './sticky.types';\nimport { coerceBooleanProperty, coerceNumberProperty } from './utils/coercion';\nimport { ConfigSubject, ConfigSubjectSchema } from './utils/config-subject';\nimport {\n  getDocumentHeightFactory,\n  getDocumentWidthFactory,\n  getElementAbsoluteRect,\n  getWindowViewportHeight,\n  getWindowViewportLeft,\n  getWindowViewportTop,\n  isElementScrollableY,\n} from './utils/dom';\n\n\nexport interface NgxStickyContainerConfig {\n  disabled: boolean;\n  offsetTop: number;\n  offsetBottom: number;\n  unstacked: boolean;\n}\n\n\nexport const NGX_STICKY_BASE_CONTAINER_CONFIG_SCHEMA: ConfigSubjectSchema<NgxStickyContainerConfig> = {\n  disabled: {\n    aliasKey: 'stickyDisabled',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n  offsetTop: {\n    aliasKey: 'stickyOffsetTop',\n    defaultValue: 0,\n    coercion: coerceNumberProperty,\n  },\n  offsetBottom: {\n    aliasKey: 'stickyOffsetBottom',\n    defaultValue: 0,\n    coercion: coerceNumberProperty,\n  },\n  unstacked: {\n    aliasKey: 'stickyUnstacked',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n};\n\n\n/**\n * Abstract sticky container directive.\n */\n// tslint:disable-next-line: max-line-length\nexport abstract class NgxStickyBaseContainerDirective extends NgxStickyBaseContainerController implements OnChanges, OnDestroy {\n  /**\n   * Returns HTMLElement of the container or `null` in case of root container.\n   */\n  abstract readonly element: HTMLElement;\n\n  /**\n   * Disable sticky. container.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  stickyDisabled: boolean;\n\n  /**\n   * Defines offset bottom inside the sticky container.\n   */\n  @Input()\n  stickyOffsetBottom: (element: HTMLElement) => number;\n\n  /**\n   * Defines offset top inside the sticky container.\n   */\n  @Input()\n  stickyOffsetTop: (element: HTMLElement) => number;\n\n  /**\n   * Enable/disable sticky stack inside container.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  stickyUnstacked: boolean;\n\n  get config(): NgxStickyContainerConfig {\n    return this.config$.getValue();\n  }\n\n  get disabled(): boolean {\n    return this.config.disabled;\n  }\n\n  /** Inputs config */\n  readonly config$ = new ConfigSubject(NGX_STICKY_BASE_CONTAINER_CONFIG_SCHEMA);\n\n  /** Container which reflect last call of _computeContainer() */\n  _container: NgxStickyContainer;\n\n  /** Emits when the service is destroyed. */\n  readonly destroyed$ = new Subject<void>();\n\n  /** Monitoring subscription which trigger update stickies */\n  _monitoring: Subscription;\n\n  /** Emits when updateStickies() is called */\n  _updateStickies$ = new Subject<boolean>();\n\n  /** Getter for document height */\n  readonly _getDocumentHeight: () => number;\n  /** Getter for document width */\n  readonly _getDocumentWidth: () => number;\n\n  constructor(\n    readonly containerParent: NgxStickyContainerController,\n    readonly stickyEngine: NgxStickyEngine,\n    readonly ngZone: NgZone,\n    readonly _win: Window,\n  ) {\n    super();\n\n    if (this.containerParent) {\n      this.containerParent.registerContainer(this);\n    }\n\n    this._getDocumentHeight = getDocumentHeightFactory(this._win);\n    this._getDocumentWidth = getDocumentWidthFactory(this._win);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.config$.nextChanges(changes);\n  }\n\n  ngOnDestroy(): void {\n    if (this.containerParent) {\n      this.containerParent.unregisterContainer(this);\n    }\n\n    if (!this.destroyed$.isStopped) {\n      this.destroyed$.next();\n      this.destroyed$.complete();\n    }\n\n    this._destroyMonitoring();\n  }\n\n  beforeRefresh(fastUpdate?: boolean): void {\n    if (!fastUpdate) {\n      this._container = null;\n    }\n  }\n\n  createScrollPlan(target: number | string | HTMLElement, userOffsetTop?: number): NgxScrollPlan {\n    const scrollPlan: NgxScrollPlan = [];\n\n    if (!this._win) {\n      return scrollPlan;\n    }\n\n    const scrollToFn = this.element\n      ? this.element.scrollTo.bind(this.element)\n      : this._win.scrollTo.bind(this._win);\n\n    let containsElement = false;\n\n    if (typeof target === 'string') {\n      const elementAsNumber = parseFloat(target as string);\n\n      if (!isNaN(elementAsNumber)) {\n        target = elementAsNumber;\n      } else {\n        if (this.element) {\n          target = this.element.querySelector<HTMLElement>(target);\n        } else {\n          target = this._win.document.querySelector<HTMLElement>(target);\n        }\n\n        if (target) {\n          containsElement = true;\n        }\n      }\n    }\n\n    if (typeof target === 'number' && !isNaN(target)) {\n      const elementTop = this.fixViewportTop(target, userOffsetTop);\n\n      scrollPlan.push({\n        scrollToOptions: { left: this.getViewportLeft(), top: elementTop },\n        scrollToFn,\n      });\n\n      return scrollPlan;\n    }\n\n    // if (!target || !(target instanceof HTMLElement)) {\n    if (!target || !((target as HTMLElement).tagName)) {\n      return scrollPlan;\n    }\n\n    containsElement = containsElement || !this.element || this.element.contains(target as HTMLElement);\n\n    if (!containsElement) {\n      return scrollPlan;\n    }\n\n    let targetContainer: NgxStickyBaseContainerDirective;\n    let targetContainerScrollPlan: NgxScrollPlan;\n\n    for (const containerController of (this.containers as NgxStickyBaseContainerDirective[])) {\n      const containerScrollPlan = containerController.createScrollPlan(target, userOffsetTop);\n\n      if (containerScrollPlan.length) {\n        targetContainerScrollPlan = containerScrollPlan;\n        targetContainer = containerController as NgxStickyBaseContainerDirective;\n\n        break;\n      }\n    }\n\n    const containerScrollable = !this.element || isElementScrollableY(this._win, this.element);\n\n    if (containerScrollable) {\n      const targetLine = targetContainer\n        ? targetContainer.getContainer()\n        : getElementAbsoluteRect(target as HTMLElement);\n      const targetTopFixed = this.fixViewportTop(targetLine.top, userOffsetTop);\n\n      scrollPlan.push({\n        scrollToFn,\n        scrollToOptions: { left: this.getViewportLeft(), top: targetTopFixed },\n      });\n    }\n\n    if (targetContainerScrollPlan) {\n      scrollPlan.push(...targetContainerScrollPlan);\n    }\n\n    return scrollPlan;\n  }\n\n  disableStickies(): void {\n    this.config$.nextKeyValue('disabled', true, { skipCoercion: true });\n  }\n\n  enableStickies(): void {\n    this.config$.nextKeyValue('disabled', false, { skipCoercion: true });\n  }\n\n  getContainer(): NgxStickyContainer {\n    if (!this._container) {\n      this._container = this._computeContainer();\n    }\n\n    return this._container;\n  }\n\n  getViewportHeight(): number {\n    return getWindowViewportHeight(this._win);\n  }\n\n  getViewportLeft(): number {\n    return getWindowViewportLeft(this._win);\n  }\n\n  getViewportTop(): number {\n    return getWindowViewportTop(this._win);\n  }\n\n  registerSticky(sticky: NgxStickyController): void {\n    super.registerSticky(sticky);\n\n    if (this.stickies.length) {\n      this._initMonitoring();\n    }\n  }\n\n  unregisterSticky(sticky: NgxStickyController): void {\n    super.unregisterSticky(sticky);\n\n    if (!this.stickies.length) {\n      this._destroyMonitoring();\n    }\n  }\n\n  scrollToTop(target: number | string | HTMLElement, userOffsetTop?: number): void {\n    const scrollPlan = this.createScrollPlan(target, userOffsetTop);\n\n    for (const scrollStep of scrollPlan) {\n      scrollStep.scrollToFn(scrollStep.scrollToOptions);\n    }\n  }\n\n  updateStickies(fastUpdate?: boolean): void {\n    // intercept update stickies to throttle calls\n    this._updateStickies$.next(fastUpdate);\n  }\n\n  _computeContainer(): NgxStickyContainer {\n    const config = this.config$.getValue();\n\n    const containerRect = this.element ? getElementAbsoluteRect(this.element) : null;\n\n    return {\n      disabled: this.disabled,\n      height: containerRect ? this.element.scrollHeight : this._getDocumentHeight(),\n      left: containerRect ? containerRect.left : 0,\n      offsetBottom: config.offsetBottom,\n      offsetTop: config.offsetTop,\n      top: containerRect ? containerRect.top : 0,\n      unstacked: config.unstacked,\n      width: containerRect ? this.element.scrollWidth : this._getDocumentWidth(),\n    };\n  }\n\n  _createMonitoringObservable(): Observable<boolean> {\n    if (!this._win) {\n      return of();\n    }\n\n    return merge(\n      this._createMonitoringInputsObservable(),\n      this._createMonitoringScrollObservable(),\n      this._createMonitoringWindowObservable(),\n      this._updateStickies$,\n      animationFrameScheduler,\n    )/*.pipe(throttleTime(0, animationFrameScheduler))*/;\n  }\n\n  _createMonitoringInputsObservable(): Observable<boolean> {\n    return this.config$.pipe(\n      debounceTime(0),\n      // throttleTime(0, animationFrameScheduler),\n      mapTo(false),\n    );\n  }\n\n  _createMonitoringScrollObservable(): Observable<boolean> {\n    return fromEvent(this.element || this._win, 'scroll', { passive: true })\n      .pipe(\n        throttleTime(0, animationFrameScheduler),\n        mapTo(true),\n      );\n  }\n\n  _createMonitoringWindowObservable(): Observable<boolean> {\n    return merge(\n      fromEvent(this._win, 'load', { passive: true }),\n      fromEvent(this._win, 'orientationchange', { passive: true }),\n      fromEvent(this._win, 'resize', { passive: true }),\n    ).pipe(\n      debounceTime(0, animationFrameScheduler),\n      mapTo(false),\n    );\n  }\n\n  _destroyMonitoring(): void {\n    if (this._monitoring) {\n      this._monitoring.unsubscribe();\n      this._monitoring = null;\n    }\n  }\n\n  _initMonitoring(): void {\n    if (!this._win || this._monitoring) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this._monitoring = this._createMonitoringObservable()\n        .pipe(\n          takeUntil(this.destroyed$),\n          // throttleTime(0, animationFrameScheduler),\n          share(),\n        )\n        .subscribe(fastUpdate => {\n          this._updateStickies(fastUpdate);\n        });\n\n      // fromMediaQuery(this._win, 'print').subscribe(mqlEvent => {\n      //   if (mqlEvent.matches) {\n      //     this.disableStickies();\n      //   } else {\n      //     this.enableStickies();\n      //   }\n      // });\n    });\n  }\n\n  _updateStickies(fastUpdate?: boolean): void {\n    super.updateStickies(fastUpdate);\n  }\n}\n","import {\n  NgxSticky,\n  NgxStickyBoundaryController,\n  NgxStickyComputation,\n  NgxStickyContainerController,\n  NgxStickyController,\n  NgxStickyState,\n} from './sticky.types';\n\n\n/**\n * Abstract sticky controller.\n */\nexport abstract class NgxStickyBaseController implements NgxStickyController {\n  abstract readonly boundary?: NgxStickyBoundaryController;\n  abstract readonly container: NgxStickyContainerController;\n  abstract readonly disabled: boolean;\n  abstract readonly state: NgxStickyState;\n\n  abstract beforeRefresh(fastUpdate?: boolean): void;\n  abstract disableSticky(): void;\n  abstract enableSticky(): void;\n  abstract getSticky(): NgxSticky;\n  abstract refresh(computation: NgxStickyComputation): void;\n\n  update(fastUpdate?: boolean): void {\n    // all stickies need to be updated when one of them changed\n    this.container.updateStickies(fastUpdate);\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { Observable, Subject, Subscription, animationFrameScheduler, merge } from 'rxjs';\nimport { mapTo, share, takeUntil } from 'rxjs/operators';\n\nimport { NgxStickyBaseBoundaryController } from './sticky-base-boundary.controller';\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyRootContainerController } from './sticky-root-container.controller';\nimport { NGX_STICKY_WINDOW } from './sticky.tokens';\nimport { NgxStickyBoundary, NgxStickyContainerController } from './sticky.types';\nimport { coerceBooleanProperty } from './utils/coercion';\nimport { ConfigSubject, ConfigSubjectSchema } from './utils/config-subject';\nimport { getElementAbsoluteRect } from './utils/dom';\n\n\nexport interface NgxStickyBoundaryConfig {\n  unstacked: boolean;\n}\n\n\nexport const NGX_STICKY_BASE_BOUNDARY_CONFIG_SCHEMA: ConfigSubjectSchema<NgxStickyBoundaryConfig> = {\n  unstacked: {\n    aliasKey: 'stickyUnstacked',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n};\n\n\n/**\n * Defines a sticky boundary.\n */\n@Directive({\n  selector: '[ngxStickyBoundary], [ngx-sticky-boundary], ngx-sticky-boundary',\n  exportAs: 'ngxStickyBoundary',\n})\n// tslint:disable-next-line: max-line-length\nexport class NgxStickyBoundaryDirective extends NgxStickyBaseBoundaryController implements OnChanges, OnDestroy, OnInit {\n  /**\n   * Enable/disable sticky stack inside boudary.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  stickyUnstacked: boolean;\n\n  get config(): NgxStickyBoundaryConfig {\n    return this.config$.getValue();\n  }\n\n  get container(): NgxStickyContainerController {\n    return this._container;\n  }\n\n  /** Inputs config */\n  readonly config$ = new ConfigSubject(NGX_STICKY_BASE_BOUNDARY_CONFIG_SCHEMA);\n\n  /** Boundary line which reflect last call of _computeBoundary() */\n  _boundary: NgxStickyBoundary;\n\n  /** Boundary container controller */\n  readonly _container: NgxStickyContainerController;\n\n  /** Emits when the component is destroyed. */\n  readonly _destroyed$ = new Subject<void>();\n\n  /** Monitoring subscription which trigger update stickies */\n  _monitoring: Subscription;\n\n  constructor(\n    readonly rootContainer: NgxStickyRootContainerController,\n    @Optional() @Inject(forwardRef(() => NgxStickyContainerDirective))\n    readonly stickyContainer: NgxStickyContainerController,\n    readonly elementRef: ElementRef<HTMLElement>,\n    readonly ngZone: NgZone,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly _win: Window,\n  ) {\n    super();\n\n    // use root container when boundary isn't in container\n    this._container = stickyContainer || rootContainer;\n\n    // register boundary in container for first update calls\n    this.container.registerBoundary(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.config$.nextChanges(changes);\n  }\n\n  ngOnInit(): void {\n    this._initMonitoring();\n  }\n\n  ngOnDestroy(): void {\n    this.container.unregisterBoundary(this);\n\n    if (!this._destroyed$.isStopped) {\n      this._destroyed$.next();\n      this._destroyed$.complete();\n    }\n\n    this._destroyMonitoring();\n  }\n\n  beforeRefresh(fastUpdate?: boolean): void {\n    if (!fastUpdate) {\n      this._boundary = null;\n    }\n  }\n\n  getBoundary(): NgxStickyBoundary {\n    if (!this._boundary) {\n      this._boundary = this._computeBoundary();\n    }\n\n    return this._boundary;\n  }\n\n  _computeBoundary(): NgxStickyBoundary {\n    const boundary: NgxStickyBoundary = getElementAbsoluteRect(this.elementRef.nativeElement);\n\n    if (this._win) {\n      const boundaryStyle = this._win.getComputedStyle(this.elementRef.nativeElement);\n      const paddingTop = parseFloat(boundaryStyle.paddingTop) || 0;\n      const paddingBottom = parseFloat(boundaryStyle.paddingBottom) || 0;\n\n      // substract paddings from computed boundary line\n      boundary.top += paddingTop;\n      boundary.height -= paddingTop + paddingBottom;\n    }\n\n    boundary.unstacked = this.config.unstacked;\n\n    return boundary;\n  }\n\n  _createMonitoringObservable(): Observable<boolean> {\n    return merge(\n      this.config$,\n      animationFrameScheduler,\n    ).pipe(\n      // throttleTime(0, animationFrameScheduler),\n      mapTo(false),\n    );\n  }\n\n  _destroyMonitoring(): void {\n    if (this._monitoring) {\n      this._monitoring.unsubscribe();\n      this._monitoring = null;\n    }\n  }\n\n  _initMonitoring(): void {\n    if (!this._win || this._monitoring) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      this._monitoring = this._createMonitoringObservable()\n        .pipe(\n          takeUntil(this._destroyed$),\n          share(),\n        )\n        .subscribe(fastUpdate => {\n          this.updateStickies(fastUpdate);\n        });\n    });\n  }\n}\n","import { Directive, ElementRef, Inject, NgZone, Optional, SkipSelf, forwardRef } from '@angular/core';\n\nimport { NgxStickyBaseContainerDirective } from './sticky-base-container.directive';\nimport { NgxStickyEngine } from './sticky-engine';\nimport { NgxStickyRootContainerController } from './sticky-root-container.controller';\nimport { NGX_STICKY_WINDOW } from './sticky.tokens';\nimport { NgxStickyContainerController } from './sticky.types';\n\n\n/**\n * Defines a sticky container.\n */\n@Directive({\n  selector: '[ngxStickyContainer], [ngx-sticky-container], ngx-sticky-container',\n  exportAs: 'ngxStickyContainer',\n})\nexport class NgxStickyContainerDirective extends NgxStickyBaseContainerDirective {\n  /**\n   * Returns HTMLElement of the container.\n   */\n  get element(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(\n    readonly rootContainer: NgxStickyRootContainerController,\n    @SkipSelf() @Optional() @Inject(forwardRef(() => NgxStickyContainerDirective))\n    readonly stickyContainerParent: NgxStickyContainerController,\n    readonly stickyEngine: NgxStickyEngine,\n    readonly ngZone: NgZone,\n    readonly elementRef: ElementRef<HTMLElement>,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly _win: Window,\n  ) {\n    // use root container when boundary isn't in container\n    super(stickyContainerParent || rootContainer, stickyEngine, ngZone, _win);\n  }\n\n  getViewportHeight(): number {\n    return this.element.offsetHeight;\n  }\n\n  getViewportLeft(): number {\n    return this.element.scrollLeft;\n  }\n\n  getViewportTop(): number {\n    return this.element.scrollTop;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { isStickyDirectionDown, isStickyPositionBottom } from './sticky.helpers';\nimport {\n  NgxIntersection,\n  NgxIntersectionComputation,\n  NgxIntersectionSnap,\n  NgxSticky,\n  NgxStickyBoundary,\n  NgxStickyBoundaryComputed,\n  NgxStickyComputation,\n  NgxStickyComputed,\n  NgxStickyContainer,\n  NgxStickyLine,\n  NgxStickyPosition,\n  NgxStickySnap,\n  NgxStickyState,\n} from './sticky.types';\n\n\nexport const NGX_STICKY_ENGINE_INTERCEPTION_STATE_MAP = {\n  'sticked,normal': 'enter',\n  'stucked,normal': 'entered',\n  'sticked,sticked': 'entered',\n  'stucked,sticked': 'exit',\n  'stucked,stucked': 'exited',\n};\n\n\n/**\n * Defines a sticky engine. Implemented in universal way.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStickyEngine {\n  /**\n   * Compute sticky boundary.\n   *\n   * @param container Container\n   * @param boundary Sticky boundary\n   * @param sticky Sticky line\n   * @param directionDown Direction down\n   * @param spot Spot line\n   * @param viewportHeight Viewport height\n   * @returns Boundary instance\n   */\n  computeStickyBoundary(\n    container: NgxStickyContainer,\n    boundary: NgxStickyBoundary | null,\n    sticky: NgxStickyLine,\n    directionDown: boolean,\n    spot: NgxStickyLine | null,\n    viewportHeight: number,\n  ): NgxStickyBoundaryComputed {\n    let {\n      height: boundaryHeight,\n      top: boundaryTop,\n      left: boundaryLeft,\n      width: boundaryWidth,\n    } = boundary || container;\n\n    boundaryHeight = boundaryHeight || 0;\n    boundaryTop = boundaryTop || 0;\n    boundaryWidth = boundaryWidth || 0;\n    boundaryLeft = boundaryLeft || 0;\n\n    if (spot && spot.height) {\n      const beforeSpot = sticky.top < spot.top;\n\n      if (beforeSpot) {\n        // when sticky direction is bottom and is before its spot\n        if (directionDown) {\n          const spotPoint = spot.top - viewportHeight;\n\n          // disable sticky when is in same viewport height as its spot\n          if (spotPoint < sticky.top) {\n            boundaryHeight = 0;\n            boundaryTop = 0;\n          // adjust sticky boundary height according to its spot when spot point is in base boundary\n          } else if (spotPoint < boundaryTop + boundaryHeight) {\n            boundaryHeight = spotPoint - boundaryTop + sticky.height;\n          }\n        }\n      } else {\n        // when sticky direction is top and is after its spot\n        if (!directionDown) {\n          const spotPoint = spot.top + spot.height + viewportHeight;\n\n          // disable sticky when is in same viewport height as its spot\n          if (spotPoint > sticky.top) {\n            boundaryHeight = 0;\n            boundaryTop = 0;\n            // adjust sticky boundary top according to its spot when spot point is in base boundary\n          } else if (spotPoint > boundaryTop && spotPoint < boundaryTop + boundaryHeight) {\n            boundaryHeight -= spotPoint - boundaryTop;\n            boundaryTop = spotPoint;\n          }\n        }\n      }\n    }\n\n    return {\n      height: boundaryHeight,\n      top: boundaryTop,\n      width: boundaryWidth,\n      left: boundaryLeft,\n      unstacked: boundary && boundary.unstacked || container.unstacked || false,\n      offsetBottom: 0,\n      offsetTop: 0,\n    };\n  }\n\n  /**\n   * Compute sticky sticked line.\n   *\n   * @param boundary Sticky boundary line\n   * @param sticky Sticky line\n   * @param positionBottom Position bottom\n   * @param directionDown Direction down\n   * @param viewportHeight Viewport height\n   * @returns Sticked line\n   */\n  computeStickyStickedLine(\n    boundary: NgxStickyLine,\n    sticky: NgxStickyLine,\n    positionBottom: boolean,\n    directionDown: boolean,\n    viewportHeight: number,\n  ): NgxStickyLine {\n    let stickedTop: number;\n    let stickedHeight: number;\n\n    if (positionBottom) {\n      if (directionDown) {\n        stickedTop = sticky.top + sticky.height - viewportHeight;\n        stickedHeight = boundary.height + boundary.top - stickedTop - viewportHeight;\n      } else {\n        stickedTop = boundary.top - viewportHeight;\n        stickedHeight = sticky.top - stickedTop - viewportHeight;\n      }\n    } else {\n      if (directionDown) {\n        stickedTop = sticky.top;\n        stickedHeight = boundary.height + boundary.top - stickedTop;\n      } else {\n        stickedTop = boundary.top;\n        stickedHeight = sticky.top - stickedTop;\n      }\n    }\n\n    return { top: stickedTop, height: stickedHeight };\n  }\n\n  /**\n   * Compute sticky sort point.\n   *\n   * @param sticky Sticky line\n   * @param positionBottom Position bottom\n   * @param directionDown Direction down\n   * @param viewportHeight Viewport height\n   * @returns Sticky sort point\n   */\n  computeStickySortPoint(\n    sticky: NgxStickyLine,\n    positionBottom: boolean,\n    directionDown: boolean,\n    viewportHeight: number,\n  ): number {\n    let sortPoint: number;\n\n    if (positionBottom) {\n      sortPoint = directionDown\n        ? -sticky.top - sticky.height + viewportHeight\n        : sticky.top + sticky.height - viewportHeight;\n    } else {\n      sortPoint = directionDown\n        ? -sticky.top\n        : sticky.top;\n    }\n\n    return sortPoint;\n  }\n\n  /**\n   * Determines intersection state.\n   *\n   * @param snap Intersection snap\n   * @param viewportTop Viewport/scroll top position\n   * @returns Intersection computation\n   */\n  determineIntersectionState(snap: NgxIntersectionSnap, viewportTop: number): NgxIntersectionComputation {\n    const enter = this.determineStickyState(snap.enter, viewportTop);\n    const exit = this.determineStickyState(snap.exit, viewportTop);\n\n    // Intersection state can be easily determined from enter sticky and exit sticky states:\n    // - enter: when enter sticky (on bottom) is _sticked_ and exit sticky (on top) is _normal_ ;\n    // - entered: when enter (on bottom) and exit (on top) stickies are _sticked_ ;\n    // - entered: when enter sticky (on bottom) is _stucked_ and exit sticky (on top) is _normal_ ;\n    // - exit: when enter sticky (on bottom) is _stucked_ and exit sticky (on top) is _sticked_ ;\n    // - exited: when enter (on bottom) and exit (on top) stickies are _stucked_.\n    const stateKey = [ enter.state, exit.state ].join(',');\n    const state = NGX_STICKY_ENGINE_INTERCEPTION_STATE_MAP[stateKey] || null;\n\n    const viewportOffsetless = snap.viewportHeight - enter.offsetSticked - exit.offsetSticked;\n    const maxHeightVisible = Math.min(snap.intersection.height, viewportOffsetless);\n    let height = 0;\n    let intersecting = false;\n\n    if (state === 'entered') {\n      height = maxHeightVisible;\n      intersecting = true;\n    } else if (state === 'enter') {\n      height = viewportTop + snap.viewportHeight - snap.intersection.top - enter.offsetSticked;\n      intersecting = true;\n    } else if (state === 'exit') {\n      height = snap.intersection.top + snap.intersection.height - viewportTop - exit.offsetSticked;\n      intersecting = true;\n    }\n\n    const computation: NgxIntersectionComputation = {\n      enter,\n      exit,\n      snap,\n      height,\n      intersecting,\n      ratio: Math.min(1, height / maxHeightVisible),\n      state,\n      viewportTop,\n    };\n\n    return computation;\n  }\n\n  /**\n   * Determines sticky state.\n   *\n   * @param snap Sticky snap\n   * @param viewportTop Viewport/scroll top position\n   * @returns Sticky computation\n   */\n  determineStickyState(snap: NgxStickySnap, viewportTop: number): NgxStickyComputation {\n    const computation: NgxStickyComputation = {\n      offsetSticked: 0,\n      offsetStucked: 0,\n      state: 'normal',\n      snap,\n      viewportTop,\n    };\n\n    // cancel computation when stickyComputed is outside its boundary\n    if (snap.stickyComputed.disabled) {\n      return computation;\n    }\n\n    // last value stored in _stickyComputedState will be related to stickyComputed\n    let _stickyComputedState: NgxStickyState;\n\n    // compute state for each sibling and stickyComputed in last\n    for (const _stickyComputed of snap.stickies) {\n      const boundaryOffset = _stickyComputed.directionDown\n        ? _stickyComputed.boundary.offsetBottom\n        : _stickyComputed.boundary.offsetTop;\n      let {\n        top: _stickedTop,\n        height: _stickedHeight,\n      } = _stickyComputed.sticked;\n\n      // adjust _stickyComputed sticked line with previous sibling\n      if (_stickyComputed.positionBottom) {\n        if (_stickyComputed.directionDown) {\n          _stickedTop += computation.offsetSticked + computation.offsetStucked;\n          _stickedHeight -= computation.offsetStucked;\n        } else {\n          _stickedTop += boundaryOffset;\n          _stickedTop += computation.offsetSticked;\n          _stickedHeight -= boundaryOffset - computation.offsetStucked;\n          _stickedHeight += _stickyComputed.height;\n        }\n      } else {\n        if (_stickyComputed.directionDown) {\n          _stickedTop -= computation.offsetSticked + computation.offsetStucked;\n          _stickedHeight += computation.offsetStucked;\n          _stickedHeight -= boundaryOffset;\n        } else {\n          _stickedTop -= computation.offsetSticked;\n          _stickedHeight -= computation.offsetStucked;\n        }\n      }\n\n      // set default state to \"normal\"\n      _stickyComputedState = 'normal';\n\n      // determine _stickyComputed state with its sticked line adjusted\n      // if (viewportTop > _stickedTop) {\n      if (viewportTop >= _stickedTop) {\n        _stickyComputedState = 'sticked';\n\n        if (viewportTop > _stickedTop + _stickedHeight) {\n          _stickyComputedState = _stickyComputed.directionDown ? 'stucked' : 'normal';\n        }\n      } else if (!_stickyComputed.directionDown) {\n        _stickyComputedState = 'stucked';\n      }\n\n      // cumulate sibling height to the right offset\n      if (\n        // when _stickyComputed isn't stickyComputed\n        _stickyComputed !== snap.stickyComputed\n        // and state determined is \"sticked\" or \"stucked\"\n        && _stickyComputedState !== 'normal'\n        // and _stickyComputed is stacked\n        && !_stickyComputed.boundary.unstacked\n      ) {\n        if (\n          _stickyComputed.boundary.top === snap.stickyComputed.boundary.top\n            && _stickyComputed.boundary.height === snap.stickyComputed.boundary.height\n        ) {\n          computation.offsetStucked += _stickyComputed.height;\n        } else if (_stickyComputedState === 'sticked') {\n          computation.offsetSticked += _stickyComputed.height;\n        }\n      }\n      // (computation as any)._state = _stickyComputedState;\n    }\n\n    computation.state = _stickyComputedState;\n\n    return computation;\n  }\n\n  /**\n   * Returns scroll top offset height used by stickies for a given viewport position.\n   *\n   * @param container Container\n   * @param stickies Stickies\n   * @param position Position `\"top\"` or `\"bottom\"`\n   * @param viewportHeight Viewport height\n   * @param offsetTop Viewport top\n   * @returns Top offset height used by stickies.\n   */\n  getStickedOffset(\n    container: NgxStickyContainer,\n    stickies: NgxSticky[],\n    position: NgxStickyPosition,\n    viewportHeight: number,\n    viewportTop: number,\n  ): number {\n    const positionBottom = isStickyPositionBottom(position);\n    let maxStickyUnstackedHeight = 0;\n    let stickedOffset = 0;\n\n    for (const _sticky of stickies) {\n      // skip sticky when is position bottom\n      if (isStickyPositionBottom(_sticky.position) !== positionBottom) {\n        continue;\n      }\n\n      const snap = this.snapSticky(container, stickies, _sticky, viewportHeight);\n\n      // skip sticky when is disabled\n      if (snap.sticky.disabled) {\n        continue;\n      }\n\n      const computation = this.determineStickyState(snap, viewportTop);\n\n      // add sticky height to offset top when state is sticked\n      if (computation.state === 'sticked') {\n        const _elementHeight = snap.stickyComputed.height;\n\n        // substract height when sticy is stacked\n        if (!snap.stickyComputed.boundary.unstacked) {\n          stickedOffset += _elementHeight;\n        // or update the biggest sticky unstacked\n        } else if (_elementHeight > maxStickyUnstackedHeight) {\n          maxStickyUnstackedHeight = _elementHeight;\n        }\n      }\n    }\n\n    stickedOffset += maxStickyUnstackedHeight;\n\n    if (positionBottom) {\n      stickedOffset += container.offsetBottom || 0;\n    } else {\n      stickedOffset += container.offsetTop || 0;\n    }\n\n    return stickedOffset;\n  }\n\n  /**\n   * Create intersection snap.\n   *\n   * @param container Container\n   * @param stickies Stickies\n   * @param intersection Intersection\n   * @param viewportHeight Viewport height\n   * @returns Intersection snap\n   */\n  snapIntersection(\n    container: NgxStickyContainer,\n    stickies: NgxSticky[],\n    intersection: NgxIntersection,\n    viewportHeight: number,\n  ): NgxIntersectionSnap {\n    const disabled = intersection.disabled;\n\n    // enter sticky is sticked on bottom\n    const enterSticky: NgxSticky = {\n      boundary: {\n        top: intersection.top - 1,\n        height: intersection.height,\n        left: container.left,\n        width: container.width,\n      },\n      disabled,\n      top: intersection.top - 1,\n      height: 1,\n      position: 'bottom',\n      direction: 'down',\n    };\n\n    // exit sticky is sticked on top\n    const exitSticky: NgxSticky = {\n      boundary: {\n        top: intersection.top,\n        height: intersection.height - 1,\n        left: container.left,\n        width: container.width,\n      },\n      disabled,\n      top: intersection.top,\n      height: 1,\n      position: 'top',\n      direction: 'down',\n    };\n\n    return {\n      container,\n      enter: this.snapSticky(container, stickies, enterSticky, viewportHeight),\n      exit: this.snapSticky(container, stickies, exitSticky, viewportHeight),\n      intersection: {\n        disabled,\n        height: intersection.height,\n        thresholds: intersection.thresholds ? [ ...intersection.thresholds ] : [ 0, 1 ],\n        top: intersection.top,\n      },\n      viewportHeight,\n    };\n  }\n\n  /**\n   * Create sticky snap.\n   *\n   * @param container Container\n   * @param stickies Stickies\n   * @param sticky Sticky\n   * @param viewportHeight Viewport height\n   * @returns Sticky snap\n   */\n  snapSticky(\n    container: NgxStickyContainer,\n    stickies: NgxSticky[],\n    sticky: NgxSticky,\n    viewportHeight: number,\n  ): NgxStickySnap {\n    const boundariesMap: Record<string, NgxStickyBoundaryComputed> = {};\n\n    const directionDown = isStickyDirectionDown(sticky.direction);\n    const positionBottom = isStickyPositionBottom(sticky.position);\n\n    const stickyComputed: NgxStickyComputed = {\n      boundary: this.computeStickyBoundary(\n        container,\n        sticky.boundary,\n        sticky,\n        directionDown,\n        sticky.spot,\n        viewportHeight,\n      ),\n      directionDown,\n      disabled: false,\n      height: sticky.height,\n      positionBottom,\n      sortPoint: this.computeStickySortPoint(sticky, positionBottom, directionDown, viewportHeight),\n      sticked: null,\n      top: sticky.top,\n    };\n\n    if (\n      container.disabled\n      || sticky.disabled\n      || !sticky.height\n      || sticky.top < stickyComputed.boundary.top\n      || sticky.top > stickyComputed.boundary.top + stickyComputed.boundary.height\n    ) {\n      stickyComputed.disabled = true;\n      stickyComputed.sticked = { height: 0, top: 0 };\n    } else {\n      stickyComputed.sticked = this.computeStickyStickedLine(\n        stickyComputed.boundary,\n        sticky,\n        positionBottom,\n        directionDown,\n        viewportHeight,\n      );\n    }\n\n    const stickiesComputed: NgxStickyComputed[] = [];\n    let offsetSpacer: NgxSticky;\n\n    if (sticky.disabled) {\n      return {\n        boundaries: boundariesMap,\n        container,\n        stickies: stickiesComputed,\n        sticky,\n        stickyComputed,\n        viewportHeight,\n      };\n    }\n\n    // insert fake sticky which represent container offset top\n    if (container.offsetTop && !stickyComputed.positionBottom) {\n      offsetSpacer = {\n        boundary: container,\n        direction: 'down',\n        height: container.offsetTop,\n        position: 'top',\n        disabled: false,\n        top: container.top,\n      };\n\n      stickies = [ offsetSpacer, ...stickies ];\n    }\n\n    // insert fake sticky which represent container offset bottom\n    if (container.offsetBottom && stickyComputed.positionBottom) {\n      offsetSpacer = {\n        boundary: container,\n        direction: 'up',\n        height: container.offsetBottom,\n        position: 'bottom',\n        disabled: false,\n        top: container.top + container.height - container.offsetBottom,\n      };\n\n      stickies = [ offsetSpacer, ...stickies ];\n    }\n\n    // remove 1px to fix round sizes (offsetLeft and offsetWidth)\n    const stickyComputedBoundaryRight = stickyComputed.boundary.left + stickyComputed.boundary.width - 1;\n\n    // tslint:disable-next-line: prefer-for-of\n    for (let _stickyIndex = 0; _stickyIndex < stickies.length; ++_stickyIndex) {\n      const _sticky = stickies[_stickyIndex];\n      let _directionDown: boolean;\n      let _positionBottom: boolean;\n      let _stickyComputed: NgxStickyComputed;\n      let _stickyComputedBoundaryRight: number;\n\n      if (_sticky === sticky) {\n        _directionDown = stickyComputed.directionDown;\n        _positionBottom = stickyComputed.positionBottom;\n        _stickyComputed = stickyComputed;\n        _stickyComputedBoundaryRight = stickyComputedBoundaryRight;\n      } else {\n        _directionDown = isStickyDirectionDown(_sticky.direction);\n        _positionBottom = isStickyPositionBottom(_sticky.position);\n\n        _stickyComputed = {\n          boundary: this.computeStickyBoundary(\n            container,\n            _sticky.boundary,\n            _sticky,\n            _directionDown,\n            _sticky.spot,\n            viewportHeight,\n          ),\n          disabled: false,\n          directionDown: _directionDown,\n          height: _sticky.height,\n          positionBottom: _positionBottom,\n          sortPoint: this.computeStickySortPoint(_sticky, _positionBottom, _directionDown, viewportHeight),\n          sticked: null,\n          top: _sticky.top,\n        };\n\n        // remove 1px to fix round sizes (offsetLeft and offsetWidth)\n        _stickyComputedBoundaryRight = _stickyComputed.boundary.left + _stickyComputed.boundary.width - 1;\n\n        if (\n          _sticky.disabled\n          || !_sticky.height\n          // skip sticky which isn't in its boundary\n          || _sticky.top < _stickyComputed.boundary.top\n          || _sticky.top > _stickyComputed.boundary.top + _stickyComputed.boundary.height\n          // skip sticky sibling when its boundary isn't align horizontaly\n          || stickyComputedBoundaryRight <= _stickyComputed.boundary.left\n          || stickyComputed.boundary.left >= _stickyComputedBoundaryRight\n        ) {\n          _stickyComputed.disabled = true;\n          _stickyComputed.sticked = { height: 0, top: 0 };\n        } else {\n          _stickyComputed.sticked = this.computeStickyStickedLine(\n            _stickyComputed.boundary,\n            _sticky,\n            _positionBottom,\n            _directionDown,\n            viewportHeight,\n          );\n        }\n      }\n\n      // compute boundary unique key\n      const boundaryKey = [ _stickyComputed.boundary.top, _stickyComputed.boundary.height ].join(',');\n\n      // ensure stickies computed to use same boundary instance\n      if (boundariesMap[boundaryKey]) {\n        _stickyComputed.boundary = boundariesMap[boundaryKey];\n      } else {\n        boundariesMap[boundaryKey] = _stickyComputed.boundary;\n      }\n\n      // skip sticky sibling when is disabled\n      if (_stickyComputed.disabled) {\n        continue;\n      }\n\n      // set sticky sibling height as max boundary offset when it unstacked\n      if (_stickyComputed.boundary.unstacked) {\n        if (_directionDown) {\n          if (_sticky.height > _stickyComputed.boundary.offsetBottom) {\n            _stickyComputed.boundary.offsetBottom = _sticky.height;\n          }\n        } else {\n          if (_sticky.height > _stickyComputed.boundary.offsetTop) {\n            _stickyComputed.boundary.offsetTop = _sticky.height;\n          }\n        }\n      // add sticky sibling height to right boundary offset when it stacked\n      } else {\n        if (_directionDown) {\n          _stickyComputed.boundary.offsetBottom += _sticky.height;\n        } else {\n          _stickyComputed.boundary.offsetTop += _sticky.height;\n        }\n      }\n\n      // pushforce offset spacer as sticky siblings\n      if (_sticky === offsetSpacer) {\n        stickiesComputed.push(_stickyComputed);\n\n        continue;\n      }\n\n      // collect stickyComputed siblings\n      if (\n        // when _stickyComputed isn't stickyComputed\n        _stickyComputed !== stickyComputed\n        // and its position equals to stickyComputed position\n        && _stickyComputed.positionBottom === stickyComputed.positionBottom\n        // and its sticked line intersects top of stickyComputed sticked line\n        && stickyComputed.sticked.top >= _stickyComputed.sticked.top\n        && stickyComputed.sticked.top <= _stickyComputed.sticked.top + _stickyComputed.sticked.height\n        // and its top is before stickyComputed top according to its own position\n        && (\n          _stickyComputed.directionDown\n            ? _stickyComputed.top < stickyComputed.top\n            : _stickyComputed.top > stickyComputed.top\n        )\n      ) {\n        stickiesComputed.push(_stickyComputed);\n      }\n    }\n\n    // sort stickyComputed siblings according to their respective sortPoint and boundary top\n    stickiesComputed.sort((a, b) => {\n      return a.positionBottom === stickyComputed.positionBottom\n        ? a.sortPoint < b.sortPoint && a.boundary.top >= b.boundary.top ? 1 : -1\n        : -1;\n    });\n\n    // add stickyComputed in last position\n    stickiesComputed.push(stickyComputed);\n\n    return {\n      container,\n      boundaries: boundariesMap,\n      stickies: stickiesComputed,\n      sticky,\n      stickyComputed,\n      viewportHeight,\n    };\n  }\n}\n","import { Inject, Injectable, NgZone } from '@angular/core';\n\nimport { NgxStickyBaseContainerDirective } from './sticky-base-container.directive';\nimport { NgxStickyEngine } from './sticky-engine';\nimport { NGX_STICKY_WINDOW } from './sticky.tokens';\nimport { NgxStickyContainerController } from './sticky.types';\n\n\n/**\n * Defines the sticky root container which is used to manage sticky without container.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NgxStickyRootContainerController extends NgxStickyBaseContainerDirective {\n  // root container never has parent container\n  readonly containerParent: NgxStickyContainerController = null;\n  // root container never has element\n  readonly element: HTMLElement = null;\n\n  constructor(\n    readonly stickyEngine: NgxStickyEngine,\n    readonly ngZone: NgZone,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly _win: Window,\n  ) {\n    super(null, stickyEngine, ngZone, _win);\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf,\n  forwardRef,\n  isDevMode,\n} from '@angular/core';\nimport { Observable, Subject, Subscription, animationFrameScheduler, merge } from 'rxjs';\nimport { distinctUntilChanged, mapTo, share, takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { NgxStickyBaseController } from './sticky-base.controller';\nimport { NgxStickyBoundaryDirective } from './sticky-boundary.directive';\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyRootContainerController } from './sticky-root-container.controller';\nimport { coerceStickyDirection, coerceStickyPosition, getStuckedPositionTop } from './sticky.helpers';\nimport { NGX_STICKY_WINDOW } from './sticky.tokens';\nimport {\n  NgxSticky,\n  NgxStickyBoundaryController,\n  NgxStickyComputation,\n  NgxStickyContainerController,\n  NgxStickyController,\n  NgxStickyDirection,\n  NgxStickyPosition,\n  NgxStickyState,\n} from './sticky.types';\nimport { coerceBooleanProperty, coerceNumberProperty } from './utils/coercion';\nimport { ConfigSubject, ConfigSubjectSchema } from './utils/config-subject';\nimport { getElementAbsoluteRect, getElementRelativeRect, setElementStyles } from './utils/dom';\nimport { fromImageEvents } from './utils/from-image-events';\n\n\n/**\n * Interface for a sticky style.\n */\nexport interface NgxStickyElementStyle {\n  // [prop: string]: string;\n  width: string;\n  position: string;\n  top: string;\n  right: string;\n  bottom: string;\n  left: string;\n  cssFloat: string;\n  margin: string;\n  marginTop: string;\n  marginRight: string;\n  marginBottom: string;\n  marginLeft: string;\n}\n\n/**\n * Interface for a sticky ghost style.\n */\nexport interface NgxStickyGhostStyle {\n  // [prop: string]: string;\n  width: string;\n  position: string;\n  top: string;\n  right: string;\n  bottom: string;\n  left: string;\n  cssFloat: string;\n  marginTop: string;\n  marginRight: string;\n  marginBottom: string;\n  marginLeft: string;\n\n  height: string;\n  boxSizing: string;\n  borderTop: string;\n  borderBottom: string;\n  borderLeft: string;\n  borderRight: string;\n  paddingTop: string;\n  paddingBottom: string;\n  paddingLeft: string;\n  paddingRight: string;\n}\n\n\nexport interface NgxStickyConfig {\n  classes: boolean;\n  disabled: boolean;\n  direction: NgxStickyDirection;\n  height: number;\n  // orbit: boolean;\n  position: NgxStickyPosition;\n  spacer: HTMLElement | null;\n  spot: HTMLElement | null;\n  spotHeight: number;\n}\n\n\nexport const NGX_STICKY_BASE_CONFIG_SCHEMA: ConfigSubjectSchema<NgxStickyConfig> = {\n  classes: {\n    aliasKey: 'stickyClasses',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n  disabled: {\n    aliasKey: 'stickyDisabled',\n    defaultValue: false,\n    coercion: coerceBooleanProperty,\n  },\n  direction: {\n    aliasKey: 'stickyDirection',\n    defaultValue: 'down',\n    coercion: coerceStickyDirection,\n  },\n  height: {\n    aliasKey: 'stickyHeight',\n    defaultValue: 0,\n    coercion: coerceNumberProperty,\n  },\n  // orbit: {\n  //   aliasKey: 'stickyOrbit',\n  //   defaultValue: false,\n  //   coercion: coerceBooleanProperty,\n  // },\n  position: {\n    aliasKey: 'stickyPosition',\n    defaultValue: 'top',\n    coercion: coerceStickyPosition,\n  },\n  spacer: {\n    aliasKey: 'stickySpacer',\n    defaultValue: null,\n  },\n  spot: {\n    aliasKey: 'stickySpot',\n    defaultValue: null,\n  },\n  spotHeight: {\n    aliasKey: 'stickySpotHeight',\n    defaultValue: 0,\n    coercion: coerceNumberProperty,\n  },\n};\n\n\n/**\n * Defines a sticky.\n */\n@Directive({\n  selector: '[ngxSticky], [ngx-sticky], ngx-sticky',\n  exportAs: 'ngxSticky',\n})\nexport class NgxStickyDirective extends NgxStickyBaseController implements AfterViewInit, OnChanges, OnDestroy {\n  /**\n   * Binding sticky classes.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  stickyClasses: boolean;\n\n  /**\n   * Direction of the sticky; one of 'up' or 'down'.\n   *\n   * Defaults to `'down'`.\n   */\n  @Input()\n  stickyDirection: NgxStickyDirection;\n\n  /**\n   * Disable sticky.\n   *\n   * Defaults to `false`.\n   */\n  @Input()\n  stickyDisabled: boolean;\n\n  /**\n   * Force element height when calculate sticky element height.\n   */\n  @Input()\n  stickyHeight: (element: HTMLElement) => number;\n\n  // /**\n  //  * Indicate sticky element is an orbit.\n  //  *\n  //  * An orbit is a sticky element which isn't visible until\n  //  * it's sticked.\n  //  *\n  //  * Generally an orbit spot on another element to be sticked.\n  //  *\n  //  * Defaults to `false`.\n  //  */\n  // @Input()\n  // stickyOrbit: boolean;\n\n  /**\n   * Position of the sticky; one of 'top' or 'bottom'.\n   *\n   * Defaults to `'top'`.\n   */\n  @Input()\n  stickyPosition: NgxStickyPosition;\n\n  /**\n   * Sticky spacer.\n   *\n   * Defaults to `null`.\n   */\n  @Input()\n  stickySpacer: HTMLElement | null;\n\n  /**\n   * Reference to an element used to determine sticky state.\n   *\n   * The sticky directive will stick element only when spot\n   * isn't visible.\n   *\n   * Defaults to `null`.\n   */\n  @Input()\n  stickySpot: HTMLElement | null;\n\n  /**\n   * Force spot height when calculate sticky spot height.\n   */\n  @Input()\n  stickySpotHeight: (element: HTMLElement) => number;\n\n  /**\n   * Emit sticky computation.\n   */\n  @Output()\n  readonly stickyComputation = new EventEmitter<NgxStickyComputation>();\n\n  /**\n   * Emit sticky state.\n   */\n  @Output()\n  readonly stickyState = new EventEmitter<NgxStickyState>();\n\n  @HostBinding('attr.data-sticky-state')\n  get attrDataStickyState() { return !this.stickyParent ? this.state : null; }\n\n  @HostBinding('class.ngx-sticky')\n  get cssClassSticky() { return !this.stickyParent && this.config.classes; }\n\n  @HostBinding('class.ngx-sticky--normal')\n  get cssClassStickyNormal() { return this.cssClassSticky && this.state === 'normal'; }\n\n  @HostBinding('class.ngx-sticky--sticked')\n  get cssClassStickySticked() { return this.cssClassSticky && this.state === 'sticked'; }\n\n  @HostBinding('class.ngx-sticky--stucked')\n  get cssClassStickyStucked() { return this.cssClassSticky && this.state === 'stucked'; }\n\n  @HostBinding('class.ngx-sticky--disabled')\n  get cssClassStickyDisabled() { return this.cssClassSticky && this.disabled; }\n\n  // @HostBinding('class.ngx-sticky--spot')\n  // get cssClassStickySpot() { return this.cssClassSticky && !!this.config.spot; }\n\n  // @HostBinding('class.ngx-sticky--position-top')\n  // get cssClassStickyPositionTop() { return this.cssClassSticky && !isStickyPositionBottom(this.config.position); }\n\n  // @HostBinding('class.ngx-sticky--position-bottom')\n  // get cssClassStickyPositionBottom() { return this.cssClassSticky && isStickyPositionBottom(this.config.position); }\n\n  // @HostBinding('class.ngx-sticky--direction-up')\n  // get cssClassStickyDirectionUp() { return this.cssClassSticky && !isStickyDirectionDown(this.config.direction); }\n\n  // @HostBinding('class.ngx-sticky--direction-down')\n  // get cssClassStickydirectionDown() { return this.cssClassSticky && isStickyDirectionDown(this.config.direction); }\n\n  get boundary(): NgxStickyBoundaryController {\n    return this._boundary;\n  }\n\n  get container(): NgxStickyContainerController {\n    return this._container;\n  }\n\n  get config(): NgxStickyConfig {\n    return this.config$.getValue();\n  }\n\n  get disabled(): boolean {\n    return this.config.disabled;\n  }\n\n  /**\n   * State of the sticky.\n   */\n  get state(): NgxStickyState {\n    return this._stickyState;\n  }\n\n  /** Inputs config */\n  readonly config$ = new ConfigSubject<NgxStickyConfig>(NGX_STICKY_BASE_CONFIG_SCHEMA);\n\n  /** Sticky container controller */\n  readonly _container: NgxStickyContainerController;\n\n  /** Sticky boundary controller */\n  readonly _boundary?: NgxStickyBoundaryController;\n\n  /** Emits when the component is destroyed. */\n  readonly _destroyed$ = new Subject<void>();\n\n  /** Sticky element style original */\n  _elementOriginStyle: NgxStickyElementStyle;\n\n  /** Monitoring subscription which trigger update stickies and handle refresh */\n  _monitoring: Subscription;\n\n  /** Sticky spacer generated */\n  _spacerGenerated: HTMLElement;\n\n  /** Sticky which reflect last call of _computeSticky() */\n  _sticky: NgxSticky;\n\n  /** Emits when refresh() is called */\n  readonly _refresh$ = new Subject<NgxStickyComputation>();\n\n  /** Sticky computation which reflect last call of _refreshSticky()  */\n  _stickyComputation: NgxStickyComputation;\n\n  /** Sticky element state which reflect last call of _refreshStickyElement() */\n  _stickyElementState: NgxStickyState = null;\n\n  /** Sticky element state which reflect last sticky state output */\n  _stickyState: NgxStickyState = null;\n\n  constructor(\n    readonly rootContainer: NgxStickyRootContainerController,\n    @Optional() @Inject(forwardRef(() => NgxStickyContainerDirective))\n    readonly stickyContainer: NgxStickyContainerController,\n    @Optional() @Inject(forwardRef(() => NgxStickyBoundaryDirective))\n    readonly stickyBoundary: NgxStickyBoundaryController,\n    @SkipSelf() @Optional() @Inject(forwardRef(() => NgxStickyDirective))\n    readonly stickyParent: NgxStickyController,\n    readonly elementRef: ElementRef<HTMLElement>,\n    readonly renderer: Renderer2,\n    // readonly changeDetectorRef: ChangeDetectorRef,\n    readonly ngZone: NgZone,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly _win: Window,\n  ) {\n    super();\n\n    // use root container when sticky isn't in container\n    this._container = stickyContainer || rootContainer;\n\n    // ensure sticky boundary is in same container\n    this._boundary = stickyBoundary && stickyBoundary.container === this._container ? stickyBoundary : null;\n\n    // register sticky in container only if isn't in another sticky\n    if (!this.stickyParent) {\n      // register in parent container for first update calls\n      this.container.registerSticky(this);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.config$.nextChanges(changes);\n  }\n\n  ngAfterViewInit(): void {\n    // avoid sticky initialization when sticky has a parent\n    if (this._preventNestedStickyError()) {\n      return;\n    }\n\n    this._initMonitoring();\n  }\n\n  ngOnDestroy(): void {\n    this.container.unregisterSticky(this);\n\n    if (!this._destroyed$.isStopped) {\n      this._destroyed$.next();\n      this._destroyed$.complete();\n    }\n\n    this._destroyMonitoring();\n  }\n\n  beforeRefresh(fastUpdate?: boolean): void {\n    if (!fastUpdate) {\n      this._sticky = null;\n    }\n  }\n\n  disableSticky(): void {\n    this.config$.nextKeyValue('disabled', true, { skipCoercion: true });\n  }\n\n  enableSticky(): void {\n    this.config$.nextKeyValue('disabled', false, { skipCoercion: true });\n  }\n\n  getSticky(): NgxSticky {\n    if (!this._sticky) {\n      this._sticky = this._computeSticky();\n    }\n\n    return this._sticky;\n  }\n\n  refresh(computation: NgxStickyComputation): void {\n    this._refresh$.next(computation);\n  }\n\n  _computeSticky(): NgxSticky {\n    // IMPORTANT: refresh sticky element to its normal state is required to compute repainted element height.\n    this._refreshStickyElement(null);\n    this._refreshStickyElement('normal');\n\n    const config = this.config$.getValue();\n\n    // element and spot rects which reflects last screen repaint\n    const elementRect = getElementAbsoluteRect(this.elementRef.nativeElement);\n    const spotRect = config.spot ? getElementAbsoluteRect(config.spot) : null;\n\n    if (config.height) {\n      elementRect.height = config.height;\n    }\n\n    if (spotRect && config.spotHeight) {\n      spotRect.height = config.spotHeight;\n    }\n\n    return {\n      disabled: config.disabled,\n      boundary: this.boundary ? this.boundary.getBoundary() : null,\n      direction: config.direction,\n      height: elementRect.height,\n      position: config.position,\n      top: elementRect.top,\n      spot: spotRect,\n    };\n  }\n\n  /**\n   * Create sticky monitoring observable.\n   */\n  _createMonitoringObservable(): Observable<boolean> {\n    return merge(\n      this.config$,\n      fromImageEvents(this.elementRef.nativeElement),\n      fromImageEvents(this.config.spot),\n      animationFrameScheduler,\n    ).pipe(\n      // throttleTime(0, animationFrameScheduler),\n      mapTo(false),\n    );\n  }\n\n  /**\n   * Destroy sticky monitoring subscription.\n   */\n  _destroyMonitoring(): void {\n    if (this._monitoring) {\n      this._monitoring.unsubscribe();\n      this._monitoring = null;\n    }\n  }\n\n  /**\n   * Returns styles of the given state.\n   *\n   * `computation` is required when `state` is `\"sticked\"` or `\"stucked\"`.\n   *\n   * @param state Sticky state\n   * @param computation Sticky state computation\n   * @returns Styles of the sticky state\n   */\n  _getStickyElementStyle(state: NgxStickyState, computation?: NgxStickyComputation): Partial<NgxStickyElementStyle> {\n    const win = this._win;\n\n    if (!win || !state) {\n      return null;\n    }\n\n    const ghost = this.config.spacer || this._spacerGenerated;\n    const ghostParent = ghost.offsetParent as HTMLElement;\n    const ghostParentIsRootElement = ghostParent === win.document.body || ghostParent === win.document.documentElement;\n\n    // when state is normal (computation isn't needed)\n    if (state === 'normal') {\n      const ghostRelativeRect = getElementRelativeRect(win, ghost);\n      const ghostStyle = win.getComputedStyle(ghost);\n      const ghostBorderBox = ghostStyle.boxSizing === 'border-box';\n\n      let elementWidth = ghostRelativeRect.width;\n\n      if (!ghostBorderBox) {\n        elementWidth +=\n          - ((parseFloat(ghostStyle.borderLeft) || 0) + (parseFloat(ghostStyle.borderRight) || 0))\n          - ((parseFloat(ghostStyle.paddingLeft) || 0) + (parseFloat(ghostStyle.paddingRight) || 0));\n      }\n\n      let elementTop = ghostRelativeRect.top;\n      let elementLeft = ghostRelativeRect.left;\n\n      if (ghostParentIsRootElement) {\n        if (this.container !== this.rootContainer) {\n          const ghostRect = getElementAbsoluteRect(ghost);\n          const viewportTop = this.container.getViewportTop();\n\n          elementTop = ghostRect.top - viewportTop;\n        }\n\n        elementTop += win.document.documentElement.offsetTop;\n        elementLeft += win.document.documentElement.offsetLeft;\n      }\n\n      const styles = {\n        position: 'absolute',\n        width: `${elementWidth}px`,\n        top: `${elementTop}px`,\n        right: '',\n        bottom: '',\n        left: `${elementLeft}px`,\n        float: '',\n        margin: '0px',\n      };\n\n      return styles;\n    }\n\n    const { container, stickyComputed, viewportHeight } = computation.snap;\n\n    // when state is sticked\n    if (state === 'sticked') {\n      const positionBottom = stickyComputed.positionBottom;\n\n      let elementTop: number;\n      let elementLeft: number;\n\n      if (this.container !== this.rootContainer) {\n        const ghostRelativeRect = getElementRelativeRect(win, ghost);\n\n        elementLeft = ghostRelativeRect.left;\n\n        if (ghostParentIsRootElement) {\n          elementTop = container.top;\n\n          elementTop += win.document.documentElement.offsetTop;\n          elementLeft += win.document.documentElement.offsetLeft;\n        } else {\n          const ghostParentRect = getElementAbsoluteRect(ghostParent);\n\n          elementTop = computation.viewportTop - ghostParentRect.top;\n        }\n\n        if (positionBottom) {\n          elementTop += viewportHeight - stickyComputed.height - computation.offsetSticked - computation.offsetStucked;\n        } else {\n          elementTop += computation.offsetSticked + computation.offsetStucked;\n        }\n\n        return {\n          position: 'absolute',\n          top: `${elementTop}px`,\n          bottom: '',\n          left: `${elementLeft}px`,\n        };\n      } else {\n        const ghostRect = getElementAbsoluteRect(ghost);\n\n        elementTop = computation.offsetSticked + computation.offsetStucked;\n        elementLeft = ghostRect.left + win.document.documentElement.offsetLeft;\n\n        return {\n          position: 'fixed',\n          top: !positionBottom ? `${elementTop}px` : '',\n          bottom: positionBottom ? `${elementTop}px` : '',\n          left: `${elementLeft}px`,\n        };\n      }\n    }\n\n    // when state is stucked\n    if (state === 'stucked') {\n      const ghostRect = getElementAbsoluteRect(ghost);\n\n      let elementTop: number;\n      let elementLeft: number;\n\n      elementTop = getStuckedPositionTop(computation);\n\n      elementLeft = ghostRect.left;\n\n      if (ghostParentIsRootElement) {\n        if (this.container !== this.rootContainer) {\n          // we can't use computation.viewportTop because it's absolute viewport top\n          const relativeViewportTop = this.container.getViewportTop();\n\n          elementTop -= relativeViewportTop;\n        }\n\n        elementTop += win.document.documentElement.offsetTop;\n        elementLeft += win.document.documentElement.offsetLeft;\n      } else {\n        const ghostParentRect = getElementAbsoluteRect(ghostParent);\n\n        elementTop -= ghostParentRect.top;\n        elementLeft -= ghostParentRect.left;\n      }\n\n      return {\n        position: 'absolute',\n        top: `${elementTop}px`,\n        bottom: '',\n        left: `${elementLeft}px`,\n      };\n    }\n\n    // throw new Error(`Invalid state: ${state}`);\n    return null;\n  }\n\n  /**\n   * Returns sticky ghost style.\n   *\n   * @returns Styles of the sticky ghost\n   */\n  _getStickyGhostStyle(): NgxStickyGhostStyle {\n    const stickySpacer = this.config.spacer || this._spacerGenerated;\n\n    if (!this._win || !stickySpacer) {\n      return null;\n    }\n\n    const element = this.elementRef.nativeElement;\n    const elementStyle = this._win.getComputedStyle(element);\n    const elementnBorderBox = elementStyle.boxSizing === 'border-box';\n\n    let ghostHeight = element.offsetHeight;\n    // const ghostWidth = elementStyle.width;\n\n    // substract borders and paddings when element isn't border-boxed\n    if (!elementnBorderBox) {\n      ghostHeight +=\n        // substract vertical borders\n        - (parseFloat(elementStyle.borderTopWidth) || 0)\n        - (parseFloat(elementStyle.borderBottomWidth) || 0)\n        // substract vertical paddings\n        - (parseFloat(elementStyle.paddingTop) || 0)\n        - (parseFloat(elementStyle.paddingBottom) || 0);\n    }\n\n    const styles: NgxStickyGhostStyle = {\n      boxSizing: elementStyle.boxSizing,\n      position: elementStyle.position,\n      top: elementStyle.top,\n      right: elementStyle.right,\n      bottom: elementStyle.bottom,\n      left: elementStyle.left,\n      width: element.style.width,\n      // width: element.style.width || elementStyle.width,\n      // width: `${ghostWidth}px`,\n      height: `${ghostHeight}px`,\n      borderTop: elementStyle.borderTop,\n      borderBottom: elementStyle.borderBottom,\n      borderLeft: elementStyle.borderLeft,\n      borderRight: elementStyle.borderRight,\n      // borderColor: 'transparent',\n      cssFloat: elementStyle.cssFloat,\n      marginTop: elementStyle.marginTop,\n      marginBottom: elementStyle.marginBottom,\n      marginLeft: elementStyle.marginLeft,\n      marginRight: elementStyle.marginRight,\n      paddingTop: elementStyle.paddingTop,\n      paddingBottom: elementStyle.paddingBottom,\n      paddingLeft: elementStyle.paddingLeft,\n      paddingRight: elementStyle.paddingRight,\n    };\n\n    // if (this.config.orbit) {\n    //   styles.position = 'absolute';\n    //   styles.width = element.style.width || elementStyle.width;\n    // }\n\n    return styles;\n  }\n\n  /**\n   * Hides sticky ghost.\n   */\n  _hideStickyGhost(): void {\n    const ghost = this.config.spacer || this._spacerGenerated;\n\n    if (!ghost) {\n      return;\n    }\n\n    this.renderer.setStyle(ghost, 'display', 'none');\n  }\n\n  /**\n   * Init sticky monitoring.\n   */\n  _initMonitoring(): void {\n    if (!this._win || this._monitoring) {\n      return;\n    }\n\n    this.ngZone.runOutsideAngular(() => {\n      const handleRefreshSubscription = this._refresh$\n        .pipe(\n          takeUntil(this._destroyed$),\n          distinctUntilChanged(),\n          throttleTime(0, animationFrameScheduler, { leading: true, trailing: true }),\n          share(),\n        )\n        .subscribe(computation => {\n          this._refreshSticky(computation);\n        });\n\n      const triggerUpdateSubscription = this._createMonitoringObservable()\n        .pipe(\n          takeUntil(this._destroyed$),\n          share(),\n        )\n        .subscribe(fastUpdate => {\n          this.update(fastUpdate);\n        });\n\n      this._monitoring = new Subscription();\n      this._monitoring.add(handleRefreshSubscription);\n      this._monitoring.add(triggerUpdateSubscription);\n    });\n  }\n\n  /**\n   * Inserts sticky ghost generated.\n   */\n  _insertStickyGhostGenerated(): void {\n    if (this._spacerGenerated) {\n      return;\n    }\n\n    const element = this.elementRef.nativeElement;\n\n    const ghost = this.renderer.createElement(element.tagName);\n    this.renderer.addClass(ghost, 'ngx-sticky-spacer');\n    // this.renderer.setStyle(ghost, 'borderStyle', 'solid');\n    // this.renderer.setStyle(ghost, 'borderColor', 'transparent');\n    this.renderer.insertBefore(element.parentElement, ghost, element);\n\n    this._spacerGenerated = ghost;\n  }\n\n  /**\n   * Log nested sticky error and returns `true` when sticky is in another sticky.\n   *\n   * @returns `true` when sticky is in another sticky\n   */\n  _preventNestedStickyError(): boolean {\n    if (!this.stickyParent) {\n      return false;\n    }\n\n    const nestedStickyError = new Error('Nested sticky is not support. Sticky will not work.');\n\n    const logLevel = isDevMode() ? 'error' : 'warn';\n    const logLevelLogger = console[logLevel];\n\n    logLevelLogger(nestedStickyError);\n\n    return true;\n  }\n\n  /**\n   * Refresh sticky with given computation.\n   *\n   * @param computation Sticky state computation\n   */\n  _refreshSticky(computation: NgxStickyComputation): void {\n    if (\n      // refresh sticky when state has changed\n      computation.state !== this._stickyElementState\n      // or when sticky is in container (other than window)\n      || this.container !== this.rootContainer\n    ) {\n      this._refreshStickyElement(computation.state, computation);\n    }\n\n    this._stickyComputation = computation;\n    this.stickyComputation.next(computation);\n\n    if (computation.state === this._stickyState) {\n      return;\n    }\n\n    this.ngZone.run(() => {\n      this._stickyState = computation.state;\n      this.stickyState.next(computation.state);\n\n      // this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  /**\n   * Refreshs sticky element style.\n   *\n   * @param state Sticky state\n   * @param computation Sticky state computation when state is sticked or stucked\n   */\n  _refreshStickyElement(state: NgxStickyState, computation?: NgxStickyComputation): void {\n    if (!this._win) {\n      return;\n    }\n\n    // hide ghost and refresh original style when state is null\n    if (!state) {\n      this._stickyElementState = null;\n\n      this._hideStickyGhost();\n      this._restoreStickyElementStyle();\n\n      return;\n    }\n\n    this._stickyElementState = state;\n\n    this._saveStickyElementStyle();\n    this._showStickyGhost();\n\n    const elementStyle = this._getStickyElementStyle(state, computation);\n\n    setElementStyles(this.renderer, this.elementRef.nativeElement, elementStyle);\n  }\n\n  /**\n   * Refreshs sticky ghost.\n   */\n  _refreshStickyGhost(): void {\n    const ghost = this.config.spacer || this._spacerGenerated;\n    const ghostStyle = this._getStickyGhostStyle();\n\n    setElementStyles(this.renderer, ghost, ghostStyle);\n  }\n\n  /**\n   * Restore original styles of the sticky.\n   */\n  _restoreStickyElementStyle(): void {\n    setElementStyles(this.renderer, this.elementRef.nativeElement, this._elementOriginStyle);\n    this._elementOriginStyle = null;\n  }\n\n  /**\n   * Saves origin styles of the sticky.\n   */\n  _saveStickyElementStyle(): void {\n    if (!this._elementOriginStyle) {\n      this._elementOriginStyle = {\n        position: this.elementRef.nativeElement.style.position,\n        width: this.elementRef.nativeElement.style.width,\n        top: this.elementRef.nativeElement.style.top,\n        right: this.elementRef.nativeElement.style.right,\n        bottom: this.elementRef.nativeElement.style.bottom,\n        left: this.elementRef.nativeElement.style.left,\n        cssFloat: this.elementRef.nativeElement.style.cssFloat,\n        margin: this.elementRef.nativeElement.style.margin,\n        marginTop: this.elementRef.nativeElement.style.marginTop,\n        marginRight: this.elementRef.nativeElement.style.marginRight,\n        marginBottom: this.elementRef.nativeElement.style.marginBottom,\n        marginLeft: this.elementRef.nativeElement.style.marginLeft,\n      };\n    }\n  }\n\n  /**\n   * Shows sticky ghost.\n   */\n  _showStickyGhost(): void {\n    if (!this.config.spacer && !this._spacerGenerated) {\n      this._insertStickyGhostGenerated();\n      this._refreshStickyGhost();\n\n      return;\n    } else if (this.config.spacer && this._spacerGenerated) {\n      this._spacerGenerated.remove();\n      this._spacerGenerated = null;\n    }\n\n    const ghost = this.config.spacer || this._spacerGenerated;\n\n    if (ghost.style.display === 'none') {\n      this.renderer.setStyle(ghost, 'display', 'block');\n      this._refreshStickyGhost();\n    }\n  }\n}\n","import {\n  NgxStickyComputation,\n  NgxStickyDirection,\n  NgxStickyPosition,\n} from './sticky.types';\n\n\nexport function coerceStickyPosition(value: any): NgxStickyPosition { // tslint:disable-line: no-any\n  return isStickyPositionBottom(value) ? 'bottom' : 'top';\n}\n\nexport function coerceStickyDirection(value: any): NgxStickyDirection { // tslint:disable-line: no-any\n  return isStickyDirectionDown(value) ? 'down' : 'up';\n}\n\n\nexport function getStuckedPositionTop(computation: NgxStickyComputation): number {\n  const {\n    boundary,\n    directionDown,\n    height: elementHeight,\n    positionBottom,\n  } = computation.snap.stickyComputed;\n\n  return directionDown\n    ? boundary.top\n      + boundary.height\n      - elementHeight\n      - (positionBottom\n          ? computation.offsetStucked\n          : boundary.offsetBottom - elementHeight - computation.offsetStucked)\n    : positionBottom\n      ? boundary.top + boundary.offsetTop - elementHeight - computation.offsetStucked\n      : boundary.top + computation.offsetStucked;\n}\n\n\nexport function isStickyPositionBottom(position: NgxStickyPosition) {\n  return position === 'bottom';\n}\n\nexport function isStickyDirectionDown(direction: NgxStickyDirection) {\n  return direction !== 'up';\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgxInViewportDirective } from './in-viewport.directive';\nimport { NgxStickyBoundaryDirective } from './sticky-boundary.directive';\nimport { NgxStickyContainerDirective } from './sticky-container.directive';\nimport { NgxStickyDirective } from './sticky.directive';\n\n/**\n * Adds sticky directives and providers.\n *\n * Managing sticky elements is one of the hardest parts of building web applications.\n *\n * The NgxStickyModule allows to manage sticky elements in the best way.\n *\n * @example\n * NgxStickyModule can be imported multiple times: once per lazily-loaded bundle.\n *\n * ```\n * @NgModule({\n *   imports: [ NgxStickyModule ]\n * })\n * class MyNgModule {}\n * ```\n */\n@NgModule({\n  declarations: [\n    NgxInViewportDirective,\n    NgxStickyBoundaryDirective,\n    NgxStickyContainerDirective,\n    NgxStickyDirective,\n  ],\n  exports: [\n    NgxInViewportDirective,\n    NgxStickyBoundaryDirective,\n    NgxStickyContainerDirective,\n    NgxStickyDirective,\n  ],\n  imports: [ CommonModule ],\n})\nexport class NgxStickyModule { }\n","import { InjectionToken } from '@angular/core';\n\n\nexport const NGX_STICKY_WINDOW = new InjectionToken<Window>('NGX_STICKY_WINDOW', {\n  providedIn: 'root',\n  factory: () => typeof window !== 'undefined' ? window : null,\n});\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean { // tslint:disable-line: no-any\n  return value != null && `${value}` !== 'false';\n}\n\n\n/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any): number; // tslint:disable-line: no-any\nexport function coerceNumberProperty<D>(value: any, fallback: D): number | D; // tslint:disable-line: no-any\nexport function coerceNumberProperty(value: any, fallbackValue = 0) { // tslint:disable-line: no-any\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nexport function _isNumberValue(value: any): boolean { // tslint:disable-line: no-any\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)); // tslint:disable-line: no-any\n}\n","\n\n/**\n * Add entry into set.\n *\n * @param set Array list\n * @param entry Entry to add\n * @returns Entry index added\n */\nexport function addEntry<T>(set: T[], entry: T): number {\n  let entryIndex = set.indexOf(entry);\n\n  if (entryIndex === -1) {\n    entryIndex = set.length;\n\n    set[entryIndex] = entry;\n  }\n\n  return entryIndex;\n}\n\n\n/**\n * Delete entry from set.\n *\n * @param set Array list\n * @param entry Entry to delete\n * @returns Entry index deleted\n */\nexport function deleteEntry<T>(set: T[], entry: T): number {\n  const entryIndex = set.indexOf(entry);\n\n  if (entryIndex !== -1) {\n    set.splice(entryIndex, 1);\n  }\n\n  return entryIndex;\n}\n","import { Subject, Subscription } from 'rxjs';\n\nimport { InputCoercionFn, InputSubject, InputSubjectChange, InputSubjectNextOptions } from './input-subject';\n\n\nexport type ConfigInputSubjects<T> = { [K in keyof T]: InputSubject<T[K]> };\nexport type ConfigSubjectChanges<T> = { [K in keyof T]: InputSubjectChange<T[K]> };\nexport type ConfigSubjectSchema<T> = { [K in keyof T]: ConfigSubjectInputOptions<T, K> };\n\nexport interface ConfigSubjectInputOptions<T, K extends keyof T> {\n  defaultValue: T[K];\n  aliasKey?: string;\n  coercion?: InputCoercionFn<T[K]>;\n}\n\n\n/**\n * A ConfigSubject is an Observable that coerces key-values and emit when change is detected\n */\nexport class ConfigSubject<T> extends Subject<T> {\n  /** Emit key-values changes */\n  readonly changes$ = new Subject<ConfigSubjectChanges<T>>();\n  /** Input subjects for each config key-value */\n  readonly inputs: ConfigInputSubjects<T>;\n\n  _config: T;\n  _configChanged: boolean;\n  _configChanges: ConfigSubjectChanges<T>;\n\n  readonly _aliases: { [key: string]: keyof T };\n\n  readonly _pushChangesSubscription = new Subscription();\n\n  constructor(schema: ConfigSubjectSchema<T>) {\n    super();\n\n    this.inputs = {} as ConfigInputSubjects<T>;\n    this._config = {} as T;\n    this._configChanges = {} as ConfigSubjectChanges<T>;\n    this._aliases = {};\n\n    const inputKeys = Object.keys(schema) as (keyof T)[];\n\n    for (const inputKey of inputKeys) {\n      const inputOptions = schema[inputKey];\n\n      if (inputOptions.aliasKey) {\n        this._aliases[inputOptions.aliasKey] = inputKey;\n      }\n\n      const input = new InputSubject<T[keyof T]>(inputOptions.defaultValue, inputOptions.coercion);\n\n      this._config[inputKey] = inputOptions.defaultValue;\n      this.inputs[inputKey] = input;\n\n      const pushChangeSubscription = input.change$.subscribe(inputChange => {\n        this._configChanged = true;\n        this._configChanges[inputKey] = inputChange;\n\n        this._config = { ...this._config };\n        this._config[inputKey] = inputChange.currentValue;\n      });\n\n      this._pushChangesSubscription.add(pushChangeSubscription);\n    }\n  }\n\n  /**\n   * Returns current config.\n   */\n  getValue(): T {\n    return this._config;\n  }\n\n  /**\n   * Returns key-value.\n   *\n   * @param inputKey Input key\n   * @returns key-value\n   */\n  getKeyValue<K extends keyof T>(inputKey: K): T[K] {\n    return this._config[inputKey];\n  }\n\n  /**\n   * Emit next config.\n   *\n   * @param partialConfig Partial next config\n   * @param options Options to skip coercion\n   */\n  next(partialConfig?: Partial<T>, options?: InputSubjectNextOptions): void {\n    const inputKeys = Object.keys(partialConfig);\n\n    for (const key of inputKeys) {\n      const inputKey = (this._aliases[key] || key) as keyof T;\n\n      if (inputKey in this.inputs) {\n        const inputValue = partialConfig[key] as T[keyof T];\n        const inputSubject = this.inputs[inputKey];\n\n        inputSubject.next(inputValue, options);\n      }\n    }\n\n    if (this._configChanged) {\n      const changes = { ...this._configChanges };\n\n      this._configChanged = false;\n      this._configChanges = {} as ConfigSubjectChanges<T>;\n\n      this.changes$.next(changes);\n\n      super.next(this._config);\n    }\n  }\n\n  /**\n   * Emit next key-value.\n   *\n   * @param inputKey Input key\n   * @param value key-value\n   * @param options Options to skip coercion\n   */\n  nextKeyValue<K extends keyof T>(inputKey: K, value: T[K], options?: InputSubjectNextOptions): void {\n    this.next({ [inputKey]: value } as {} as Partial<T>, options);\n  }\n\n  /**\n   * Apply simple changes as like ngOnChange(changes: SimpleChanges) input.\n   *\n   * @param changes Simple changes\n   */\n  nextChanges(changes: { [key: string]: { currentValue: any } }) { // tslint:disable-line: no-any\n    const changeKeys = Object.keys(changes);\n    const config: Partial<T> = {};\n\n    for (const inputKey of changeKeys) {\n      config[inputKey] = changes[inputKey].currentValue;\n    }\n\n    this.next(config);\n  }\n}\n","import { Renderer2 } from '@angular/core';\n\n\n/**\n * Returns getter for document height.\n *\n * @param win Window reference\n * @returns Getter for document height.\n */\nexport function getDocumentHeightFactory(win: Window): () => number {\n  if (!win) {\n    return () => 0;\n  }\n\n  const documentHeightGetters = [\n    () => win.document.body.scrollHeight,\n    () => win.document.documentElement.scrollHeight,\n    () => win.document.body.offsetHeight,\n    () => win.document.documentElement.offsetHeight,\n    () => win.document.body.clientHeight,\n    () => win.document.documentElement.clientHeight,\n  ];\n\n  let documentHeightGetter: () => number;\n  let documentHeight = 0;\n\n  for (const _documentHeightGetter of documentHeightGetters) {\n    const _documentHeight = _documentHeightGetter();\n\n    if (_documentHeight > documentHeight) {\n      documentHeightGetter = _documentHeightGetter;\n      documentHeight = _documentHeight;\n    }\n  }\n\n  return documentHeightGetter;\n}\n\n\n/**\n * Returns getter for document width.\n *\n * @param win Window reference\n * @returns Getter for document width.\n */\nexport function getDocumentWidthFactory(win: Window): () => number {\n  if (!win) {\n    return () => 0;\n  }\n\n  const documentWidthGetters = [\n    () => win.document.body.scrollWidth,\n    () => win.document.documentElement.scrollWidth,\n    () => win.document.body.offsetWidth,\n    () => win.document.documentElement.offsetWidth,\n    () => win.document.body.clientWidth,\n    () => win.document.documentElement.clientWidth,\n  ];\n\n  let documentWidthGetter = documentWidthGetters[0];\n  let documentWidth = 0;\n\n  for (const _documentWidthGetter of documentWidthGetters) {\n    const _documentWidth = _documentWidthGetter();\n\n    if (_documentWidth > documentWidth) {\n      documentWidthGetter = _documentWidthGetter;\n      documentWidth = _documentWidth;\n    }\n  }\n\n  return documentWidthGetter;\n}\n\n\n/**\n * Returns element absolute rect.\n *\n * @param element Element\n * @returns Element absolute rect\n */\nexport function getElementAbsoluteRect(element: HTMLElement) {\n  const rect = {\n    height: element.offsetHeight,\n    width: element.offsetWidth,\n    left: 0,\n    top: 0,\n  };\n\n  let currentElement = element;\n\n  do {\n    rect.top += currentElement.offsetTop || 0;\n    rect.left += currentElement.offsetLeft || 0;\n\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return rect;\n}\n\n\n/**\n * Returns element relative rect.\n *\n * @param win Window reference\n * @param element Element\n * @returns Element relative rect.\n */\nexport function getElementRelativeRect(win: Window, element: HTMLElement) {\n  const rect = {\n    height: element.offsetHeight,\n    width: element.offsetWidth,\n    left: 0,\n    top: 0,\n  };\n\n  let currentElement = element;\n  let currentElementStyle: CSSStyleDeclaration;\n\n  do {\n    currentElementStyle = currentElement !== element ? win.getComputedStyle(currentElement) : {} as CSSStyleDeclaration;\n\n    if (currentElementStyle.position === 'relative') {\n      break;\n    }\n\n    if (currentElementStyle.position !== 'absolute') {\n      rect.top += currentElement.offsetTop || 0;\n      rect.left += currentElement.offsetLeft || 0;\n    }\n\n    currentElement = currentElement.offsetParent as HTMLElement;\n  } while (currentElement);\n\n  return rect;\n}\n\n\n/**\n * Get window viewport height.\n *\n * @param win Window reference\n * @returns Window viewport height\n */\nexport function getWindowViewportHeight(win: Window): number {\n  return win && win.innerHeight || 0;\n}\n\n\n/**\n * Get window scroll left position.\n *\n * @param win Window reference\n * @returns Window scroll left position\n */\nexport function getWindowViewportLeft(win: Window): number {\n  if (!win) {\n    return 0;\n  }\n\n  // The top-left-corner of the viewport is determined by the scroll position of the document\n  // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n  // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n  // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n  // `document.documentElement` works consistently, where the `top` and `left` values will\n  // equal negative the scroll position.\n  const documentRect = win.document.documentElement.getBoundingClientRect();\n\n  return -documentRect.left\n    || win.document.body.scrollLeft\n    || win.scrollX\n    || win.document.documentElement.scrollLeft\n    || 0;\n}\n\n\n/**\n * Get window scroll top position.\n *\n * @param win Window reference\n * @returns Window scroll top position\n */\nexport function getWindowViewportTop(win: Window): number {\n  if (!win) {\n    return 0;\n  }\n\n  // The top-left-corner of the viewport is determined by the scroll position of the document\n  // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n  // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n  // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n  // `document.documentElement` works consistently, where the `top` and `left` values will\n  // equal negative the scroll position.\n  const documentRect = win.document.documentElement.getBoundingClientRect();\n\n  return -documentRect.top\n    || win.document.body.scrollTop\n    || win.scrollY\n    || win.document.documentElement.scrollTop\n    || 0;\n}\n\n\n/**\n * Returns `true` when element is scrollable.\n *\n * @param win Window reference\n * @param element Element\n * @returns `true` when element is scrollable\n */\nexport function isElementScrollableY(win: Window, element: HTMLElement): boolean {\n  return element.offsetHeight < element.scrollHeight && win.getComputedStyle(element).overflowY === 'auto';\n}\n\n\n/**\n * Set styles on a given element.\n *\n * @param renderer Renderer2 instance\n * @param element Element\n * @param styles Styles\n */\nexport function setElementStyles(\n  renderer: Renderer2,\n  element: HTMLElement,\n  styles: any, // tslint:disable-line:no-any\n): void {\n  if (!element || !styles) {\n    return;\n  }\n\n  const propKeys = Object.keys(styles);\n\n  for (const prop of propKeys) {\n    const value = styles[prop];\n\n    if (value) {\n      renderer.setStyle(element, prop, value);\n    } else {\n      renderer.removeStyle(element, prop);\n    }\n  }\n}\n\n","import { Observable, fromEvent, merge, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Create observable which emit image events.\n *\n * @param element Element\n * @returns Observable on image events\n */\nexport function fromImageEvents(element: HTMLElement): Observable<{ event: Event; target: HTMLImageElement }> {\n  if (!element) {\n    return of();\n  }\n\n  const images$: Observable<{ event: Event; target: HTMLImageElement }>[] = [];\n\n  const addImage = (target: HTMLImageElement) => images$.push(\n    fromEvent(target, 'load').pipe(map(event => ({ event, target }))),\n    fromEvent(target, 'error').pipe(map(event => ({ event, target }))),\n  );\n\n  // if (element instanceof HTMLImageElement) {\n  if (element.tagName === 'IMG' || element.tagName === 'img') {\n    addImage(element as HTMLImageElement);\n  } else {\n    element.querySelectorAll('img').forEach(addImage);\n  }\n\n  return merge(...images$);\n}\n","import { BehaviorSubject, Observable, of } from 'rxjs';\n\n/**\n * Create observable which emit media query events.\n *\n * @param win Window reference\n * @param query Media query\n * @returns Observable on media query events\n */\nexport function fromMediaQuery(win: Window, query: string): Observable<MediaQueryListEvent> {\n  if (!win || !win.matchMedia) {\n    return of();\n  }\n\n  const mql = win.matchMedia(query);\n\n  const initEvent = {\n    matches: mql.matches,\n    media: query,\n  };\n\n  const initMqlEvent = typeof MediaQueryListEvent !== 'undefined'\n    ? new MediaQueryListEvent('change', initEvent)\n    : { type: 'change', ...initEvent} as MediaQueryListEvent;\n\n  const mql$ = new BehaviorSubject<MediaQueryListEvent>(initMqlEvent);\n\n  const onQueryChange = (mqlEvent: MediaQueryListEvent) => mql$.next(mqlEvent);\n  const complete = mql$.complete;\n\n  mql$.complete = function() { // tslint:disable-line: only-arrow-functions\n    complete.call(mql$);\n    mql.removeListener(onQueryChange); // tslint:disable-line: deprecation\n  };\n\n  mql.addListener(onQueryChange); // tslint:disable-line: deprecation\n\n  return mql$;\n}\n","export * from './coercion';\nexport * from './collections';\nexport * from './config-subject';\nexport * from './dom';\nexport * from './from-image-events';\nexport * from './from-media-query';\nexport * from './input-subject';\nexport * from './intersection';\n","import { Subject } from 'rxjs';\n\n\nexport type InputCoercionFn<T> = (value: T) => T;\n\nexport interface InputSubjectNextOptions {\n  skipCoercion?: boolean;\n}\n\nexport interface InputSubjectChange<T> {\n  previousValue: T;\n  currentValue: T;\n  firstChange: boolean;\n}\n\n\n/**\n * An InputSubject is an Observable that coerces values and emit when change is detected.\n */\nexport class InputSubject<T> extends Subject<T> {\n  /** Emit value changes */\n  readonly change$ = new Subject<InputSubjectChange<T>>();\n\n  _firstChange = true;\n  _value: T;\n  _valueSetted: T;\n\n  constructor(\n    readonly defaultValue: T,\n    readonly coercion?: InputCoercionFn<T>,\n  ) {\n    super();\n\n    this._value = defaultValue;\n  }\n\n  /**\n   * Returns current value.\n   */\n  getValue(): T {\n    return this._value;\n  }\n\n  /**\n   * Emit next value.\n   *\n   * @param value Next value\n   * @param options Options to skip coercion\n   */\n  next(value?: T, options?: InputSubjectNextOptions): void {\n    if (!options || !options.skipCoercion) {\n      if (value === this._valueSetted) {\n        return;\n      }\n\n      this._valueSetted = value;\n\n      if (this.coercion) {\n        value = this.coercion(value);\n      }\n    }\n\n    if (value !== this._value) {\n      const firstChange = this._firstChange;\n      const previousValue = this._value;\n\n      this._firstChange = false;\n      this._value = value;\n\n      this.change$.next({\n        previousValue,\n        currentValue: value,\n        firstChange,\n      });\n\n      super.next(value);\n    }\n  }\n}\n","\n\n/** Coerces a data-bound value (typically a string) to intersection thresholds. */\nexport function coerceIntersectionThresholds(thresholds: any) { // tslint:disable-line: no-any\n  if (typeof thresholds === 'number') {\n    return [ thresholds ];\n  }\n\n  if (typeof thresholds === 'string') {\n    return (thresholds as string)\n      .split(',')\n      .map(x => (parseFloat(x) || 0))\n      .sort();\n  }\n\n  if (!thresholds) {\n    return [ 0, 1 ];\n  }\n\n  if (!Array.isArray(thresholds)) {\n    thresholds = [ thresholds ];\n  }\n\n  return [ ...thresholds ].sort();\n}\n\n\n/**\n * Returns threshold crossed for a given ratio change.\n *\n * @param thresholds Thresholds\n * @param oldRatio Old ratio\n * @param newRatio New ratio\n * @returns Threshold crossed or `undefined`\n */\nexport function getCrossedThreshold(thresholds: number[], oldRatio: number, newRatio: number): number {\n  let crossedThreshold: number;\n\n  for (const threshold of thresholds) {\n    if (\n      // threshold is perfect-crossed by old ratio\n      threshold === oldRatio\n      // or threshold is perfect-crossed by new ratio\n      || threshold === newRatio\n      // or threshold is crossed by new ratio and old ratio (there are on the opposite sides)\n      || threshold < oldRatio !== threshold < newRatio\n    ) {\n      crossedThreshold = threshold;\n      break;\n    }\n  }\n\n  return crossedThreshold;\n}\n","/*\n * Public API Surface of @enten/ngx-sticky\n */\n\nexport * from './lib/in-viewport.directive';\nexport * from './lib/sticky-base-boundary.controller';\nexport * from './lib/sticky-base-container.controller';\nexport * from './lib/sticky-base-container.directive';\nexport * from './lib/sticky-base.controller';\nexport * from './lib/sticky-boundary.directive';\nexport * from './lib/sticky-container.directive';\nexport * from './lib/sticky-engine';\nexport * from './lib/sticky-root-container.controller';\nexport * from './lib/sticky.directive';\nexport * from './lib/sticky.helpers';\nexport * from './lib/sticky.module';\nexport * from './lib/sticky.tokens';\nexport * from './lib/sticky.types';\nexport * from './lib/utils';\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }\n","module.exports = \":host {\\n  display: block;\\n}\\n\\n.container {\\n  padding: 2rem;\\n}\\n\\n.navigation {\\n  background: #cfd8dc;\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.3);\\n  font-size: 2.4rem;\\n  z-index: 5;\\n}\\n\\n.navigation h1 {\\n  display: inline;\\n  font-size: inherit;\\n  margin: 0;\\n}\\n\\n.header,\\n.api,\\n.footer {\\n  background: #eceff1;\\n}\\n\\n.header {\\n  z-index: 3;\\n}\\n\\n.footer {\\n  background: #9da6a9;\\n  color: #eceff1;\\n}\\n\\n.examples .container > div,\\n.api .container > div {\\n  margin-bottom: 12rem;\\n}\\n\\n.sidepanes .controls-header {\\n  font-weight: bold;\\n  margin: 1rem 0;\\n}\\n\\n.sidepanes .controls-group {\\n  padding: 0;\\n  line-height: 1.6em;\\n  margin-bottom: 1.6rem;\\n}\\n\\n.sidepanes .controls-group-header {\\n  font-style: italic;\\n}\\n\\n.sidepanes .controls-group div > label {\\n  display: inline-block;\\n  margin-right: 2rem;\\n  min-width: 18rem;\\n}\\n\\n.sidepanes .controls-group div > input[type=number],\\n.sidepanes .controls-group div > input[type=text] {\\n  width: 5rem;\\n}\\n\\n.sidepanes .controls .code {\\n  margin-top: 0;\\n}\\n\\n.sidepanes .preview {\\n  margin: 0;\\n  min-height: 40rem;\\n  padding: 1rem;\\n  background: #fff;\\n}\\n\\n.sidepanes .preview header,\\n.sidepanes .preview footer,\\n.sidepanes .preview p {\\n  min-height: 1rem;\\n  padding: 0.5rem 1rem;\\n}\\n\\n.sidepanes .preview header,\\n.sidepanes .preview footer {\\n  background: #cfd8dc;\\n  z-index: 2;\\n}\\n\\n.sidepanes .preview [ngx-sticky-boundary] {\\n  background: #eceff1;\\n  padding: 1rem;\\n}\\n\\n.sidepanes .preview p {\\n  min-height: 1rem;\\n  padding: 0.5rem 1rem;\\n  background: #cfd8dc;\\n  opacity: 0.5;\\n}\\n\\n.sidepanes .preview p[ngx-sticky] {\\n  opacity: 1;\\n}\\n\\n.example.sticky-classes .preview {\\n  position: relative;\\n}\\n\\n.example.sticky-classes header {\\n  position: relative;\\n  z-index: 2;\\n}\\n\\n.example.sticky-classes .header-sticky {\\n  display: none;\\n  position: absolute;\\n  background: lightblue;\\n  padding: 1rem;\\n  left: 1rem;\\n  right: 1rem;\\n  z-index: 1;\\n  transition: -webkit-transform 0.3s;\\n  transition: transform 0.3s;\\n  transition: transform 0.3s, -webkit-transform 0.3s;\\n  -webkit-transform: translateY(-100%);\\n          transform: translateY(-100%);\\n}\\n\\n.example.sticky-classes .header-sticky:not(.ngx-sticky--disabled) {\\n  display: block;\\n}\\n\\n.example.sticky-classes .header-sticky:not(.ngx-sticky--normal) {\\n  -webkit-transform: translateY(0%);\\n          transform: translateY(0%);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3N0ZXZlbi9jb2RlL25neC1zdGlja3kvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7QUNDRjs7QURFQTtFQUNFLG1CQUFBO0VBQ0EsMENBQUE7RUFDQSxpQkFBQTtFQUNBLFVBQUE7QUNDRjs7QURDRTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7QUNDSjs7QURJQTs7O0VBR0UsbUJBQUE7QUNERjs7QURJQTtFQUNFLFVBQUE7QUNERjs7QURJQTtFQUNFLG1CQUFBO0VBQ0EsY0FBQTtBQ0RGOztBRE9FOztFQUNFLG9CQUFBO0FDSEo7O0FEVUk7RUFDRSxpQkFBQTtFQUNBLGNBQUE7QUNQTjs7QURVSTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtFQUNBLHFCQUFBO0FDUk47O0FEVU07RUFDRSxrQkFBQTtBQ1JSOztBRFdNO0VBQ0UscUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDVFI7O0FEWU07O0VBRUUsV0FBQTtBQ1ZSOztBRGNJO0VBQ0UsYUFBQTtBQ1pOOztBRGdCRTtFQUVFLFNBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQ2ZKOztBRGlCSTs7O0VBR0UsZ0JBQUE7RUFDQSxvQkFBQTtBQ2ZOOztBRGtCSTs7RUFFRSxtQkFBQTtFQUNBLFVBQUE7QUNoQk47O0FEbUJJO0VBQ0UsbUJBQUE7RUFDQSxhQUFBO0FDakJOOztBRG9CSTtFQUNFLGdCQUFBO0VBQ0Esb0JBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNsQk47O0FEb0JNO0VBQ0UsVUFBQTtBQ2xCUjs7QUQwQkU7RUFDRSxrQkFBQTtBQ3ZCSjs7QUQwQkU7RUFDRSxrQkFBQTtFQUNBLFVBQUE7QUN4Qko7O0FEMEJFO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0Esa0NBQUE7RUFBQSwwQkFBQTtFQUFBLGtEQUFBO0VBQ0Esb0NBQUE7VUFBQSw0QkFBQTtBQ3hCSjs7QUQwQkk7RUFDRSxjQUFBO0FDeEJOOztBRDJCSTtFQUNFLGlDQUFBO1VBQUEseUJBQUE7QUN6Qk4iLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY29udGFpbmVyIHtcbiAgcGFkZGluZzogMnJlbTtcbn1cblxuLm5hdmlnYXRpb24ge1xuICBiYWNrZ3JvdW5kOiAjY2ZkOGRjO1xuICBib3gtc2hhZG93OiAwIDJweCA1cHggMCByZ2JhKDAsIDAsIDAsIC4zKTtcbiAgZm9udC1zaXplOiAyLjRyZW07XG4gIHotaW5kZXg6IDU7XG5cbiAgaDEge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBmb250LXNpemU6IGluaGVyaXQ7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cblxuLmhlYWRlcixcbi5hcGksXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogI2VjZWZmMTtcbn1cblxuLmhlYWRlciB7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjOWRhNmE5O1xuICBjb2xvcjogI2VjZWZmMTtcbn1cblxuXG4uZXhhbXBsZXMsXG4uYXBpIHtcbiAgLmNvbnRhaW5lciA+IGRpdiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJyZW07XG4gIH1cbn1cblxuXG4uc2lkZXBhbmVzIHtcbiAgLmNvbnRyb2xzIHtcbiAgICAmLWhlYWRlciB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbjogMXJlbSAwO1xuICAgIH1cblxuICAgICYtZ3JvdXAge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjZlbTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEuNnJlbTtcblxuICAgICAgJi1oZWFkZXIge1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICB9XG5cbiAgICAgIGRpdiA+IGxhYmVsIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XG4gICAgICAgIG1pbi13aWR0aDogMThyZW07XG4gICAgICB9XG5cbiAgICAgIGRpdiA+IGlucHV0W3R5cGU9bnVtYmVyXSxcbiAgICAgIGRpdiA+IGlucHV0W3R5cGU9dGV4dF0ge1xuICAgICAgICB3aWR0aDogNXJlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuY29kZSB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cbiAgfVxuXG4gIC5wcmV2aWV3IHtcbiAgICAvLyB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMDtcbiAgICBtaW4taGVpZ2h0OiA0MHJlbTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG5cbiAgICBoZWFkZXIsXG4gICAgZm9vdGVyLFxuICAgIHAge1xuICAgICAgbWluLWhlaWdodDogMXJlbTtcbiAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgIH1cblxuICAgIGhlYWRlcixcbiAgICBmb290ZXIge1xuICAgICAgYmFja2dyb3VuZDogI2NmZDhkYztcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgfVxuXG4gICAgW25neC1zdGlja3ktYm91bmRhcnldIHtcbiAgICAgIGJhY2tncm91bmQ6ICNlY2VmZjE7XG4gICAgICBwYWRkaW5nOiAxcmVtO1xuICAgIH1cblxuICAgIHAge1xuICAgICAgbWluLWhlaWdodDogMXJlbTtcbiAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgICAgYmFja2dyb3VuZDogI2NmZDhkYztcbiAgICAgIG9wYWNpdHk6IDAuNTtcblxuICAgICAgJltuZ3gtc3RpY2t5XSB7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cblxuLmV4YW1wbGUuc3RpY2t5LWNsYXNzZXMge1xuICAucHJldmlldyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC8vIHBhZGRpbmctdG9wOiA2cmVtO1xuICB9XG4gIGhlYWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHotaW5kZXg6IDI7XG4gIH1cbiAgLmhlYWRlci1zdGlja3kge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQ6IGxpZ2h0Ymx1ZTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGxlZnQ6IDFyZW07XG4gICAgcmlnaHQ6IDFyZW07XG4gICAgei1pbmRleDogMTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xuXG4gICAgJjpub3QoLm5neC1zdGlja3ktLWRpc2FibGVkKSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG5cbiAgICAmOm5vdCgubmd4LXN0aWNreS0tbm9ybWFsKSB7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCUpO1xuICAgIH1cbiAgfVxufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDJyZW07XG59XG5cbi5uYXZpZ2F0aW9uIHtcbiAgYmFja2dyb3VuZDogI2NmZDhkYztcbiAgYm94LXNoYWRvdzogMCAycHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBmb250LXNpemU6IDIuNHJlbTtcbiAgei1pbmRleDogNTtcbn1cbi5uYXZpZ2F0aW9uIGgxIHtcbiAgZGlzcGxheTogaW5saW5lO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIG1hcmdpbjogMDtcbn1cblxuLmhlYWRlcixcbi5hcGksXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogI2VjZWZmMTtcbn1cblxuLmhlYWRlciB7XG4gIHotaW5kZXg6IDM7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjOWRhNmE5O1xuICBjb2xvcjogI2VjZWZmMTtcbn1cblxuLmV4YW1wbGVzIC5jb250YWluZXIgPiBkaXYsXG4uYXBpIC5jb250YWluZXIgPiBkaXYge1xuICBtYXJnaW4tYm90dG9tOiAxMnJlbTtcbn1cblxuLnNpZGVwYW5lcyAuY29udHJvbHMtaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIG1hcmdpbjogMXJlbSAwO1xufVxuLnNpZGVwYW5lcyAuY29udHJvbHMtZ3JvdXAge1xuICBwYWRkaW5nOiAwO1xuICBsaW5lLWhlaWdodDogMS42ZW07XG4gIG1hcmdpbi1ib3R0b206IDEuNnJlbTtcbn1cbi5zaWRlcGFuZXMgLmNvbnRyb2xzLWdyb3VwLWhlYWRlciB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cbi5zaWRlcGFuZXMgLmNvbnRyb2xzLWdyb3VwIGRpdiA+IGxhYmVsIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tcmlnaHQ6IDJyZW07XG4gIG1pbi13aWR0aDogMThyZW07XG59XG4uc2lkZXBhbmVzIC5jb250cm9scy1ncm91cCBkaXYgPiBpbnB1dFt0eXBlPW51bWJlcl0sXG4uc2lkZXBhbmVzIC5jb250cm9scy1ncm91cCBkaXYgPiBpbnB1dFt0eXBlPXRleHRdIHtcbiAgd2lkdGg6IDVyZW07XG59XG4uc2lkZXBhbmVzIC5jb250cm9scyAuY29kZSB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uc2lkZXBhbmVzIC5wcmV2aWV3IHtcbiAgbWFyZ2luOiAwO1xuICBtaW4taGVpZ2h0OiA0MHJlbTtcbiAgcGFkZGluZzogMXJlbTtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbn1cbi5zaWRlcGFuZXMgLnByZXZpZXcgaGVhZGVyLFxuLnNpZGVwYW5lcyAucHJldmlldyBmb290ZXIsXG4uc2lkZXBhbmVzIC5wcmV2aWV3IHAge1xuICBtaW4taGVpZ2h0OiAxcmVtO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbTtcbn1cbi5zaWRlcGFuZXMgLnByZXZpZXcgaGVhZGVyLFxuLnNpZGVwYW5lcyAucHJldmlldyBmb290ZXIge1xuICBiYWNrZ3JvdW5kOiAjY2ZkOGRjO1xuICB6LWluZGV4OiAyO1xufVxuLnNpZGVwYW5lcyAucHJldmlldyBbbmd4LXN0aWNreS1ib3VuZGFyeV0ge1xuICBiYWNrZ3JvdW5kOiAjZWNlZmYxO1xuICBwYWRkaW5nOiAxcmVtO1xufVxuLnNpZGVwYW5lcyAucHJldmlldyBwIHtcbiAgbWluLWhlaWdodDogMXJlbTtcbiAgcGFkZGluZzogMC41cmVtIDFyZW07XG4gIGJhY2tncm91bmQ6ICNjZmQ4ZGM7XG4gIG9wYWNpdHk6IDAuNTtcbn1cbi5zaWRlcGFuZXMgLnByZXZpZXcgcFtuZ3gtc3RpY2t5XSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5leGFtcGxlLnN0aWNreS1jbGFzc2VzIC5wcmV2aWV3IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmV4YW1wbGUuc3RpY2t5LWNsYXNzZXMgaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xufVxuLmV4YW1wbGUuc3RpY2t5LWNsYXNzZXMgLmhlYWRlci1zdGlja3kge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQ6IGxpZ2h0Ymx1ZTtcbiAgcGFkZGluZzogMXJlbTtcbiAgbGVmdDogMXJlbTtcbiAgcmlnaHQ6IDFyZW07XG4gIHotaW5kZXg6IDE7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMCUpO1xufVxuLmV4YW1wbGUuc3RpY2t5LWNsYXNzZXMgLmhlYWRlci1zdGlja3k6bm90KC5uZ3gtc3RpY2t5LS1kaXNhYmxlZCkge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5leGFtcGxlLnN0aWNreS1jbGFzc2VzIC5oZWFkZXItc3RpY2t5Om5vdCgubmd4LXN0aWNreS0tbm9ybWFsKSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwJSk7XG59Il19 */\"","import { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  NGX_STICKY_WINDOW,\n  NgxStickyDirection,\n  NgxStickyPosition,\n  fromMediaQuery,\n} from '../../projects/ngx-sticky/src/public-api';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.scss' ],\n})\nexport class AppComponent implements OnDestroy, OnInit  {\n  apiBoundaryStickyDisabled = false;\n  apiBoundaryStickyOrbit = false;\n  apiBoundaryStickyDirection: NgxStickyDirection = 'down';\n  apiBoundaryStickyPosition: NgxStickyPosition = 'top';\n\n  apiContainerStickyDisabled = false;\n  apiContainerStickyOrbit = false;\n  apiContainerStickyDirection: NgxStickyDirection = 'down';\n  apiContainerStickyOffsetTop = 0;\n  apiContainerStickyOffsetBottom = 0;\n  apiContainerStickyPosition: NgxStickyPosition = 'top';\n\n  apiInViewportStickyDisabled = false;\n  apiInViewportStickyOrbit = false;\n  apiInViewportStickyDirection: NgxStickyDirection = 'down';\n  apiInViewportStickyPosition: NgxStickyPosition = 'top';\n\n  _isSmallScreen: boolean;\n  _smallBreakpointSubscription: Subscription;\n\n  constructor(\n    readonly changeDetectorRef: ChangeDetectorRef,\n    @Inject(NGX_STICKY_WINDOW)\n    readonly win: Window,\n  ) { }\n\n  ngOnInit(): void {\n    const smallBreakpoint$ = fromMediaQuery(this.win, '(min-width: 640px)');\n\n    this._smallBreakpointSubscription = smallBreakpoint$.subscribe(mqlEvent => {\n      this._isSmallScreen = !mqlEvent.matches;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._smallBreakpointSubscription) {\n      this._smallBreakpointSubscription.unsubscribe();\n      this._smallBreakpointSubscription = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgxStickyModule } from '../../projects/ngx-sticky/src/public-api';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxStickyModule,\n  ],\n  providers: [],\n  bootstrap: [ AppComponent ],\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}