{"version":3,"file":"polyfills.a1418b0b76205139.js","mappings":"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ACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGS,GA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,aACA,gCACA,mBACA,OACA,kBAgBJ,YAA0B7X,EAAQiK,EAAcsO,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiBrZ,OACtC,OAAO+K,EAEX,IAAMuO,EAAMD,EAAiBE,OAAO,YAAE,OAAIC,EAAG1Y,SAAWA,IACxD,IAAKwY,GAAsB,IAAfA,EAAItZ,OACZ,OAAO+K,EAEX,IAAM0O,EAAyBH,EAAI,GAAGD,iBACtC,OAAOtO,EAAawO,OAAO,YAAE,OAA2C,IAAvCE,EAAuBjN,QAAQkN,KAEpE,WAAiC5Y,EAAQiK,EAAcsO,EAAkBzU,GAGhE9D,GAILmF,GAAkBnF,EADSgG,GAAiBhG,EAAQiK,EAAcsO,GACpBzU,GAoElD/I,KAAK4Q,aAAa,OAAQ,SAACtR,EAAQU,EAAM6Q,GACrCA,EAAIzG,kBAAoBA,GACxByG,EAAIxG,YAAcA,GAClBwG,EAAIvG,cAAgBA,GACpBuG,EAAIrG,eAAiBA,GAOrB,IAAMsT,EAA6B9d,EAAKD,WAAW,uBAC7Cge,EAA0B/d,EAAKD,WAAW,oBAC5CT,EAAOye,KACPze,EAAOwe,GAA8Bxe,EAAOye,IAE5Cze,EAAOwe,KACP9d,EAAK8d,GAA8B9d,EAAK+d,GACpCze,EAAOwe,IAEfjN,EAAIpG,oBAAsBA,GAC1BoG,EAAI1G,iBAAmBA,GACvB0G,EAAInG,WAAaA,GACjBmG,EAAIjG,qBAAuBA,GAC3BiG,EAAIxR,+BAAiCA,EACrCwR,EAAIhG,aAAeA,GACnBgG,EAAI/F,WAAaA,GACjB+F,EAAI9F,WAAaA,GACjB8F,EAAI7F,oBAAsBA,GAC1B6F,EAAI5F,iBAAmBA,GACvB4F,EAAI3F,sBAAwBA,GAC5B2F,EAAI1F,kBAAoBrC,OAAOyC,eAC/BsF,EAAIzF,eAAiBA,GACrByF,EAAIlG,iBAAmB,iBAAO,CAC1BuM,iBACA5J,qBAAsB2J,GACtBsG,cACApQ,aACAE,SACAJ,UACAhB,YACAC,aACAC,sBACAN,0BACAC,iCAWR,IAAMkS,GAAa1R,EAAW,YAC9B,YAAoBjB,EAAQ4S,EAASC,EAAYC,GAC7C,IAAInO,EAAY,KACZoO,EAAc,KAElBF,GAAcC,EACd,IAAME,EAAkB,GACxB,WAAsBtc,GAClB,IAAMc,EAAOd,EAAKc,KAClBA,SAAKmG,KAAK,GAAK,WACX,OAAOjH,EAAKH,OAAO6F,MAAMnH,KAAMkB,YAEnCqB,EAAK+F,SAAWoH,EAAUvI,MAAM4D,EAAQxI,EAAKmG,MACtCjH,EAEX,WAAmBA,GACf,OAAOqc,EAAY5V,KAAK6C,EAAQtJ,EAAKc,KAAK+F,UAE9CoH,EACI3F,GAAYgB,EAfhB4S,GAAWE,EAesB,SAACpZ,GAAD,OAAc,SAAUuD,EAAMU,GACvD,GAAuB,mBAAZA,EAAK,GAAmB,CAC/B,IAAMZ,EAAU,CACZtF,WAA2B,aAAfqb,EACZG,MAAuB,YAAfH,GAA2C,aAAfA,EAA6BnV,EAAK,IAAM,OACxEhG,EACJgG,KAAMA,GAEJ7H,EAAW6H,EAAK,GACtBA,EAAK,GAAK,WACN,IACI,OAAO7H,EAASsG,MAAMnH,KAAMkB,WAC/B,QASS4G,EAAQtF,aACsB,iBAArBsF,EAAQQ,gBAGRyV,EAAgBjW,EAAQQ,UAE1BR,EAAQQ,WAGbR,EAAQQ,SAASoV,IAAc,SAK/C,IAAMjc,EAAOoO,GAAiC8N,EAASjV,EAAK,GAAIZ,EAAS3E,EAAc8a,GACvF,IAAKxc,EACD,OAAOA,EAGX,IAAMyc,EAASzc,EAAKc,KAAK+F,SAkBzB,MAjBsB,iBAAX4V,EAGPH,EAAgBG,GAAUzc,EAErByc,IAGLA,EAAOR,IAAcjc,GAIrByc,GAAUA,EAAOC,KAAOD,EAAOE,OAA+B,mBAAfF,EAAOC,KAC9B,mBAAjBD,EAAOE,QACd3c,EAAK0c,IAAMD,EAAOC,IAAIE,KAAKH,GAC3Bzc,EAAK2c,MAAQF,EAAOE,MAAMC,KAAKH,IAEb,iBAAXA,GAAuBA,EACvBA,EAEJzc,EAIP,OAAOgD,EAAS0C,MAAM4D,EAAQrC,MAG1CoV,EACI/T,GAAYgB,EAAQ6S,EAAY,SAACnZ,GAAD,OAAc,SAAUuD,EAAMU,GAC1D,IACIjH,EADE6c,EAAK5V,EAAK,GAEE,iBAAP4V,EAEP7c,EAAOsc,EAAgBO,IAIvB7c,EAAO6c,GAAMA,EAAGZ,OAGZjc,EAAO6c,GAGfC,GAAiC,iBAAd9c,EAAKI,KACD,iBAAfJ,EAAKE,QACJF,EAAKgB,UAAYhB,EAAKc,KAAKC,YAAgC,IAAlBf,EAAKW,YAC7B,iBAAPkc,SACAP,EAAgBO,GAElBA,IACLA,EAAGZ,IAAc,MAGrBjc,EAAKjB,KAAKkD,WAAWjC,IAKzBgD,EAAS0C,MAAM4D,EAAQrC,MA+DvChJ,KAAK4Q,aAAa,SAAU,SAACtR,GACzB,IAAMwf,EAAcxf,EAAOU,KAAKD,WAAW,gBACvC+e,GACAA,MAGR9e,KAAK4Q,aAAa,iBAAkB,SAACtR,EAAQU,EAAM6Q,GAC/CA,EAAIxG,YAAY/K,EAAQ,iBAAkB,YACtC,OAAO,SAAUgJ,EAAMU,GACnBhJ,EAAKgB,QAAQ6G,kBAAkB,iBAAkBmB,EAAK,SAIlEhJ,KAAK4Q,aAAa,SAAU,SAACtR,GACzB,IAAMwN,EAAM,MACNiS,EAAQ,QACdC,GAAW1f,EAAQwN,EAAKiS,EAAO,WAC/BC,GAAW1f,EAAQwN,EAAKiS,EAAO,YAC/BC,GAAW1f,EAAQwN,EAAKiS,EAAO,eAEnC/e,KAAK4Q,aAAa,wBAAyB,SAACtR,GACxC0f,GAAW1f,EAAQ,UAAW,SAAU,kBACxC0f,GAAW1f,EAAQ,aAAc,YAAa,kBAC9C0f,GAAW1f,EAAQ,gBAAiB,eAAgB,oBAExDU,KAAK4Q,aAAa,WAAY,SAACtR,EAAQU,GAEnC,QADMif,EAAkB,CAAC,QAAS,SAAU,WACnC/a,EAAI,EAAGA,EAAI+a,EAAgB9a,OAAQD,IAExCmG,GAAY/K,EADC2f,EAAgB/a,GACH,SAACa,EAAUgF,EAAQvK,GACzC,OAAO,SAAUkW,EAAG1M,GAChB,OAAOhJ,EAAKgB,QAAQgT,IAAIjP,EAAUzF,EAAQ0J,EAAMxJ,QAKhEQ,KAAK4Q,aAAa,cAAe,SAACtR,EAAQU,EAAM6Q,IA/ChD,YAAoBvR,EAAQuR,GACxBA,EAAIpG,oBAAoBnL,EAAQuR,IA+ChCqO,CAAW5f,EAAQuR,GAxEvB,YAA0BpE,EAASoE,GAC/B,IAAI7Q,KAAK6Q,EAAI9G,OAAO,qBAMpB,SAFAwF,EAAsFsB,EAAIlG,mBAAlF4S,EAARhO,EAAQgO,WAAYjQ,EAApBiC,EAAoBjC,qBAAsBrB,EAA1CsD,EAA0CtD,SAAUC,EAApDqD,EAAoDrD,UAAWC,EAA/DoD,EAA+DpD,mBAEtDjI,EAAI,EAAGA,EAAIqZ,EAAWpZ,OAAQD,IAAK,CACxC,IAAMwK,EAAY6O,EAAWrZ,GAGvB6F,EAASoC,GAFQuC,EAAYxC,GAG7BuL,EAAgBtL,GAFAuC,EAAYzC,GAGlCqB,EAAqBoB,GAAa,GAClCpB,EAAqBoB,GAAWxC,GAAanC,EAC7CuD,EAAqBoB,GAAWzC,GAAYwL,EAEhD,IAAM0H,EAAe1S,EAAQ2S,YAC7B,GAAKD,GAAiBA,EAAapW,UAGnC8H,EAAI1G,iBAAiBsC,EAAS,CAAC0S,GAAgBA,EAAapW,aAoD5DsW,CAAiB/f,EAAQuR,GAEzB,IAAMyO,EAA4BhgB,EAAOggB,0BACrCA,GAA6BA,EAA0BvW,WACvD8H,EAAI1G,iBAAiB7K,EAAQ,CAACggB,EAA0BvW,cAGhE/I,KAAK4Q,aAAa,mBAAoB,SAACtR,EAAQU,EAAM6Q,GACjD9F,GAAW,oBACXA,GAAW,4BAEf/K,KAAK4Q,aAAa,uBAAwB,SAACtR,EAAQU,EAAM6Q,GACrD9F,GAAW,0BAEf/K,KAAK4Q,aAAa,aAAc,SAACtR,EAAQU,EAAM6Q,GAC3C9F,GAAW,gBAEf/K,KAAK4Q,aAAa,cAAe,SAACtR,EAAQU,EAAM6Q,IArWhD,YAAiCA,EAAKpE,GAClC,KAAIQ,IAAWI,MAGXrN,KAAK6Q,EAAI9G,OAAO,gBAIpB,KAAMwV,SAA2BC,UAAc,IACzChC,EAAmB/Q,EAAQgT,4BAEjC,GAAItS,GAAW,CACX,IAAMX,EAAiBnB,OACjBqU,EAt4Cd,cACI,IACI,IAAMlP,EAAKhE,GAAeiE,UAAUC,UACpC,IAA4B,IAAxBF,EAAGG,QAAQ,WAA8C,IAA3BH,EAAGG,QAAQ,YACzC,OAAO,EAEd,OAGD,OAAO,EA63C2BgP,GAAS,CAAC,CAAE1a,OAAQuH,EAAgBgR,iBAAkB,CAAC,WAAc,GAGnGoC,EAAwBpT,EAAgB+Q,GAAWlB,OAAO,CAAC,iBAAkBmB,GAAmBA,EAAiBnB,OAAOqD,GAA2ClU,GAAqBgB,IACxLoT,EAAwBC,SAAS9W,UAAWwU,GAAYC,UAC7ChR,EAAesT,WAAkB,KACxCF,EAAwBpT,EAAesT,WAAc/W,UAAWwU,GAAYC,GAEhFoC,EAAwBG,QAAQhX,UAAWwU,GAAYC,GACvDoC,EAAwBxS,YAAYrE,UAAWwU,GAAYC,GAC3DoC,EAAwBI,iBAAiBjX,UAAWgU,GAAwBS,GAC5EoC,EAAwBK,oBAAoBlX,UAAW+T,GAAiBT,OAAOY,IAAqBO,GACpGoC,EAAwBM,gBAAgBnX,UAAW+T,GAAiBT,OAAOY,IAAqBO,GAChGoC,EAAwBO,iBAAiBpX,UAAWiU,GAAiBQ,GACrEoC,EAAwBQ,kBAAkBrX,UAAWiU,GAAiBQ,GACtE,IAAM6C,EAAqB7T,EAAe6T,mBACtCA,GACAT,EAAwBS,EAAmBtX,UAAWmU,GAAmBM,GAE7E,IAAM8C,EAAS9T,EAAe8T,OAC1BA,GACAV,EAAwBU,EAAOvX,UAAWuU,GAAkBE,GAGpE,IAAM+C,EAAiB9T,EAAQ8T,eAC3BA,GAEAX,EAAwBW,EAAexX,UAAWoU,GAA0BK,GAEhF,IAAM8B,EAA4B7S,EAAQ6S,0BACtCA,GACAM,EAAwBN,GAA6BA,EAA0BvW,UAAWoU,GAA0BK,UAE7GgD,SAAa,MACpBZ,EAAwBY,SAASzX,UAAWqU,GAAoBI,GAChEoC,EAAwBa,WAAW1X,UAAWqU,GAAoBI,GAClEoC,EAAwBc,iBAAiB3X,UAAWqU,GAAoBI,GACxEoC,EAAwBe,YAAY5X,UAAWqU,GAAoBI,GACnEoC,EAAwBgB,eAAe7X,UAAWqU,GAAoBI,GACtEoC,EAAwBiB,UAAU9X,UAAWqU,GAAoBI,IAEjE+B,GACAK,EAAwBJ,UAAUzW,UAAWsU,GAAqBG,IA+StEsD,CAAwBjQ,EAAKvR,KAEjCU,KAAK4Q,aAAa,iBAAkB,SAACtR,EAAQU,EAAM6Q,IA7GnD,YAA6BpE,EAASoE,GAClC,MAA6BA,EAAIlG,oBAAjC4E,EAAQpC,WAARoC,EAAmBlC,QACYZ,EAAQsU,gBAAuB,mBAAoBtU,GAIlFoE,EAAIzF,eAAeyF,EAAKpE,EAAQsU,eAAgB,iBAAkB,SADhD,CAAC,oBAAqB,uBAAwB,kBAAmB,6BAyGnFC,CAAoB1hB,EAAQuR,KAEhC7Q,KAAK4Q,aAAa,MAAO,SAACtR,EAAQU,IAS9B,WAAkBqL,GACd,IAAMkV,EAAiBlV,EAAOkV,eAC9B,GAAKA,EAAL,CAIA,IAAMU,EAA0BV,EAAexX,UAI3CmY,EAAiBD,EAAwBlV,IACzCoV,EAAoBF,EAAwBjV,IAChD,IAAKkV,EAAgB,CACjB,IAAM5B,EAA4BjU,EAAOiU,0BACzC,GAAIA,EAA2B,CAC3B,IAAM8B,GAAqC9B,EAA0BvW,UACrEmY,EAAiBE,GAAmCrV,IACpDoV,EAAoBC,GAAmCpV,KAG/D,IAAMqV,EAAqB,mBACrBC,EAAY,YAwEZC,EAAalX,GAAY4W,EAAyB,OAAQ,kBAAM,SAAU3Y,EAAMU,GAClFV,SAAKkZ,GAAuB,GAAXxY,EAAK,GACtBV,EAAKmZ,GAAWzY,EAAK,GACduY,EAAW9Z,MAAMa,EAAMU,MAG5B0Y,GAAoBpV,EAAW,qBAC/BqV,EAAsBrV,EAAW,uBACjCsV,GAAavX,GAAY4W,EAAyB,OAAQ,kBAAM,SAAU3Y,EAAMU,GAOlF,IAN0C,IAAtChJ,EAAKgB,QAAQ2gB,IAMbrZ,EAAKkZ,GAEL,OAAOI,GAAWna,MAAMa,EAAMU,GAG9B,IAAMZ,EAAU,CAAEnD,OAAQqD,EAAMuZ,IAAKvZ,EAAKmZ,GAAU3e,YAAY,EAAOkG,KAAMA,EAAM8Y,SAAS,GACtF/f,EAAOoO,GAhBS,sBAgB+C4R,EAAqB3Z,EAAS3E,EAAc8a,GAC7GjW,IAA6C,IAArCA,EAAK0Z,KAAyC5Z,EAAQ0Z,SAC9D/f,EAAKE,QAAUqf,GAIfvf,EAAKH,YAIXqgB,GAAc5X,GAAY4W,EAAyB,QAAS,kBAAM,SAAU3Y,EAAMU,GACpF,IAAMjH,EAtHV,WAAyBkD,GACrB,OAAOA,EAAOid,GAqHDC,CAAgB7Z,GAC7B,GAAIvG,GAA4B,iBAAbA,EAAKI,KAAkB,CAKtC,GAAqB,MAAjBJ,EAAKgB,UAAqBhB,EAAKc,MAAQd,EAAKc,KAAKif,QACjD,OAEJ/f,EAAKjB,KAAKkD,WAAWjC,QACxB,IAC4C,IAApC/B,EAAKgB,QAAQ0gB,IAElB,OAAOO,GAAYxa,MAAMa,EAAMU,MApHvC,WAAsBjH,GAClB,IAAMc,EAAOd,EAAKc,KACZoC,EAASpC,EAAKoC,OACpBA,EAAOmd,IAAiB,EACxBnd,EAAO+c,IAA8B,EAErC,IAAMrU,EAAW1I,EAAOod,GACnBnB,IACDA,EAAiBjc,EAAO8G,IACxBoV,EAAoBlc,EAAO+G,KAE3B2B,GACAwT,EAAkB3Y,KAAKvD,EAAQoc,EAAoB1T,GAEvD,IAAM2U,GAAcrd,EAAOod,GAAgB,WACvC,GAAIpd,EAAOsd,aAAetd,EAAOud,KAG7B,IAAK3f,EAAKif,SAAW7c,EAAOmd,IAAkBrgB,EAAKE,QAAUqf,EAAW,CAQpE,IAAMmB,EAAYxd,EAAOjF,EAAKD,WAAW,cACzC,GAAsB,IAAlBkF,EAAO8P,QAAgB0N,GAAaA,EAAUte,OAAS,EAAG,CAC1D,IAAMue,EAAY3gB,EAAKH,OACvBG,EAAKH,OAAS,WAIV,QADM6gB,EAAYxd,EAAOjF,EAAKD,WAAW,cAChCmE,EAAI,EAAGA,EAAIue,EAAUte,OAAQD,IAC9Bue,EAAUve,KAAOnC,GACjB0gB,EAAUlP,OAAOrP,EAAG,IAGvBrB,EAAKif,SAAW/f,EAAKE,QAAUqf,GAChCoB,EAAUla,KAAKzG,IAGvB0gB,EAAU9a,KAAK5F,QAGfA,EAAKH,cAGHiB,EAAKif,UAAqC,IAA1B7c,EAAOmd,KAE7Bnd,EAAO+c,IAA8B,IAMjD,OAFAd,EAAe1Y,KAAKvD,EAAQoc,EAAoBiB,IAC7Brd,EAAOid,KAEtBjd,EAAOid,GAAYngB,GAEvB6f,GAAWna,MAAMxC,EAAQpC,EAAKmG,MAC9B/D,EAAOmd,IAAiB,EACjBrgB,EAEX,cACA,WAAmBA,GACf,IAAMc,EAAOd,EAAKc,KAGlBA,SAAKif,SAAU,EACRG,GAAYxa,MAAM5E,EAAKoC,OAAQpC,EAAKmG,OAlGnD2Z,CAASrjB,GACT,IAAM4iB,EAAW5V,EAAW,WACtBkV,EAAWlV,EAAW,WACtB+V,EAAe/V,EAAW,eAC1B8V,EAAgB9V,EAAW,gBAC3BmV,EAAUnV,EAAW,UACrB0V,EAA6B1V,EAAW,6BAmJlDtM,KAAK4Q,aAAa,cAAe,SAACtR,GAE1BA,EAAOmR,WAAgBnR,EAAOmR,UAAamS,aA3rEnD,YAAwB7Z,EAAW8Z,GAE/B,QADMzhB,EAAS2H,EAAUmK,YAAY1T,KADGsjB,aAGpC,IAOwB/d,EACVqL,EARR5Q,EAAOqjB,EAAQ3e,GACfa,EAAWgE,EAAUvJ,GAC3B,GAAIuF,EAAU,CAEV,IAAK6K,GADiBvQ,EAA+B0J,EAAWvJ,IACxB,SAGxCuJ,EAAUvJ,IACA4Q,EAAU,WACZ,OAAOrL,EAAS0C,MAAMnH,KAAMgK,GAAc9I,UAAWJ,EAAS,IAAM5B,KAExE0L,GAAsBkF,EAJNrL,EAMjBA,GADQqL,KAbVlM,EAAI,EAAGA,EAAI2e,EAAQ1e,OAAQD,IAApC4e,IA0rEIC,CAAezjB,EAAOmR,UAAamS,YAAa,CAAC,qBAAsB,oBAG/E5iB,KAAK4Q,aAAa,wBAAyB,SAACtR,EAAQU,GAEhD,WAAqC+b,GACjC,OAAO,SAAU/K,GACMwK,GAAelc,EAAQyc,GAC/Ba,QAAQ,YAGf,IAAMoG,EAAwB1jB,EAAO0jB,sBACrC,GAAIA,EAAuB,CACvB,IAAMC,EAAM,IAAID,EAAsBjH,EAAS,CAAE5J,QAASnB,EAAEmB,QAAS8C,OAAQjE,EAAEC,YAC/E7O,EAAUR,OAAOqhB,OAK7B3jB,EAAO0jB,wBACPhjB,EAAKsM,EAAW,qCACZ4W,EAA4B,sBAChCljB,EAAKsM,EAAW,4BACZ4W,EAA4B,iCC/3FxCC,UAVA,mBACA,qCAEA,4BAAyC9iB,KAASA,KAClD+iB,aAGA,UAGoCD,sBAAyB,EAASA,kBAAyBA,oBCJ/FA,UANA,kBACA,sBACA,0DAIkCA,sBAAyB,EAASA,kBAAyBA,oBCN7F,kBACA,YAAkBC,YAAkBA,KACpC,aACAC,gCACAA,mBACA,+BACAva,oCAaAqa,UATA,oBACA,8BACAC,WACAta,qCACA8D,cAEA0W,GAG+BH,sBAAyB,EAASA,kBAAyBA,4BCnB1F,MAAiCI,GAAQ,MA2DzCJ,UAzDA,kBACA,6DAEA,OACA,iEACAK,SACA,SAEAC,gBAEA,OACA/N,KACAoN,aACA,qBACAY,SAEA,CACAA,QACA5b,gBAGAkJ,eACA,UAEA2S,MAIA,6JAGA,IAEAC,GAFAC,MACAC,MAEA,OACApO,aACA8N,aAEAV,aACA,gBACA,kBACAiB,IAEA/S,eACA8S,MACAF,OAEAD,aACA,KACAE,+BACA,QACA,mBAM6CV,sBAAyB,EAASA,kBAAyBA,4BC3DxG,MAAuBI,GAAQ,MAW/BJ,UATA,kBACA,KACA,sCACA,oDAEA,GADA,oDACA,0CACA,wFAG8CA,sBAAyB,EAASA,kBAAyBA","names":["ObjectGetOwnPropertyDescriptor","global","performance","name","mark","label","measure","symbolPrefix","__Zone_symbol_prefix","checkDuplicate","__symbol__","Zone","Error","nativeMicroTaskQueuePromise","parent","zoneSpec","ee","this","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","key","zone","getZoneWith","current","hasOwnProperty","fork","callback","source","_callback","intercept","runGuarded","arguments","applyThis","applyArgs","_currentZoneFrame","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","_currentTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","err","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","i","length","Promise","patches","ZoneAwarePromise","fn","ignoreDuplicate","perfName","_api","performanceMeasure","p","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","push","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","toState","fromState1","fromState2","handleId","toString","Object","prototype","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","getOwnPropertyDescriptor","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","HTMLElement","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","result","listener","errorEvent","message","filename","lineno","colno","preventDefault","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","REMOVE_ATTRIBUTE","removeAttribute","patchProperty","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","proto","delegateName","isPropertyWritable","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","scheduleMacroTaskWithCurrentZone","patched","original","isDetectedIEOrEdge","ieOrEdge","ua","navigator","userAgent","indexOf","__load_patch","api","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","stack","c","uncaughtPromiseError","shift","throwOriginal","handler","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handleUnhandledRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","REJECTED","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","once","TypeError","clearRejectedNoCatch","makeResolver","trace","currentTask","creationTrace","scheduleResolveOrReject","constructor","JSON","stringify","readableObjectToString","REJECTION_HANDLED_HANDLER","splice","chainPromise","onFulfilled","onRejected","promiseState","forwardResolution","forwardRejection","parentPromiseValue","isFinallyPromise","run","executor","C","Symbol","species","onFinally","values","res","rej","$","isThenable","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","se","unresolvedCount","valueIndex","resolvedValues","ie","R","curValueIndex","thenErr","s","toStringTag","race","all","NativePromise","symbolThenPatched","Ctor","originalThen","resultPromise","ctor","zoneify","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","nativePrependEventListener","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","passive","capture","assign","prepend","isExisting","symbolEventName","symbolEventNames","existingTasks","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","buildEventListenerOptions","prepareEventNames","constructorName","targetSource","scheduleEventTask","N","unshift","PREPEND_EVENT_LISTENER","d","existingTask","onPropertySymbol","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","keys","match","exec","evtName","results","patchEventTargetMethods","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","taskSymbol","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","delay","clearTask","handle","ref","unref","bind","id","M","legacyPatch","clear","patchTimer","blockingMethods","patchEvent","EVENT_TARGET","EventTarget","eventTargetPatch","XMLHttpRequestEventTarget","supportsWebSocket","WebSocket","__Zone_ignore_on_properties","ignoreErrorProperties","isIE","patchFilteredProperties","Document","SVGElement","Element","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","propertyDescriptorPatch","customElements","patchCustomElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","sendNative","url","aborted","placeholderCallback","XHR_ERROR_BEFORE_SCHEDULED","abortNative","XHR_TASK","findPendingTask","XHR_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","patchXHR","geolocation","fnNames","n","patchPrototype","PromiseRejectionEvent","evt","findPromiseRejectionHandler","G","L","fe","Y","re","K","De","done","f","Ne","Fe","Ve","me"],"sourceRoot":"webpack:///","sources":["./node_modules/zone.js/fesm2015/zone.js","./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v12.0.0-next.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst Zone$1 = (function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            if (!nativeMicroTaskQueuePromise) {\n                if (global[symbolPromise]) {\n                    nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                }\n            }\n            if (nativeMicroTaskQueuePromise) {\n                let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                if (!nativeThen) {\n                    // native Promise is not patchable, we need to use `then` directly\n                    // issue 1078\n                    nativeThen = nativeMicroTaskQueuePromise['then'];\n                }\n                nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n            }\n            else {\n                global[symbolSetTimeout](drainMicroTaskQueue, 0);\n            }\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nconst NULL_ON_PROP_VALUE = [null];\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signiture\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // substr(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.substr(2);\n    let eventNameSymbol = zoneSymbolEventNames[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        let previousValue = target[eventNameSymbol];\n        if (previousValue) {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        if (originalDescSet) {\n            originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n        }\n        if (typeof newValue === 'function') {\n            target[eventNameSymbol] = newValue;\n            target.addEventListener(eventName, wrapFn, false);\n        }\n        else {\n            target[eventNameSymbol] = null;\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet && originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.substr(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    }\n                });\n            }\n        }(prop));\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) {\n    }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) {\n    }\n    return ieOrEdge;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    const ObjectDefineProperty = Object.defineProperty;\n    function readableObjectToString(obj) {\n        if (obj && obj.toString === Object.prototype.toString) {\n            const className = obj.constructor && obj.constructor.name;\n            return (className ? className : '') + ': ' + JSON.stringify(obj);\n        }\n        return obj ? obj.toString() : Object.prototype.toString.call(obj);\n    }\n    const __symbol__ = api.symbol;\n    const _uncaughtPromiseErrors = [];\n    const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    const creationTrace = '__creationTrace__';\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => {\n        while (_uncaughtPromiseErrors.length) {\n            const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n            try {\n                uncaughtPromiseError.zone.runGuarded(() => {\n                    if (uncaughtPromiseError.throwOriginal) {\n                        throw uncaughtPromiseError.rejection;\n                    }\n                    throw uncaughtPromiseError;\n                });\n            }\n            catch (error) {\n                handleUnhandledRejection(error);\n            }\n        }\n    };\n    const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n    function handleUnhandledRejection(e) {\n        api.onUnhandledError(e);\n        try {\n            const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n            if (typeof handler === 'function') {\n                handler.call(this, e);\n            }\n        }\n        catch (err) {\n        }\n    }\n    function isThenable(value) {\n        return value && value.then;\n    }\n    function forwardResolution(value) {\n        return value;\n    }\n    function forwardRejection(rejection) {\n        return ZoneAwarePromise.reject(rejection);\n    }\n    const symbolState = __symbol__('state');\n    const symbolValue = __symbol__('value');\n    const symbolFinally = __symbol__('finally');\n    const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n    const symbolParentPromiseState = __symbol__('parentPromiseState');\n    const source = 'Promise.then';\n    const UNRESOLVED = null;\n    const RESOLVED = true;\n    const REJECTED = false;\n    const REJECTED_NO_CATCH = 0;\n    function makeResolver(promise, state) {\n        return (v) => {\n            try {\n                resolvePromise(promise, state, v);\n            }\n            catch (err) {\n                resolvePromise(promise, false, err);\n            }\n            // Do not return value or you will break the Promise spec.\n        };\n    }\n    const once = function () {\n        let wasCalled = false;\n        return function wrapper(wrappedFunction) {\n            return function () {\n                if (wasCalled) {\n                    return;\n                }\n                wasCalled = true;\n                wrappedFunction.apply(null, arguments);\n            };\n        };\n    };\n    const TYPE_ERROR = 'Promise resolved with itself';\n    const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n    // Promise Resolution\n    function resolvePromise(promise, state, value) {\n        const onceWrapper = once();\n        if (promise === value) {\n            throw new TypeError(TYPE_ERROR);\n        }\n        if (promise[symbolState] === UNRESOLVED) {\n            // should only get value.then once based on promise spec.\n            let then = null;\n            try {\n                if (typeof value === 'object' || typeof value === 'function') {\n                    then = value && value.then;\n                }\n            }\n            catch (err) {\n                onceWrapper(() => {\n                    resolvePromise(promise, false, err);\n                })();\n                return promise;\n            }\n            // if (value instanceof ZoneAwarePromise) {\n            if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                value[symbolState] !== UNRESOLVED) {\n                clearRejectedNoCatch(value);\n                resolvePromise(promise, value[symbolState], value[symbolValue]);\n            }\n            else if (state !== REJECTED && typeof then === 'function') {\n                try {\n                    then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                }\n            }\n            else {\n                promise[symbolState] = state;\n                const queue = promise[symbolValue];\n                promise[symbolValue] = value;\n                if (promise[symbolFinally] === symbolFinally) {\n                    // the promise is generated by Promise.prototype.finally\n                    if (state === RESOLVED) {\n                        // the state is resolved, should ignore the value\n                        // and use parent promise value\n                        promise[symbolState] = promise[symbolParentPromiseState];\n                        promise[symbolValue] = promise[symbolParentPromiseValue];\n                    }\n                }\n                // record task information in value when error occurs, so we can\n                // do some additional work such as render longStackTrace\n                if (state === REJECTED && value instanceof Error) {\n                    // check if longStackTraceZone is here\n                    const trace = Zone.currentTask && Zone.currentTask.data &&\n                        Zone.currentTask.data[creationTrace];\n                    if (trace) {\n                        // only keep the long stack trace into error when in longStackTraceZone\n                        ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                    }\n                }\n                for (let i = 0; i < queue.length;) {\n                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                }\n                if (queue.length == 0 && state == REJECTED) {\n                    promise[symbolState] = REJECTED_NO_CATCH;\n                    let uncaughtPromiseError = value;\n                    try {\n                        // Here we throws a new Error to print more readable error log\n                        // and if the value is not an error, zone.js builds an `Error`\n                        // Object here to attach the stack information.\n                        throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                            (value && value.stack ? '\\n' + value.stack : ''));\n                    }\n                    catch (err) {\n                        uncaughtPromiseError = err;\n                    }\n                    if (isDisableWrappingUncaughtPromiseRejection) {\n                        // If disable wrapping uncaught promise reject\n                        // use the value instead of wrapping it.\n                        uncaughtPromiseError.throwOriginal = true;\n                    }\n                    uncaughtPromiseError.rejection = value;\n                    uncaughtPromiseError.promise = promise;\n                    uncaughtPromiseError.zone = Zone.current;\n                    uncaughtPromiseError.task = Zone.currentTask;\n                    _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                    api.scheduleMicroTask(); // to make sure that it is running\n                }\n            }\n        }\n        // Resolving an already resolved promise is a noop.\n        return promise;\n    }\n    const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n    function clearRejectedNoCatch(promise) {\n        if (promise[symbolState] === REJECTED_NO_CATCH) {\n            // if the promise is rejected no catch status\n            // and queue.length > 0, means there is a error handler\n            // here to handle the rejected promise, we should trigger\n            // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n            // eventHandler\n            try {\n                const handler = Zone[REJECTION_HANDLED_HANDLER];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                }\n            }\n            catch (err) {\n            }\n            promise[symbolState] = REJECTED;\n            for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                if (promise === _uncaughtPromiseErrors[i].promise) {\n                    _uncaughtPromiseErrors.splice(i, 1);\n                }\n            }\n        }\n    }\n    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n        clearRejectedNoCatch(promise);\n        const promiseState = promise[symbolState];\n        const delegate = promiseState ?\n            (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n            (typeof onRejected === 'function') ? onRejected : forwardRejection;\n        zone.scheduleMicroTask(source, () => {\n            try {\n                const parentPromiseValue = promise[symbolValue];\n                const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                if (isFinallyPromise) {\n                    // if the promise is generated from finally call, keep parent promise's state and value\n                    chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                    chainPromise[symbolParentPromiseState] = promiseState;\n                }\n                // should not pass value to finally callback\n                const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                    [] :\n                    [parentPromiseValue]);\n                resolvePromise(chainPromise, true, value);\n            }\n            catch (error) {\n                // if error occurs, should always return this error\n                resolvePromise(chainPromise, false, error);\n            }\n        }, chainPromise);\n    }\n    const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n    const noop = function () { };\n    class ZoneAwarePromise {\n        static toString() {\n            return ZONE_AWARE_PROMISE_TO_STRING;\n        }\n        static resolve(value) {\n            return resolvePromise(new this(null), RESOLVED, value);\n        }\n        static reject(error) {\n            return resolvePromise(new this(null), REJECTED, error);\n        }\n        static race(values) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            function onResolve(value) {\n                resolve(value);\n            }\n            function onReject(error) {\n                reject(error);\n            }\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                value.then(onResolve, onReject);\n            }\n            return promise;\n        }\n        static all(values) {\n            return ZoneAwarePromise.allWithCallback(values);\n        }\n        static allSettled(values) {\n            const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n            return P.allWithCallback(values, {\n                thenCallback: (value) => ({ status: 'fulfilled', value }),\n                errorCallback: (err) => ({ status: 'rejected', reason: err })\n            });\n        }\n        static allWithCallback(values, callback) {\n            let resolve;\n            let reject;\n            let promise = new this((res, rej) => {\n                resolve = res;\n                reject = rej;\n            });\n            // Start at 2 to prevent prematurely resolving if .then is called immediately.\n            let unresolvedCount = 2;\n            let valueIndex = 0;\n            const resolvedValues = [];\n            for (let value of values) {\n                if (!isThenable(value)) {\n                    value = this.resolve(value);\n                }\n                const curValueIndex = valueIndex;\n                try {\n                    value.then((value) => {\n                        resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                        unresolvedCount--;\n                        if (unresolvedCount === 0) {\n                            resolve(resolvedValues);\n                        }\n                    }, (err) => {\n                        if (!callback) {\n                            reject(err);\n                        }\n                        else {\n                            resolvedValues[curValueIndex] = callback.errorCallback(err);\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }\n                    });\n                }\n                catch (thenErr) {\n                    reject(thenErr);\n                }\n                unresolvedCount++;\n                valueIndex++;\n            }\n            // Make the unresolvedCount zero-based again.\n            unresolvedCount -= 2;\n            if (unresolvedCount === 0) {\n                resolve(resolvedValues);\n            }\n            return promise;\n        }\n        constructor(executor) {\n            const promise = this;\n            if (!(promise instanceof ZoneAwarePromise)) {\n                throw new Error('Must be an instanceof Promise.');\n            }\n            promise[symbolState] = UNRESOLVED;\n            promise[symbolValue] = []; // queue;\n            try {\n                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n            }\n            catch (error) {\n                resolvePromise(promise, false, error);\n            }\n        }\n        get [Symbol.toStringTag]() {\n            return 'Promise';\n        }\n        get [Symbol.species]() {\n            return ZoneAwarePromise;\n        }\n        then(onFulfilled, onRejected) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = this.constructor || ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n            }\n            return chainPromise;\n        }\n        catch(onRejected) {\n            return this.then(null, onRejected);\n        }\n        finally(onFinally) {\n            let C = this.constructor[Symbol.species];\n            if (!C || typeof C !== 'function') {\n                C = ZoneAwarePromise;\n            }\n            const chainPromise = new C(noop);\n            chainPromise[symbolFinally] = symbolFinally;\n            const zone = Zone.current;\n            if (this[symbolState] == UNRESOLVED) {\n                this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n            }\n            else {\n                scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n            }\n            return chainPromise;\n        }\n    }\n    // Protect against aggressive optimizers dropping seemingly unused properties.\n    // E.g. Closure Compiler in advanced mode.\n    ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n    ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n    ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n    ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n    const NativePromise = global[symbolPromise] = global['Promise'];\n    global['Promise'] = ZoneAwarePromise;\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                originalThen.call(this, resolve, reject);\n            });\n            return wrapped.then(onResolve, onReject);\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    function zoneify(fn) {\n        return function (self, args) {\n            let resultPromise = fn.apply(self, args);\n            if (resultPromise instanceof ZoneAwarePromise) {\n                return resultPromise;\n            }\n            let ctor = resultPromise.constructor;\n            if (!ctor[symbolThenPatched]) {\n                patchThen(ctor);\n            }\n            return resultPromise;\n        };\n    }\n    if (NativePromise) {\n        patchThen(NativePromise);\n        patchMethod(global, 'fetch', delegate => zoneify(delegate));\n    }\n    // This is not part of public API, but it is useful for tests, so we expose it.\n    Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n    return ZoneAwarePromise;\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames$1 = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames$1[eventName] = {};\n    zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        task.invoke(task, target, [event]);\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = this || event.target || _global;\n        const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n        if (tasks) {\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                invokeTask(tasks[0], target, event);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    invokeTask(copyTasks[i], target, event);\n                }\n            }\n        }\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return Object.assign(Object.assign({}, options), { passive: true });\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check upatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames$1[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames$1[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames$1[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames$1[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = target[symbol] = target[method];\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                if (prototype.hasOwnProperty(callback)) {\n                    const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                    if (descriptor && descriptor.value) {\n                        descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                        api._redefineProperty(opts.prototype, callback, descriptor);\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                else if (prototype[callback]) {\n                    prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst globalEventHandlersEventNames = [\n    'abort',\n    'animationcancel',\n    'animationend',\n    'animationiteration',\n    'auxclick',\n    'beforeinput',\n    'blur',\n    'cancel',\n    'canplay',\n    'canplaythrough',\n    'change',\n    'compositionstart',\n    'compositionupdate',\n    'compositionend',\n    'cuechange',\n    'click',\n    'close',\n    'contextmenu',\n    'curechange',\n    'dblclick',\n    'drag',\n    'dragend',\n    'dragenter',\n    'dragexit',\n    'dragleave',\n    'dragover',\n    'drop',\n    'durationchange',\n    'emptied',\n    'ended',\n    'error',\n    'focus',\n    'focusin',\n    'focusout',\n    'gotpointercapture',\n    'input',\n    'invalid',\n    'keydown',\n    'keypress',\n    'keyup',\n    'load',\n    'loadstart',\n    'loadeddata',\n    'loadedmetadata',\n    'lostpointercapture',\n    'mousedown',\n    'mouseenter',\n    'mouseleave',\n    'mousemove',\n    'mouseout',\n    'mouseover',\n    'mouseup',\n    'mousewheel',\n    'orientationchange',\n    'pause',\n    'play',\n    'playing',\n    'pointercancel',\n    'pointerdown',\n    'pointerenter',\n    'pointerleave',\n    'pointerlockchange',\n    'mozpointerlockchange',\n    'webkitpointerlockerchange',\n    'pointerlockerror',\n    'mozpointerlockerror',\n    'webkitpointerlockerror',\n    'pointermove',\n    'pointout',\n    'pointerover',\n    'pointerup',\n    'progress',\n    'ratechange',\n    'reset',\n    'resize',\n    'scroll',\n    'seeked',\n    'seeking',\n    'select',\n    'selectionchange',\n    'selectstart',\n    'show',\n    'sort',\n    'stalled',\n    'submit',\n    'suspend',\n    'timeupdate',\n    'volumechange',\n    'touchcancel',\n    'touchmove',\n    'touchstart',\n    'touchend',\n    'transitioncancel',\n    'transitionend',\n    'waiting',\n    'wheel'\n];\nconst documentEventNames = [\n    'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n    'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n    'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n    'visibilitychange', 'resume'\n];\nconst windowEventNames = [\n    'absolutedeviceorientation',\n    'afterinput',\n    'afterprint',\n    'appinstalled',\n    'beforeinstallprompt',\n    'beforeprint',\n    'beforeunload',\n    'devicelight',\n    'devicemotion',\n    'deviceorientation',\n    'deviceorientationabsolute',\n    'deviceproximity',\n    'hashchange',\n    'languagechange',\n    'message',\n    'mozbeforepaint',\n    'offline',\n    'online',\n    'paint',\n    'pageshow',\n    'pagehide',\n    'popstate',\n    'rejectionhandled',\n    'storage',\n    'unhandledrejection',\n    'unload',\n    'userproximity',\n    'vrdisplayconnected',\n    'vrdisplaydisconnected',\n    'vrdisplaypresentchange'\n];\nconst htmlElementEventNames = [\n    'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n    'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n    'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n];\nconst mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\nconst ieElementEventNames = [\n    'activate',\n    'afterupdate',\n    'ariarequest',\n    'beforeactivate',\n    'beforedeactivate',\n    'beforeeditfocus',\n    'beforeupdate',\n    'cellchange',\n    'controlselect',\n    'dataavailable',\n    'datasetchanged',\n    'datasetcomplete',\n    'errorupdate',\n    'filterchange',\n    'layoutcomplete',\n    'losecapture',\n    'move',\n    'moveend',\n    'movestart',\n    'propertychange',\n    'resizeend',\n    'resizestart',\n    'rowenter',\n    'rowexit',\n    'rowsdelete',\n    'rowsinserted',\n    'command',\n    'compassneedscalibration',\n    'deactivate',\n    'help',\n    'mscontentzoom',\n    'msmanipulationstatechanged',\n    'msgesturechange',\n    'msgesturedoubletap',\n    'msgestureend',\n    'msgesturehold',\n    'msgesturestart',\n    'msgesturetap',\n    'msgotpointercapture',\n    'msinertiastart',\n    'mslostpointercapture',\n    'mspointercancel',\n    'mspointerdown',\n    'mspointerenter',\n    'mspointerhover',\n    'mspointerleave',\n    'mspointermove',\n    'mspointerout',\n    'mspointerover',\n    'mspointerup',\n    'pointerout',\n    'mssitemodejumplistitemremoved',\n    'msthumbnailclick',\n    'stop',\n    'storagecommit'\n];\nconst webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\nconst formEventNames = ['autocomplete', 'autocompleteerror'];\nconst detailEventNames = ['toggle'];\nconst frameEventNames = ['load'];\nconst frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\nconst marqueeEventNames = ['bounce', 'finish', 'start'];\nconst XMLHttpRequestEventNames = [\n    'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n    'readystatechange'\n];\nconst IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\nconst websocketEventNames = ['close', 'error', 'open', 'message'];\nconst workerEventNames = ['error', 'message'];\nconst eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter(ip => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const supportsWebSocket = typeof WebSocket !== 'undefined';\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    if (isBrowser) {\n        const internalWindow = window;\n        const ignoreErrorProperties = isIE() ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n        patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n        if (typeof internalWindow['SVGElement'] !== 'undefined') {\n            patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n        }\n        patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n        patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n        patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n        patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n        const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n        if (HTMLMarqueeElement) {\n            patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n        }\n        const Worker = internalWindow['Worker'];\n        if (Worker) {\n            patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n        }\n    }\n    const XMLHttpRequest = _global['XMLHttpRequest'];\n    if (XMLHttpRequest) {\n        // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n        patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget) {\n        patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n    }\n    if (typeof IDBIndex !== 'undefined') {\n        patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n        patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n    }\n    if (supportsWebSocket) {\n        patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n    // define which events will not be patched by `Zone.js`.\n    // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n    // the name consistent with angular repo.\n    // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n    // backwards compatibility.\n    const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n    const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n    if (global[SYMBOL_UNPATCHED_EVENTS]) {\n        global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n    }\n    if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n        Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n            global[SYMBOL_BLACK_LISTED_EVENTS];\n    }\n    api.patchEventPrototype = patchEventPrototype;\n    api.patchEventTarget = patchEventTarget;\n    api.isIEOrEdge = isIEOrEdge;\n    api.ObjectDefineProperty = ObjectDefineProperty;\n    api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n    api.ObjectCreate = ObjectCreate;\n    api.ArraySlice = ArraySlice;\n    api.patchClass = patchClass;\n    api.wrapWithCurrentZone = wrapWithCurrentZone;\n    api.filterProperties = filterProperties;\n    api.attachOriginToPatched = attachOriginToPatched;\n    api._redefineProperty = Object.defineProperty;\n    api.patchCallbacks = patchCallbacks;\n    api.getGlobalObjects = () => ({\n        globalSources,\n        zoneSymbolEventNames: zoneSymbolEventNames$1,\n        eventNames,\n        isBrowser,\n        isMix,\n        isNode,\n        TRUE_STR,\n        FALSE_STR,\n        ZONE_SYMBOL_PREFIX,\n        ADD_EVENT_LISTENER_STR,\n        REMOVE_EVENT_LISTENER_STR\n    });\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nZone.__load_patch('legacy', (global) => {\n    const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n    if (legacyPatch) {\n        legacyPatch();\n    }\n});\nZone.__load_patch('queueMicrotask', (global, Zone, api) => {\n    api.patchMethod(global, 'queueMicrotask', delegate => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n});\nZone.__load_patch('timers', (global) => {\n    const set = 'set';\n    const clear = 'clear';\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n});\nZone.__load_patch('requestAnimationFrame', (global) => {\n    patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n    patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n    patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n});\nZone.__load_patch('blocking', (global, Zone) => {\n    const blockingMethods = ['alert', 'prompt', 'confirm'];\n    for (let i = 0; i < blockingMethods.length; i++) {\n        const name = blockingMethods[i];\n        patchMethod(global, name, (delegate, symbol, name) => {\n            return function (s, args) {\n                return Zone.current.run(delegate, global, args, name);\n            };\n        });\n    }\n});\nZone.__load_patch('EventTarget', (global, Zone, api) => {\n    patchEvent(global, api);\n    eventTargetPatch(global, api);\n    // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n    const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n    if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n        api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n    }\n});\nZone.__load_patch('MutationObserver', (global, Zone, api) => {\n    patchClass('MutationObserver');\n    patchClass('WebKitMutationObserver');\n});\nZone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n    patchClass('IntersectionObserver');\n});\nZone.__load_patch('FileReader', (global, Zone, api) => {\n    patchClass('FileReader');\n});\nZone.__load_patch('on_property', (global, Zone, api) => {\n    propertyDescriptorPatch(api, global);\n});\nZone.__load_patch('customElements', (global, Zone, api) => {\n    patchCustomElements(global, api);\n});\nZone.__load_patch('XHR', (global, Zone) => {\n    // Treat XMLHttpRequest as a macrotask.\n    patchXHR(global);\n    const XHR_TASK = zoneSymbol('xhrTask');\n    const XHR_SYNC = zoneSymbol('xhrSync');\n    const XHR_LISTENER = zoneSymbol('xhrListener');\n    const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n    const XHR_URL = zoneSymbol('xhrURL');\n    const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n    function patchXHR(window) {\n        const XMLHttpRequest = window['XMLHttpRequest'];\n        if (!XMLHttpRequest) {\n            // XMLHttpRequest is not available in service worker\n            return;\n        }\n        const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n        function findPendingTask(target) {\n            return target[XHR_TASK];\n        }\n        let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n        let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n        if (!oriAddListener) {\n            const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n            if (XMLHttpRequestEventTarget) {\n                const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n        }\n        const READY_STATE_CHANGE = 'readystatechange';\n        const SCHEDULED = 'scheduled';\n        function scheduleTask(task) {\n            const data = task.data;\n            const target = data.target;\n            target[XHR_SCHEDULED] = false;\n            target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n            // remove existing event listener\n            const listener = target[XHR_LISTENER];\n            if (!oriAddListener) {\n                oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            }\n            if (listener) {\n                oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n            }\n            const newListener = target[XHR_LISTENER] = () => {\n                if (target.readyState === target.DONE) {\n                    // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                    // readyState=4 multiple times, so we need to check task state here\n                    if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                        // check whether the xhr has registered onload listener\n                        // if that is the case, the task should invoke after all\n                        // onload listeners finish.\n                        // Also if the request failed without response (status = 0), the load event handler\n                        // will not be triggered, in that case, we should also invoke the placeholder callback\n                        // to close the XMLHttpRequest::send macroTask.\n                        // https://github.com/angular/angular/issues/38795\n                        const loadTasks = target[Zone.__symbol__('loadfalse')];\n                        if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                            const oriInvoke = task.invoke;\n                            task.invoke = function () {\n                                // need to load the tasks again, because in other\n                                // load listener, they may remove themselves\n                                const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                for (let i = 0; i < loadTasks.length; i++) {\n                                    if (loadTasks[i] === task) {\n                                        loadTasks.splice(i, 1);\n                                    }\n                                }\n                                if (!data.aborted && task.state === SCHEDULED) {\n                                    oriInvoke.call(task);\n                                }\n                            };\n                            loadTasks.push(task);\n                        }\n                        else {\n                            task.invoke();\n                        }\n                    }\n                    else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                        // error occurs when xhr.send()\n                        target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                    }\n                }\n            };\n            oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n            const storedTask = target[XHR_TASK];\n            if (!storedTask) {\n                target[XHR_TASK] = task;\n            }\n            sendNative.apply(target, data.args);\n            target[XHR_SCHEDULED] = true;\n            return task;\n        }\n        function placeholderCallback() { }\n        function clearTask(task) {\n            const data = task.data;\n            // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n            // to prevent it from firing. So instead, we store info for the event listener.\n            data.aborted = true;\n            return abortNative.apply(data.target, data.args);\n        }\n        const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n            self[XHR_SYNC] = args[2] == false;\n            self[XHR_URL] = args[1];\n            return openNative.apply(self, args);\n        });\n        const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n        const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n        const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n        const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n            if (Zone.current[fetchTaskScheduling] === true) {\n                // a fetch is scheduling, so we are using xhr to polyfill fetch\n                // and because we already schedule macroTask for fetch, we should\n                // not schedule a macroTask for xhr again\n                return sendNative.apply(self, args);\n            }\n            if (self[XHR_SYNC]) {\n                // if the XHR is sync there is no task to schedule, just execute the code.\n                return sendNative.apply(self, args);\n            }\n            else {\n                const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                    task.state === SCHEDULED) {\n                    // xhr request throw error when send\n                    // we should invoke task instead of leaving a scheduled\n                    // pending macroTask\n                    task.invoke();\n                }\n            }\n        });\n        const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n            const task = findPendingTask(self);\n            if (task && typeof task.type == 'string') {\n                // If the XHR has already completed, do nothing.\n                // If the XHR has already been aborted, do nothing.\n                // Fix #569, call abort multiple times before done will cause\n                // macroTask task count be negative number\n                if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                    return;\n                }\n                task.zone.cancelTask(task);\n            }\n            else if (Zone.current[fetchTaskAborting] === true) {\n                // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                return abortNative.apply(self, args);\n            }\n            // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n            // task\n            // to cancel. Do nothing.\n        });\n    }\n});\nZone.__load_patch('geolocation', (global) => {\n    /// GEO_LOCATION\n    if (global['navigator'] && global['navigator'].geolocation) {\n        patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n    }\n});\nZone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n    // handle unhandled promise rejection\n    function findPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(global, evtName);\n            eventTasks.forEach(eventTask => {\n                // windows has added unhandledrejection event listener\n                // trigger the event listener\n                const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                if (PromiseRejectionEvent) {\n                    const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                    eventTask.invoke(evt);\n                }\n            });\n        };\n    }\n    if (global['PromiseRejectionEvent']) {\n        Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n            findPromiseRejectionHandler('unhandledrejection');\n        Zone[zoneSymbol('rejectionHandledHandler')] =\n            findPromiseRejectionHandler('rejectionhandled');\n    }\n});\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"]}